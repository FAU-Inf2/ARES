{
  "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationFile",
  "results" : [ {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "77644",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2219be33a5e53110d26153b9b761bd7a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1004, 4017, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 1, -28842, 11866, -22204, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -19285, -19467, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Returns the extended start position of the given node. Unlike\n\t * {@link ASTNode#getStartPosition()} and {@link ASTNode#getLength()},\n\t * the extended source range may include comments and whitespace\n\t * immediately before or after the normal source range for the node.\n\t * \n\t * @param node the node\n\t * @return the 0-based character index, or <code>-1</code>\n\t *    if no source position information is recorded for this node\n\t * @see #getExtendedLength(ASTNode)\n\t * @since 3.0\n\t */\n\tpublic int getExtendedStartPosition(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Returns the extended start position of the given node. Unlike\n\t * {@link ASTNode#getStartPosition()} and {@link ASTNode#getLength()},\n\t * the extended source range may include comments and whitespace\n\t * immediately before or after the normal source range for the node.\n\t * \n\t * @param node the node\n\t * @return the 0-based character index, or <code>-1</code>\n\t *    if no source position information is recorded for this node\n\t * @see #getExtendedLength(ASTNode)\n\t * @since 3.0\n\t */\n\tpublic int getExtendedStartPosition(ASTNode node)",
      "diff" : "-\t\tif (this.leadingComments != null) {-\t\t\tint[] range = (int[]) this.leadingComments.get(node);+\t\tif (this.leadingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.leadingPtr; i++) {+\t\t\t\tif (this.leadingNodes[i] == node) range = this.leadingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "438070cdfb4af35597a933152c446e4e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1004, 4017, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, 1, -28842, 277, 8986, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -32186, -21685, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "methodModified" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}-\t\t\t\tif (range[0] == -1 && range[1] == -1) {-\t\t\t\t\tASTNode parent = node.getParent();-\t\t\t\t\tif (parent != null && ((parent.getFlags() & ASTNode.ORIGINAL) != 0)) {-\t\t\t\t\t\treturn getExtendedEnd(parent);-\t\t\t\t\t}-\t\t\t\t} else {-\t\t\t\t\tComment lastComment = this.comments[range[1]];-\t\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();-\t\t\t\t}+\t\t\t\tComment lastComment = this.comments[range[1]];+\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "88261d164b5728e03fcc1bfe9b1ead72",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1004, 4017, 1002, 4029, 2000, 2000, 3007, 1004, 4070, 29277, -31184, 5162, -10958, 1002, 4120, 2699, 2000, 2997, 1006, 1002, 4114, 1529, 2000, 3002, 1027, 4070, -15189, 2218, 0, 105, 1002, 4029, 2109, 2000, 3002, 1004, 4017, 1004, 4070, -15189, 2218, 0, 105, 1002, 4017, 2090, 2000, 3001, 1002, 4070, 1541, 2000, 3005, 1002, 4063, 2679, 2000, 3003, 1000, 4132, 4063, 1004, 4070, -32552, 31185, -19285, -19467, 1004, 4070, 29805, -27439, 11866, -22204, 1006, 1007, 4088, 4061, 1002, 4071, 2274, 2000, 3003, 1002, 4018, 2611, 2000, 3004, 1002, 4017, 1999, 2000, 3002, 1002, 4070, 1410, 2000, 3003, 1002, 4120, 2000, 2000, 3004, 1002, 4017, 2001, 2000, 3004, 1002, 4063, 1541, 2000, 3003, 1002, 4070, 2461, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1002, 4070, 2270, 2000, 3007, 1007, 4077, 4027, 1002, 4070, 2010, 2000, 3002, 1002, 4076, 2601, 2000, 3001, 1002, 4063, 2530, 2000, 3004, 1000, 4132, 4063, 1002, 4070, 2530, 2000, 3003, 1000, 4070, 0, 105, 4076, 1001, 4070, 29277, -31184, 1001, 4016, 1001, 4023, 1001, 4063, 1001, 4070, 1, -28842, 1001, 4070, 51, -20990, 1001, 4115, 954, 31289, 960, -9170, 1, -28594, 1001, 4118, 1001, 4029, 1001, 4029, 1001, 4118, 1001, 4029, 1001, 4018, 1001, 4828, 979, -20136, 220, 8068, 1001, 4023, 1001, 4063, 1001, 4070, 10690, 11168, 1001, 4070, 220, 8068, 1001, 4017, 1001, 4008, 1001, 4023, 1008, 4061, 1008, 4027, 1008, 4061, 1008, 4047, 1001, 4023, 1001, 4070, -20314, -19540 ],
        "treeSize" : 14
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Return all leading comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no leading comment\n\t */\n\tComment[] getLeadingComments(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Return all leading comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no leading comment\n\t */\n\tComment[] getLeadingComments(ASTNode node)",
      "diff" : "-\t\tif (this.leadingComments != null) {-\t\t\tint[] range = (int[]) this.leadingComments.get(node);+\t\tif (this.leadingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.leadingPtr; i++) {+\t\t\t\tif (this.leadingNodes[i] == node) range = this.leadingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "34bdb6c29264026f056d746e4b513b9a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1004, 4017, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, 1, -28842, 277, 8986, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -32186, -21685, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "treeSize" : 12
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2219be33a5e53110d26153b9b761bd7a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1004, 4017, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 1, -28842, 11866, -22204, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -19285, -19467, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "methodModified" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}-\t\t\t\tif (range[0] == -1 && range[1] == -1) {-\t\t\t\t\tASTNode parent = node.getParent();-\t\t\t\t\tif (parent != null && ((parent.getFlags() & ASTNode.ORIGINAL) != 0)) {-\t\t\t\t\t\treturn getExtendedEnd(parent);-\t\t\t\t\t}-\t\t\t\t} else {-\t\t\t\t\tComment lastComment = this.comments[range[1]];-\t\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();-\t\t\t\t}+\t\t\t\tComment lastComment = this.comments[range[1]];+\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "88261d164b5728e03fcc1bfe9b1ead72",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1004, 4017, 1002, 4029, 2000, 2000, 3007, 1004, 4070, 29277, -31184, 5162, -10958, 1002, 4120, 2699, 2000, 2997, 1006, 1002, 4114, 1529, 2000, 3002, 1027, 4070, -15189, 2218, 0, 105, 1002, 4029, 2109, 2000, 3002, 1004, 4017, 1004, 4070, -15189, 2218, 0, 105, 1002, 4017, 2090, 2000, 3001, 1002, 4070, 1541, 2000, 3005, 1002, 4063, 2679, 2000, 3003, 1000, 4132, 4063, 1004, 4070, -32552, 31185, -19285, -19467, 1004, 4070, 29805, -27439, 11866, -22204, 1006, 1007, 4088, 4061, 1002, 4071, 2274, 2000, 3003, 1002, 4018, 2611, 2000, 3004, 1002, 4017, 1999, 2000, 3002, 1002, 4070, 1410, 2000, 3003, 1002, 4120, 2000, 2000, 3004, 1002, 4017, 2001, 2000, 3004, 1002, 4063, 1541, 2000, 3003, 1002, 4070, 2461, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1002, 4070, 2270, 2000, 3007, 1007, 4077, 4027, 1002, 4070, 2010, 2000, 3002, 1002, 4076, 2601, 2000, 3001, 1002, 4063, 2530, 2000, 3004, 1000, 4132, 4063, 1002, 4070, 2530, 2000, 3003, 1000, 4070, 0, 105, 4076, 1001, 4070, 29277, -31184, 1001, 4016, 1001, 4023, 1001, 4063, 1001, 4070, 1, -28842, 1001, 4070, 51, -20990, 1001, 4115, 954, 31289, 960, -9170, 1, -28594, 1001, 4118, 1001, 4029, 1001, 4029, 1001, 4118, 1001, 4029, 1001, 4018, 1001, 4828, 979, -20136, 220, 8068, 1001, 4023, 1001, 4063, 1001, 4070, 10690, 11168, 1001, 4070, 220, 8068, 1001, 4017, 1001, 4008, 1001, 4023, 1008, 4061, 1008, 4027, 1008, 4061, 1008, 4047, 1001, 4023, 1001, 4070, -20314, -19540 ],
        "treeSize" : 14
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
      "fileName" : "/src/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public int getExtendedEnd(ASTNode node){\n  int end=node.getStartPosition() + node.getLength();\n  if (this.trailingComments != null) {\n    if (range != null) {\n      if (range[0] == -1 && range[1] == -1) {\n        ASTNode parent=node.getParent();\n        if (parent != null && ((parent.getFlags() & ASTNode.ORIGINAL) != 0)) {\n          return getExtendedEnd(parent);\n        }\n      }\n else {\n        Comment lastComment=this.comments[range[1]];\n        end=lastComment.getStartPosition() + lastComment.getLength();\n      }\n    }\n  }\n  return end - 1;\n}\n",
        "accuracyTokens" : 0.5,
        "accuracyCharacters" : 0.5087719298245614
      } ],
      "memberId" : "88261d164b5728e03fcc1bfe9b1ead72"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
      "fileName" : "/src/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Return all trailing comments of a given node.\n * @param node\n * @return an array of Comment or null if there's no trailing comment\n */\nComment[] getTrailingComments(ASTNode node){\n  if (this.trailingComments != null) {\n    if (range != null) {\n      int length=range[1] - range[0] + 1;\n      Comment[] trailComments=new Comment[length];\n      System.arraycopy(this.comments,range[0],trailComments,0,length);\n      return trailComments;\n    }\n  }\n  return null;\n}\n",
        "accuracyTokens" : 0.5490196078431373,
        "accuracyCharacters" : 0.5219399538106235
      } ],
      "memberId" : "2219be33a5e53110d26153b9b761bd7a"
    } ],
    "foundMembers" : 2,
    "numberOfRecommendationSets" : 2,
    "precision" : 1.0,
    "recall" : 0.5,
    "accuracyTokensMin" : 0.5245098039215687,
    "accuracyCharactersMin" : 0.5153559418175925,
    "accuracyTokensMax" : 0.5245098039215687,
    "accuracyCharactersMax" : 0.5153559418175925,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 4221255912,
    "patternUseTimeInNanoSec" : 5150710540
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "82429",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar()",
      "methodModified" : "\npublic final int getNextChar()",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\treturn -1;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);--\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t\treturn this.currentCharacter;--\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t\t\tgetNextUnicodeChar();+\t\t} else {-\t\t\treturn this.currentCharacter;+\t\treturn this.currentCharacter;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6a0f1c695deb39b2bcec99a2ade86d73",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1006, 1006, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1027, 4070, -24471, 6270, 0, 101, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4061, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, 14640, -32345, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextChar(char testedChar)",
      "methodModified" : "\npublic final boolean getNextChar(char testedChar)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-+\t\tthis.unicodeAsBackSlash = false;+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "60fbb4d926ba94565f7e1e8b9a24ba27",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 17,
          "methodNumber2" : 18
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4063, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1000, 4119, 4077, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4017, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "methodModified" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "diff" : "-\t\t} else {-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t//need the unicode buffer+\t\tif (this.withoutUnicodePtr == 0) {+\t\t\t//buffer all the entries that have been left aside....+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);+\t\t}+\t\t//fill the buffer with the char+\t\tunicodeStoreAt(++this.withoutUnicodePtr);",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "aecc2344a786c1771ddbb7a9ef9ef667",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 24
        },
        "pattern" : [ 1006, 1006, 1006, 1008, 4061 ],
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "methodModified" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "diff" : "-\t\tint c1, c2, c3, c4;-\t\tint unicodeSize = 6;-\t\tthis.currentPosition++;-\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\tthis.currentPosition++;-\t\t\tunicodeSize++;-\t\t}--\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t|| c1 < 0)-\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);-\t\t}--\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\tif (CharOperation.isWhitespace(this.currentCharacter))-\t\t\treturn true;--\t\t//buffer the new char which is not a white space-\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t//this.withoutUnicodePtr == 1 is true here-\t\treturn false;+\t\tgetNextUnicodeChar();+\t\treturn CharOperation.isWhitespace(this.currentCharacter);",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "975d644a692378a3469a9d5db5c4341d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 27,
          "methodNumber2" : 30
        },
        "pattern" : [ 1002, 4023, 1839, 2001, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1002, 4023, 2200, 2000, 3000, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -24471, 6270, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4061, 1008, 4130, 1001, 4112, 1001, 4828, 979, -20136, -8963, -29348, 1001, 4070, -28989, 29611, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4119, 1008, 4027, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "methodModified" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (this.currentCharacter == testedChar1) {+\t\t\t\tresult = 0;+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {-\t\t\t\treturn 2;+\t\t\t\tthis.withoutUnicodePtr--;+\t\t\t\tresult = -1;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (this.currentCharacter == testedChar1)-\t\t\t\tresult = 0;-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (this.currentCharacter == testedChar1)+\t\t} else {+\t\t\tif (this.currentCharacter == testedChar1) {-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {+\t\t\t\tthis.currentPosition = temp;+\t\t\t\treturn -1;+\t\t\t}+\t\tthis.currentPosition = temp;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "efedd176357ab18507c882a7b92b9551",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 18,
          "methodNumber2" : 19
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4077, 2440, 2002, 3003, 1002, 4118, 2540, 2000, 2997, 1002, 4029, 2710, 2000, 2998, 1004, 4070, 0, 3119, -14259, -14307, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1002, 4070, 2000, 2000, 3004, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3068, 2000, 3004, 1007, 4061, 4027, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2998, 1007, 4061, 4027, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4047, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "methodModified" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8a605201cefafc8f97c63ab0eb8c7020",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 19,
          "methodNumber2" : 20
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "methodModified" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "deda425938a202d1691dfc2661f9b00c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 20,
          "methodNumber2" : 21
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "methodModified" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "diff" : "+\tint temp2 = this.withoutUnicodePtr;-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {+\t\t} else {+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;+\t\tthis.withoutUnicodePtr = temp2;+\t\treturn false;+\t} catch(InvalidInputException e) {+\t\tthis.currentPosition = temp;+\t\tthis.withoutUnicodePtr = temp2;",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b7edf6bec1f8971949eec0ce9f13346",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 22
        },
        "pattern" : [ 1006, 1002, 4063, 2110, 2000, 3004, 1002, 4070, 1961, 2000, 3002, 1000, 4070, 1682, 14046, 4067, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3004, 1002, 4063, 1399, 2000, 3001, 1002, 4070, 1861, 2000, 3003, 1002, 4070, 2141, 2000, 3006, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3002, 1002, 4063, 2010, 2000, 3004, 1002, 4070, 2140, 2000, 3006, 1004, 4070, -13680, 26651, -30406, 31161, 1002, 4077, 2440, 2001, 3006, 1002, 4063, 2600, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3006, 1004, 4070, 0, 3120, 1682, 14046, 1027, 4070, -24471, 6270, 0, 101, 1004, 4070, 0, 3118, 1682, 14046, 1000, 4134, 4128, 1002, 4071, 2731, 2000, 3002, 1002, 4061, 3069, 2000, 3003, 1002, 4077, 2440, 2001, 3007, 1002, 4063, 1590, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3007, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3118, 1001, 4070, 0, 3120, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -13680, 26651, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4063, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4090, 1001, 4063, 1001, 4132, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4070, -11091, -9463 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar()",
      "methodModified" : "\npublic final int getNextChar()",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\treturn -1;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);--\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t\treturn this.currentCharacter;--\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t\t\tgetNextUnicodeChar();+\t\t} else {-\t\t\treturn this.currentCharacter;+\t\treturn this.currentCharacter;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a58b82d4fd42914a1ea773902a4c8801",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1006, 1006, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1027, 4070, -24471, 6270, 0, 101, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4061, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, 14640, -32345, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextChar(char testedChar)",
      "methodModified" : "\npublic final boolean getNextChar(char testedChar)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-+\t\tthis.unicodeAsBackSlash = false;+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "952c1a1303a96c20a49e162a53101d3c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 17,
          "methodNumber2" : 18
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4063, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1000, 4119, 4077, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4017, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "methodModified" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (this.currentCharacter == testedChar1) {+\t\t\t\tresult = 0;+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {-\t\t\t\treturn 2;+\t\t\t\tthis.withoutUnicodePtr--;+\t\t\t\tresult = -1;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (this.currentCharacter == testedChar1)-\t\t\t\tresult = 0;-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (this.currentCharacter == testedChar1)+\t\t} else {+\t\t\tif (this.currentCharacter == testedChar1) {-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {+\t\t\t\tthis.currentPosition = temp;+\t\t\t\treturn -1;+\t\t\t}+\t\tthis.currentPosition = temp;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8e04cccdb227cf7b8a142afb94e9bfe2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 18,
          "methodNumber2" : 19
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4077, 2440, 2002, 3003, 1002, 4118, 2540, 2000, 2997, 1002, 4029, 2710, 2000, 2998, 1004, 4070, 0, 3119, -14259, -14307, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1002, 4070, 2000, 2000, 3004, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3068, 2000, 3004, 1007, 4061, 4027, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2998, 1007, 4061, 4027, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4047, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "methodModified" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "43c48c3ccac8484345aa37c37d8ee2da",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 19,
          "methodNumber2" : 20
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "methodModified" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "23c40d354e8ee0bba244b05440982fe9",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 20,
          "methodNumber2" : 21
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "methodModified" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "diff" : "+\tint temp2 = this.withoutUnicodePtr;-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {+\t\t} else {+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;+\t\tthis.withoutUnicodePtr = temp2;+\t\treturn false;+\t} catch(InvalidInputException e) {+\t\tthis.currentPosition = temp;+\t\tthis.withoutUnicodePtr = temp2;",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6670177973121cc15529d1174fd6c29f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 22
        },
        "pattern" : [ 1006, 1002, 4063, 2110, 2000, 3004, 1002, 4070, 1961, 2000, 3002, 1000, 4070, 1682, 14046, 4067, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3004, 1002, 4063, 1399, 2000, 3001, 1002, 4070, 1861, 2000, 3003, 1002, 4070, 2141, 2000, 3006, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3002, 1002, 4063, 2010, 2000, 3004, 1002, 4070, 2140, 2000, 3006, 1004, 4070, -13680, 26651, -30406, 31161, 1002, 4077, 2440, 2001, 3006, 1002, 4063, 2600, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3006, 1004, 4070, 0, 3120, 1682, 14046, 1027, 4070, -24471, 6270, 0, 101, 1004, 4070, 0, 3118, 1682, 14046, 1000, 4134, 4128, 1002, 4071, 2731, 2000, 3002, 1002, 4061, 3069, 2000, 3003, 1002, 4077, 2440, 2001, 3007, 1002, 4063, 1590, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3007, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3118, 1001, 4070, 0, 3120, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -13680, 26651, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4063, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4090, 1001, 4063, 1001, 4132, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4070, -11091, -9463 ],
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "methodModified" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "diff" : "-\t\t} else {-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t//need the unicode buffer+\t\tif (this.withoutUnicodePtr == 0) {+\t\t\t//buffer all the entries that have been left aside....+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);+\t\t}+\t\t//fill the buffer with the char+\t\tunicodeStoreAt(++this.withoutUnicodePtr);",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "54b4132bfcb1f628f5734c005678bfd3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 24
        },
        "pattern" : [ 1006, 1006, 1006, 1008, 4061 ],
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "methodModified" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "diff" : "-\t\tint c1, c2, c3, c4;-\t\tint unicodeSize = 6;-\t\tthis.currentPosition++;-\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\tthis.currentPosition++;-\t\t\tunicodeSize++;-\t\t}--\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t|| c1 < 0)-\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);-\t\t}--\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\tif (CharOperation.isWhitespace(this.currentCharacter))-\t\t\treturn true;--\t\t//buffer the new char which is not a white space-\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t//this.withoutUnicodePtr == 1 is true here-\t\treturn false;+\t\tgetNextUnicodeChar();+\t\treturn CharOperation.isWhitespace(this.currentCharacter);",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e2cb7468f096ba0a730e7cb5bd3db98b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 27,
          "methodNumber2" : 30
        },
        "pattern" : [ 1002, 4023, 1839, 2001, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1002, 4023, 2200, 2000, 3000, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -24471, 6270, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4061, 1008, 4130, 1001, 4112, 1001, 4828, 979, -20136, -8963, -29348, 1001, 4070, -28989, 29611, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4119, 1008, 4027, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4119 ],
        "treeSize" : 15
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "methodModified" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "diff" : "-\t\tint c1, c2, c3, c4;-\t\tint unicodeSize = 6;-\t\tthis.currentPosition++;-\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\tthis.currentPosition++;-\t\t\tunicodeSize++;-\t\t}--\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t|| c1 < 0)-\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);-\t\t}--\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\tif (CharOperation.isWhitespace(this.currentCharacter))-\t\t\treturn true;--\t\t//buffer the new char which is not a white space-\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t//this.withoutUnicodePtr == 1 is true here-\t\treturn false;+\t\tgetNextUnicodeChar();+\t\treturn CharOperation.isWhitespace(this.currentCharacter);",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "975d644a692378a3469a9d5db5c4341d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 27,
          "methodNumber2" : 30
        },
        "pattern" : [ 1002, 4023, 1839, 2001, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1002, 4023, 2200, 2000, 3000, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -24471, 6270, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4061, 1008, 4130, 1001, 4112, 1001, 4828, 979, -20136, -8963, -29348, 1001, 4070, -28989, 29611, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4119, 1008, 4027, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextChar(char testedChar)",
      "methodModified" : "\npublic final boolean getNextChar(char testedChar)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-+\t\tthis.unicodeAsBackSlash = false;+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "952c1a1303a96c20a49e162a53101d3c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 17,
          "methodNumber2" : 18
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4063, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1000, 4119, 4077, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4017, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "treeSize" : 17
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public boolean getNextCharAsJavaIdentifierPart(){\n  if (this.currentPosition >= this.source.length) {\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.5569620253164557,
        "accuracyCharacters" : 0.3780744905130007
      } ],
      "memberId" : "8b7edf6bec1f8971949eec0ce9f13346"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean getNextCharAsDigit() throws InvalidInputException {\n  if (this.currentPosition >= this.source.length) {\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (!isDigit(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (!isDigit(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.6956521739130435,
        "accuracyCharacters" : 0.3909164639091646
      } ],
      "memberId" : "8a605201cefafc8f97c63ab0eb8c7020"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean getNextChar(char testedChar){\n  if (this.currentPosition >= this.source.length) {\n    this.unicodeAsBackSlash=false;\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (this.currentCharacter != testedChar) {\n        this.currentPosition=temp;\n        return false;\n      }\n      this.unicodeAsBackSlash=this.currentCharacter == '\\\\';\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (this.currentCharacter != testedChar) {\n        this.currentPosition=temp;\n        return false;\n      }\n      this.unicodeAsBackSlash=false;\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.unicodeAsBackSlash=false;\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.6625,
        "accuracyCharacters" : 0.38694158075601376
      } ],
      "memberId" : "60fbb4d926ba94565f7e1e8b9a24ba27"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final int getNextChar(){\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      this.unicodeAsBackSlash=this.currentCharacter == '\\\\';\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return this.currentCharacter;\n    }\n else {\n      this.unicodeAsBackSlash=false;\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return this.currentCharacter;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    return -1;\n  }\n}\n",
        "accuracyTokens" : 0.59,
        "accuracyCharacters" : 0.4646017699115044
      } ],
      "memberId" : "6a0f1c695deb39b2bcec99a2ade86d73"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException {\n  try {\n    this.wasAcr=false;\n    if (CharOperation.isWhitespace(this.currentCharacter)) {\n      return true;\n    }\n    unicodeStoreAt(++this.withoutUnicodePtr);\n    return false;\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition--;\n    throw new InvalidInputException(INVALID_UNICODE_ESCAPE);\n  }\n}\n",
        "accuracyTokens" : 0.6818181818181818,
        "accuracyCharacters" : 0.4226579520697168
      } ],
      "memberId" : "975d644a692378a3469a9d5db5c4341d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean getNextCharAsDigit(int radix){\n  if (this.currentPosition >= this.source.length) {\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (Character.digit(this.currentCharacter,radix) == -1) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (Character.digit(this.currentCharacter,radix) == -1) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.7162162162162162,
        "accuracyCharacters" : 0.3947163947163947
      } ],
      "memberId" : "deda425938a202d1691dfc2661f9b00c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final int getNextChar(char testedChar1,char testedChar2){\n  if (this.currentPosition >= this.source.length) {\n    return -1;\n  }\n  int temp=this.currentPosition;\n  try {\n    int result;\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (this.currentCharacter == testedChar1) {\n        result=0;\n      }\n else       if (this.currentCharacter == testedChar2) {\n        result=1;\n      }\n else {\n        this.currentPosition=temp;\n        return -1;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return result;\n    }\n else {\n      if (this.currentCharacter == testedChar1) {\n        result=0;\n      }\n else       if (this.currentCharacter == testedChar2) {\n        result=1;\n      }\n else {\n        this.currentPosition=temp;\n        return -1;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return result;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return -1;\n  }\n}\n",
        "accuracyTokens" : 0.7456647398843931,
        "accuracyCharacters" : 0.3820577164366374
      } ],
      "memberId" : "efedd176357ab18507c882a7b92b9551"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "c83f12517cdac51319ba031385bd9a380905c315",
      "fileName" : "/src/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public boolean getNextCharAsJavaIdentifierPart(){\n  if (this.currentPosition >= this.source.length) {\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.5569620253164557,
        "accuracyCharacters" : 0.3780744905130007
      } ],
      "memberId" : "6670177973121cc15529d1174fd6c29f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "c83f12517cdac51319ba031385bd9a380905c315",
      "fileName" : "/src/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean getNextCharAsDigit() throws InvalidInputException {\n  if (this.currentPosition >= this.source.length) {\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (!isDigit(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (!isDigit(this.currentCharacter)) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.6956521739130435,
        "accuracyCharacters" : 0.3909164639091646
      } ],
      "memberId" : "43c48c3ccac8484345aa37c37d8ee2da"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "c83f12517cdac51319ba031385bd9a380905c315",
      "fileName" : "/src/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean getNextChar(char testedChar){\n  if (this.currentPosition >= this.source.length) {\n    this.unicodeAsBackSlash=false;\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (this.currentCharacter != testedChar) {\n        this.currentPosition=temp;\n        return false;\n      }\n      this.unicodeAsBackSlash=this.currentCharacter == '\\\\';\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (this.currentCharacter != testedChar) {\n        this.currentPosition=temp;\n        return false;\n      }\n      this.unicodeAsBackSlash=false;\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.unicodeAsBackSlash=false;\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.6625,
        "accuracyCharacters" : 0.38694158075601376
      } ],
      "memberId" : "952c1a1303a96c20a49e162a53101d3c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "c83f12517cdac51319ba031385bd9a380905c315",
      "fileName" : "/src/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final int getNextChar(){\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      this.unicodeAsBackSlash=this.currentCharacter == '\\\\';\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return this.currentCharacter;\n    }\n else {\n      this.unicodeAsBackSlash=false;\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return this.currentCharacter;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    return -1;\n  }\n}\n",
        "accuracyTokens" : 0.59,
        "accuracyCharacters" : 0.4646017699115044
      } ],
      "memberId" : "a58b82d4fd42914a1ea773902a4c8801"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "c83f12517cdac51319ba031385bd9a380905c315",
      "fileName" : "/src/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException {\n  try {\n    this.wasAcr=false;\n    if (CharOperation.isWhitespace(this.currentCharacter)) {\n      return true;\n    }\n    unicodeStoreAt(++this.withoutUnicodePtr);\n    return false;\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition--;\n    throw new InvalidInputException(INVALID_UNICODE_ESCAPE);\n  }\n}\n",
        "accuracyTokens" : 0.6818181818181818,
        "accuracyCharacters" : 0.4226579520697168
      } ],
      "memberId" : "e2cb7468f096ba0a730e7cb5bd3db98b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "c83f12517cdac51319ba031385bd9a380905c315",
      "fileName" : "/src/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final boolean getNextCharAsDigit(int radix){\n  if (this.currentPosition >= this.source.length) {\n    return false;\n  }\n  int temp=this.currentPosition;\n  try {\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (Character.digit(this.currentCharacter,radix) == -1) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return true;\n    }\n else {\n      if (Character.digit(this.currentCharacter,radix) == -1) {\n        this.currentPosition=temp;\n        return false;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return true;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return false;\n  }\n}\n",
        "accuracyTokens" : 0.7162162162162162,
        "accuracyCharacters" : 0.3947163947163947
      } ],
      "memberId" : "23c40d354e8ee0bba244b05440982fe9"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "c83f12517cdac51319ba031385bd9a380905c315",
      "fileName" : "/src/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public final int getNextChar(char testedChar1,char testedChar2){\n  if (this.currentPosition >= this.source.length) {\n    return -1;\n  }\n  int temp=this.currentPosition;\n  try {\n    int result;\n    if (((this.currentCharacter=this.source[this.currentPosition++]) == '\\\\') && (this.source[this.currentPosition] == 'u')) {\n      if (this.currentCharacter == testedChar1) {\n        result=0;\n      }\n else       if (this.currentCharacter == testedChar2) {\n        result=1;\n      }\n else {\n        this.currentPosition=temp;\n        return -1;\n      }\n      if (this.withoutUnicodePtr == 0) {\n        unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n      }\n      unicodeStoreAt(++this.withoutUnicodePtr);\n      return result;\n    }\n else {\n      if (this.currentCharacter == testedChar1) {\n        result=0;\n      }\n else       if (this.currentCharacter == testedChar2) {\n        result=1;\n      }\n else {\n        this.currentPosition=temp;\n        return -1;\n      }\n      if (this.withoutUnicodePtr != 0) {\n        unicodeStoreAt(++this.withoutUnicodePtr);\n      }\n      return result;\n    }\n  }\n catch (  IndexOutOfBoundsException e) {\n    this.currentPosition=temp;\n    return -1;\n  }\n}\n",
        "accuracyTokens" : 0.7456647398843931,
        "accuracyCharacters" : 0.3820577164366374
      } ],
      "memberId" : "8e04cccdb227cf7b8a142afb94e9bfe2"
    } ],
    "foundMembers" : 14,
    "numberOfRecommendationSets" : 14,
    "precision" : 1.0,
    "recall" : 0.875,
    "accuracyTokensMin" : 0.6641161910211844,
    "accuracyCharactersMin" : 0.40285233833034745,
    "accuracyTokensMax" : 0.6641161910211844,
    "accuracyCharactersMax" : 0.40285233833034745,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 10124570165,
    "patternUseTimeInNanoSec" : 13414460056
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "114007",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\nvoid setText(String string, int flags)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8881ed01156d220a6231d68fa02dd324",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e1a728a768eb01ea5cb0d1b9a5a90d1bf5f21ca2",
          "commitId2" : "8f81b79ff5e07c725cebde15a31f883d8f49f7d0",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 105,
          "methodNumber2" : 107
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/** \n * If the argument is <code>true</code>, puts the receiver\n * in a drawing mode where the resulting color in the destination\n * is the <em>exclusive or</em> of the color values in the source\n * and the destination, and if the argument is <code>false</code>,\n * puts the receiver in a drawing mode where the destination color\n * is replaced with the source color value.\n * <p>\n * Note that this mode in fundamentally unsupportable on certain\n * platforms, notably Carbon (Mac OS X). Clients that want their\n * code to run on all platforms need to avoid this method.\n * </p>\n *\n * @param xor if <code>true</code>, then <em>xor</em> mode is used, otherwise <em>source copy</em> mode is used\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @deprecated this functionality is not supported on some platforms\n */\npublic void setXORMode(boolean xor)",
      "diff" : "-\tdata.state &= ~LINE_WIDTH;-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}+\tdata.state &= ~LINE_WIDTH;\t",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "3d4c2e11159fb027786dd40d52e0e259",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "915aaff2edbff5a7ca1ccadd3ba2c8b24cab8d4b",
          "commitId2" : "bfd4e25b25ada55deaded6f49ea94bad3c2c1d5f",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 97,
          "methodNumber2" : 99
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "Use uppercase for constant names",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b9d0f0bc1407a5805780ddc7a36624c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
          "commitId2" : "32cbedc945c7249fe03a0ee60ec5832b06643cb1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 103,
          "methodNumber2" : 105
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "Use uppercase for constant names",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a9e871b4750f719d769d864a81e24d39",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
          "commitId2" : "32cbedc945c7249fe03a0ee60ec5832b06643cb1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 102,
          "methodNumber2" : 104
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "treeSize" : 6
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/** \n * If the argument is <code>true</code>, puts the receiver\n * in a drawing mode where the resulting color in the destination\n * is the <em>exclusive or</em> of the color values in the source\n * and the destination, and if the argument is <code>false</code>,\n * puts the receiver in a drawing mode where the destination color\n * is replaced with the source color value.\n * <p>\n * Note that this mode in fundamentally unsupportable on certain\n * platforms, notably Carbon (Mac OS X). Clients that want their\n * code to run on all platforms need to avoid this method.\n * </p>\n *\n * @param xor if <code>true</code>, then <em>xor</em> mode is used, otherwise <em>source copy</em> mode is used\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @deprecated this functionality is not supported on some platforms\n */\npublic void setXORMode(boolean xor)",
      "diff" : "-\tdata.state &= ~LINE_WIDTH;-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}+\tdata.state &= ~LINE_WIDTH;\t",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "3d4c2e11159fb027786dd40d52e0e259",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "915aaff2edbff5a7ca1ccadd3ba2c8b24cab8d4b",
          "commitId2" : "bfd4e25b25ada55deaded6f49ea94bad3c2c1d5f",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 97,
          "methodNumber2" : 99
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "Use uppercase for constant names",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a9e871b4750f719d769d864a81e24d39",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
          "commitId2" : "32cbedc945c7249fe03a0ee60ec5832b06643cb1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 102,
          "methodNumber2" : 104
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "treeSize" : 6
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e1a728a768eb01ea5cb0d1b9a5a90d1bf5f21ca2",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 105,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n * @param lineWidth the width of a line\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.lineWidth == lineWidth) {\n    return;\n  }\n  data.lineWidth=lineWidth;\n  data.state&=~LINE_WIDTH;\n}\n",
        "accuracyTokens" : 0.9375,
        "accuracyCharacters" : 0.8156424581005587
      } ],
      "memberId" : "8881ed01156d220a6231d68fa02dd324"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "915aaff2edbff5a7ca1ccadd3ba2c8b24cab8d4b",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 97,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n * @param lineWidth the width of a line\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.lineWidth == lineWidth) {\n    return;\n  }\n  data.lineWidth=lineWidth;\n  data.state&=~LINE_WIDTH;\n}\n",
        "accuracyTokens" : 0.9375,
        "accuracyCharacters" : 0.8100558659217877
      } ],
      "memberId" : "3d4c2e11159fb027786dd40d52e0e259"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 103,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n * @param lineWidth the width of a line\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.lineWidth == lineWidth) {\n    return;\n  }\n  data.lineWidth=lineWidth;\n  data.state&=~LINE_WIDTH;\n}\n",
        "accuracyTokens" : 0.9375,
        "accuracyCharacters" : 0.8156424581005587
      } ],
      "memberId" : "8b9d0f0bc1407a5805780ddc7a36624c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 102,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n * @param lineWidth the width of a line\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.lineWidth == lineWidth) {\n    return;\n  }\n  data.lineWidth=lineWidth;\n  data.state&=~LINE_WIDTH;\n}\n",
        "accuracyTokens" : 0.9375,
        "accuracyCharacters" : 0.8156424581005587
      } ],
      "memberId" : "a9e871b4750f719d769d864a81e24d39"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9375,
    "accuracyCharactersMin" : 0.8142458100558659,
    "accuracyTokensMax" : 0.9375,
    "accuracyCharactersMax" : 0.8142458100558659,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 3113988162,
    "patternUseTimeInNanoSec" : 8310899239
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "139329_1",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nLRESULT WM_KEYDOWN (int wParam, int lParam)",
      "methodModified" : "\n\nLRESULT WM_KEYDOWN (int wParam, int lParam)",
      "diff" : "-\tif (focusIndex == -1) return result;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return result;-\t\t\tevent.item = item;-\t\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);-\t\t\titem.expanded = !item.expanded;-\t\t\tshowItem (focusIndex);+\t\t\tevent.item = focusItem;+\t\t\tsendEvent (focusItem.expanded ? SWT.Collapse : SWT.Expand, event);+\t\t\tfocusItem.expanded = !focusItem.expanded;+\t\t\tshowItem (focusItem);-\t\tcase OS.VK_UP:+\t\tcase OS.VK_UP: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw (true);-\t\t\t\tfocusIndex--;-\t\t\t\titems [focusIndex].redraw (true);+\t\t\t\tfocusItem.redraw (true);+\t\t\t\tfocusItem = items [focusIndex - 1];+\t\t\t\tfocusItem.redraw (true);-\t\tcase OS.VK_DOWN:+\t\t}+\t\tcase OS.VK_DOWN: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw (true);-\t\t\t\tfocusIndex++;-\t\t\t\titems [focusIndex].redraw (true);+\t\t\t\tfocusItem.redraw (true);+\t\t\t\tfocusItem = items [focusIndex + 1];+\t\t\t\tfocusItem.redraw (true);+\t\t}",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "b1ed75a2f77bb03a8805ce07268cc8b5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 32,
          "methodNumber2" : 32
        },
        "pattern" : [ 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1006, 1006, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2997, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, 1533, -6208, 24846, 6155, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1000, 4070, 24846, 6155, 4017, 1000, 4120, 4017, 1007, 4061, 4141, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 24846, 6155, 4023, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1471, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2995, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4076, 1001, 4070, -16206, 10970, 1008, 4084, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "methodModified" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "diff" : "-\tif (focusIndex == -1) return result;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return result;-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight()); +\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight()); -\t\tevent.item = item;-\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tevent.item = focusItem;+\t\tsendEvent (focusItem.expanded ? SWT.Collapse : SWT.Expand, event);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d8393f7d77e8e39197011a14efa8e325",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 35,
          "methodNumber2" : 35
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid onKeyDown (Event event)",
      "methodModified" : "\n\nvoid onKeyDown (Event event)",
      "diff" : "-\tif (focusIndex == -1) return;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return;-\t\t\tev.item = item;-\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);-\t\t\titem.expanded = !item.expanded;-\t\t\tshowItem (focusIndex);+\t\t\tev.item = focusItem;+\t\t\tsendEvent (focusItem.expanded ? SWT.Collapse :SWT.Expand, ev);+\t\t\tfocusItem.expanded = !focusItem.expanded;+\t\t\tshowItem (focusItem);-\t\tcase SWT.ARROW_UP:+\t\tcase SWT.ARROW_UP: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw ();-\t\t\t\tfocusIndex--;-\t\t\t\titems [focusIndex].redraw ();+\t\t\t\tfocusItem.redraw ();+\t\t\t\tfocusItem = items [focusIndex - 1];+\t\t\t\tfocusItem.redraw ();-\t\tcase SWT.ARROW_DOWN:+\t\t}+\t\tcase SWT.ARROW_DOWN: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw ();-\t\t\t\tfocusIndex++;-\t\t\t\titems [focusIndex].redraw ();+\t\t\t\tfocusItem.redraw ();+\t\t\t\tfocusItem = items [focusIndex + 1];+\t\t\t\tfocusItem.redraw ();+\t\t}",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d88ce30b3961d85fa632fd87a8c7a112",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 24,
          "methodNumber2" : 24
        },
        "pattern" : [ 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1870, 2000, 3000, 1004, 4070, 49, 31507, 24846, 6155, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2997, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, -16206, 10970, 24846, 6155, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1000, 4070, 24846, 6155, 4017, 1000, 4120, 4017, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 24846, 6155, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2995, 1000, 4070, 24846, 6155, 4077, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1470, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 1901, 2000, 2997, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1008, 4084, 1001, 4076, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid onMouseUp (Event event)",
      "methodModified" : "\n\nvoid onMouseUp (Event event)",
      "diff" : "-\tif (focusIndex == -1) return;-\tExpandItem item = items [focusIndex];-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); +\tif (focusItem == null) return;+\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight ()); -\t\tev.item = item;-\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tev.item = focusItem;+\t\tnotifyListeners (focusItem.expanded ? SWT.Collapse : SWT.Expand, ev);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "435c6c2e8b18e8e12c86d4241d393f67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 26,
          "methodNumber2" : 26
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint /*long*/ gtk_button_release_event (int /*long*/ widget, int /*long*/ event)",
      "methodModified" : "\n\nint /*long*/ gtk_button_release_event (int /*long*/ widget, int /*long*/ event)",
      "diff" : "-\t\tif (focusIndex != -1) {+\t\tif (lastFocus != null) {-\t\t\tExpandItem item = items [focusIndex];-\t\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); +\t\t\tboolean hover = lastFocus.x <= x && x < (lastFocus.x + lastFocus.width) && lastFocus.y <= y && y < (lastFocus.y + getBandHeight ()); -\t\t\t\tev.item = item;-\t\t\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);-\t\t\t\titem.expanded = !item.expanded;-\t\t\t\tshowItem (focusIndex);+\t\t\t\tev.item = lastFocus;+\t\t\t\tnotifyListeners (lastFocus.expanded ? SWT.Collapse : SWT.Expand, ev);+\t\t\t\tlastFocus.expanded = !lastFocus.expanded;+\t\t\t\tshowItem (lastFocus);",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5ae357ef75aa8c1996626a32399df57",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 18,
          "methodNumber2" : 18
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, -16206, 10970, 30365, -30, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event)",
      "methodModified" : "\n\nint /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event)",
      "diff" : "-\t\tif (focusIndex != -1) {-\t\t\tExpandItem item = items [focusIndex];+\t\tif (lastFocus != null) {-\t\t\t\t\tev.item = item;-\t\t\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);-\t\t\t\t\titem.expanded = !item.expanded;-\t\t\t\t\tshowItem (focusIndex);+\t\t\t\t\tev.item = lastFocus;+\t\t\t\t\tsendEvent (lastFocus.expanded ? SWT.Collapse :SWT.Expand, ev);+\t\t\t\t\tlastFocus.expanded = !lastFocus.expanded;+\t\t\t\t\tshowItem (lastFocus);-\t\t\t\tcase OS.GDK_KP_Up:+\t\t\t\tcase OS.GDK_KP_Up: {+\t\t\t\t\tint focusIndex = indexOf (lastFocus);-\t\t\t\t\t\titem.redraw ();-\t\t\t\t\t\tfocusIndex--;-\t\t\t\t\t\titems [focusIndex].redraw ();+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t\t\tlastFocus = items [focusIndex - 1];+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t}-\t\t\t\tcase OS.GDK_KP_Down:+\t\t\t\tcase OS.GDK_KP_Down: {+\t\t\t\t\tint focusIndex = indexOf (lastFocus);-\t\t\t\t\t\titem.redraw ();-\t\t\t\t\t\tfocusIndex++;-\t\t\t\t\t\titems [focusIndex].redraw ();+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t\t\tlastFocus = items [focusIndex + 1];+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t}",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "ca56b2a6a7bb5f37734272891112f0bb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 22,
          "methodNumber2" : 22
        },
        "pattern" : [ 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, -16206, 10970, 30365, -30, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1870, 2000, 3000, 1004, 4070, 49, 31507, 30365, -30, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2995, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, -16206, 10970, 30365, -30, 1005, 1004, 4070, 49, 31507, 30365, -30, 1000, 4070, 30365, -30, 4017, 1000, 4120, 4017, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 30365, -30, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 30365, -30, 4077, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1470, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 1901, 2000, 2997, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2993, 1000, 4070, 30365, -30, 4077, 1000, 4070, 30365, -30, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1008, 4084, 1001, 4076, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "treeSize" : 14
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "methodModified" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "diff" : "-\tif (focusIndex == -1) return result;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return result;-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight()); +\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight()); -\t\tevent.item = item;-\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tevent.item = focusItem;+\t\tsendEvent (focusItem.expanded ? SWT.Collapse : SWT.Expand, event);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d8393f7d77e8e39197011a14efa8e325",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 35,
          "methodNumber2" : 35
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid onMouseUp (Event event)",
      "methodModified" : "\n\nvoid onMouseUp (Event event)",
      "diff" : "-\tif (focusIndex == -1) return;-\tExpandItem item = items [focusIndex];-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); +\tif (focusItem == null) return;+\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight ()); -\t\tev.item = item;-\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tev.item = focusItem;+\t\tnotifyListeners (focusItem.expanded ? SWT.Collapse : SWT.Expand, ev);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "435c6c2e8b18e8e12c86d4241d393f67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 26,
          "methodNumber2" : 26
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "treeSize" : 11
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 26,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void onMouseUp(Event event){\n  int x=event.x;\n  int y=event.y;\n  if (focusItem == null) {\n    return;\n  }\n  boolean hover=focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight());\n  if (hover) {\n    Event ev=new Event();\n    ev.item=focusItem;\n    notifyListeners(focusItem.expanded ? SWT.Collapse : SWT.Expand,ev);\n    focusItem.expanded=!focusItem.expanded;\n    showItem(focusItem);\n  }\n}\n",
        "accuracyTokens" : 0.9902912621359223,
        "accuracyCharacters" : 0.8551068883610451
      } ],
      "memberId" : "435c6c2e8b18e8e12c86d4241d393f67"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "LRESULT WM_LBUTTONUP(int wParam,int lParam){\n  LRESULT result=super.WM_LBUTTONUP(wParam,lParam);\n  if (result == LRESULT.ZERO) {\n    return result;\n  }\n  if (focusItem == null) {\n    return result;\n  }\n  int x=(short)(lParam & 0xFFFF);\n  int y=(short)(lParam >> 16);\n  boolean hover=focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight());\n  if (hover) {\n    Event event=new Event();\n    event.item=focusItem;\n    sendEvent(focusItem.expanded ? SWT.Collapse : SWT.Expand,event);\n    focusItem.expanded=!focusItem.expanded;\n    showItem(focusItem);\n  }\n  return result;\n}\n",
        "accuracyTokens" : 0.9848484848484849,
        "accuracyCharacters" : 0.8600682593856656
      } ],
      "memberId" : "d8393f7d77e8e39197011a14efa8e325"
    } ],
    "foundMembers" : 2,
    "numberOfRecommendationSets" : 2,
    "precision" : 1.0,
    "recall" : 0.3333333333333333,
    "accuracyTokensMin" : 0.9875698734922036,
    "accuracyCharactersMin" : 0.8575875738733554,
    "accuracyTokensMax" : 0.9875698734922036,
    "accuracyCharactersMax" : 0.8575875738733554,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 1737511402,
    "patternUseTimeInNanoSec" : 4625534499
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "142947_1",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "dfc2eee3d6d48dfb38c80bf8620b8186",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "798e99004c4ad01e07d724f432241247",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 9,
          "methodNumber2" : 9
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7eb53af82f64e58ba35ffb2a8add70c2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "37c24460183ba36c56c2fbe01b9923be",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "363021511578ea5cea2788580e0cdd99",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "ecc76b597fe211fa399f77ce2bbe3af7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "988d76606d463c1fa83b1c5ab0665e5c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a87bd6b44e911a0cea2c18434386e5a9",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "42cf0dc1b09d8dcb50e47d27ba6d4e5d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a25d568fa25c71b48b71751799deb3a8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "01237c42a6dc00ec1988b6e4df08bc73",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "01b5052a73c82f892dafc4981a6998fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a87bd6b44e911a0cea2c18434386e5a9",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "01b5052a73c82f892dafc4981a6998fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragEnter,typedListener);\n  addListener(DND.DragLeave,typedListener);\n  addListener(DND.DragOver,typedListener);\n  addListener(DND.DragOperationChanged,typedListener);\n  addListener(DND.Drop,typedListener);\n  addListener(DND.DropAccept,typedListener);\n}\n",
        "accuracyTokens" : 0.9846153846153847,
        "accuracyCharacters" : 0.8906976744186047
      } ],
      "memberId" : "01237c42a6dc00ec1988b6e4df08bc73"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragStart,typedListener);\n  addListener(DND.DragSetData,typedListener);\n  addListener(DND.DragEnd,typedListener);\n}\n",
        "accuracyTokens" : 0.9787234042553191,
        "accuracyCharacters" : 0.8801369863013698
      } ],
      "memberId" : "01b5052a73c82f892dafc4981a6998fd"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragEnter,typedListener);\n  addListener(DND.DragLeave,typedListener);\n  addListener(DND.DragOver,typedListener);\n  addListener(DND.DragOperationChanged,typedListener);\n  addListener(DND.Drop,typedListener);\n  addListener(DND.DropAccept,typedListener);\n}\n",
        "accuracyTokens" : 0.9846153846153847,
        "accuracyCharacters" : 0.8906976744186047
      } ],
      "memberId" : "a25d568fa25c71b48b71751799deb3a8"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragStart,typedListener);\n  addListener(DND.DragSetData,typedListener);\n  addListener(DND.DragEnd,typedListener);\n}\n",
        "accuracyTokens" : 0.9787234042553191,
        "accuracyCharacters" : 0.8801369863013698
      } ],
      "memberId" : "42cf0dc1b09d8dcb50e47d27ba6d4e5d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragEnter,typedListener);\n  addListener(DND.DragLeave,typedListener);\n  addListener(DND.DragOver,typedListener);\n  addListener(DND.DragOperationChanged,typedListener);\n  addListener(DND.Drop,typedListener);\n  addListener(DND.DropAccept,typedListener);\n}\n",
        "accuracyTokens" : 0.9846153846153847,
        "accuracyCharacters" : 0.8906976744186047
      } ],
      "memberId" : "ecc76b597fe211fa399f77ce2bbe3af7"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragStart,typedListener);\n  addListener(DND.DragSetData,typedListener);\n  addListener(DND.DragEnd,typedListener);\n}\n",
        "accuracyTokens" : 0.9787234042553191,
        "accuracyCharacters" : 0.8972602739726028
      } ],
      "memberId" : "363021511578ea5cea2788580e0cdd99"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 9,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragEnter,typedListener);\n  addListener(DND.DragLeave,typedListener);\n  addListener(DND.DragOver,typedListener);\n  addListener(DND.DragOperationChanged,typedListener);\n  addListener(DND.Drop,typedListener);\n  addListener(DND.DropAccept,typedListener);\n}\n",
        "accuracyTokens" : 0.9846153846153847,
        "accuracyCharacters" : 0.8906976744186047
      } ],
      "memberId" : "798e99004c4ad01e07d724f432241247"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragStart,typedListener);\n  addListener(DND.DragSetData,typedListener);\n  addListener(DND.DragEnd,typedListener);\n}\n",
        "accuracyTokens" : 0.9787234042553191,
        "accuracyCharacters" : 0.8801369863013698
      } ],
      "memberId" : "dfc2eee3d6d48dfb38c80bf8620b8186"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f8fe23a917bfec64ec37ec88389dd25746799609",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragEnter,typedListener);\n  addListener(DND.DragLeave,typedListener);\n  addListener(DND.DragOver,typedListener);\n  addListener(DND.DragOperationChanged,typedListener);\n  addListener(DND.Drop,typedListener);\n  addListener(DND.DropAccept,typedListener);\n}\n",
        "accuracyTokens" : 0.9846153846153847,
        "accuracyCharacters" : 0.8906976744186047
      } ],
      "memberId" : "a87bd6b44e911a0cea2c18434386e5a9"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f8fe23a917bfec64ec37ec88389dd25746799609",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragStart,typedListener);\n  addListener(DND.DragSetData,typedListener);\n  addListener(DND.DragEnd,typedListener);\n}\n",
        "accuracyTokens" : 0.9787234042553191,
        "accuracyCharacters" : 0.8801369863013698
      } ],
      "memberId" : "988d76606d463c1fa83b1c5ab0665e5c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f92974be5295e55dcc64d71b120e30866018b539",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragEnter,typedListener);\n  addListener(DND.DragLeave,typedListener);\n  addListener(DND.DragOver,typedListener);\n  addListener(DND.DragOperationChanged,typedListener);\n  addListener(DND.Drop,typedListener);\n  addListener(DND.DropAccept,typedListener);\n}\n",
        "accuracyTokens" : 0.9846153846153847,
        "accuracyCharacters" : 0.8865740740740741
      } ],
      "memberId" : "37c24460183ba36c56c2fbe01b9923be"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f92974be5295e55dcc64d71b120e30866018b539",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n * @param listener the listener which should be notified\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener){\n  if (listener == null) {\n    DND.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  DNDListener typedListener=new DNDListener(listener);\n  typedListener.dndWidget=this;\n  addListener(DND.DragStart,typedListener);\n  addListener(DND.DragSetData,typedListener);\n  addListener(DND.DragEnd,typedListener);\n}\n",
        "accuracyTokens" : 0.9787234042553191,
        "accuracyCharacters" : 0.8801369863013698
      } ],
      "memberId" : "7eb53af82f64e58ba35ffb2a8add70c2"
    } ],
    "foundMembers" : 12,
    "numberOfRecommendationSets" : 12,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9816693944353521,
    "accuracyCharactersMin" : 0.8865006376372125,
    "accuracyTokensMax" : 0.9816693944353521,
    "accuracyCharactersMax" : 0.8865006376372125,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 163967907,
    "patternUseTimeInNanoSec" : 408740840
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "91937",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4d17d67894099caffe78f6bebdcf9240",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "treeSize" : 23
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a26d756e4fdba750a38ac1d9fb95d44f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "treeSize" : 23
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "96525 + 77149 + 77249",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c27fe3a4ec65787980ae9f0766c84151",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1c70972bfbe39a9f87e858e5e97e923ee244c636",
          "commitId2" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "treeSize" : 24
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4d17d67894099caffe78f6bebdcf9240",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "treeSize" : 23
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a26d756e4fdba750a38ac1d9fb95d44f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "treeSize" : 23
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
      "fileName" : "/src/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n * <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n * is otherwise in an invalid state</li>\n * <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device,Image srcImage,int flag){\n  if (device == null) {\n    device=Device.getDevice();\n  }\n  if (device == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  this.device=device;\n  if (srcImage == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (srcImage.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\nswitch (flag) {\ncase SWT.IMAGE_COPY:\ncase SWT.IMAGE_DISABLE:\n    this.type=srcImage.type;\n  int srcHandle=srcImage.handle;\nint newHandle=OS.PiDuplicateImage(srcHandle,0);\nif (newHandle == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nif (flag == SWT.IMAGE_COPY) {\nPhImage_t phImage=new PhImage_t();\nOS.memmove(phImage,srcHandle,PhImage_t.sizeof);\nPhImage_t newPhImage=new PhImage_t();\nOS.memmove(newPhImage,newHandle,PhImage_t.sizeof);\nif (newPhImage.mask_bm != 0 && phImage.mask_bm == newPhImage.mask_bm) {\nint length=newPhImage.mask_bpl * newPhImage.size_h;\nint ptr=OS.malloc(length);\nOS.memmove(ptr,newPhImage.mask_bm,length);\nnewPhImage.mask_bm=ptr;\n}\nif (newPhImage.alpha != 0 && phImage.alpha == newPhImage.alpha) {\nPgAlpha_t alpha=new PgAlpha_t();\nOS.memmove(alpha,phImage.alpha,PgAlpha_t.sizeof);\nif (alpha.src_alpha_map_map != 0) {\n  int length=alpha.src_alpha_map_bpl * alpha.src_alpha_map_dim_h;\n  int ptr=OS.malloc(length);\n  OS.memmove(ptr,alpha.src_alpha_map_map,length);\n  alpha.src_alpha_map_map=ptr;\n}\nint ptr=OS.malloc(PgAlpha_t.sizeof);\nOS.memmove(ptr,alpha,PgAlpha_t.sizeof);\nnewPhImage.alpha=ptr;\n}\nOS.memmove(newHandle,newPhImage,PhImage_t.sizeof);\ntransparentPixel=srcImage.transparentPixel;\n}\n else {\nPhImage_t phImage=new PhImage_t();\nOS.PhMakeGhostBitmap(newHandle);\nOS.memmove(phImage,newHandle,PhImage_t.sizeof);\nphImage.mask_bm=phImage.ghost_bitmap;\nphImage.mask_bpl=phImage.ghost_bpl;\nphImage.ghost_bitmap=0;\nphImage.ghost_bpl=0;\nphImage.alpha=0;\nOS.memmove(newHandle,phImage,PhImage_t.sizeof);\n}\nhandle=newHandle;\nif (device.tracking) {\ndevice.new_Object(this);\n}\nreturn;\ncase SWT.IMAGE_GRAY:\nRectangle r=srcImage.getBounds();\nImageData data=srcImage.getImageData();\nPaletteData palette=data.palette;\nImageData newData=data;\nif (!palette.isDirect) {\nRGB[] rgbs=palette.getRGBs();\nfor (int i=0; i < rgbs.length; i++) {\nif (data.transparentPixel != i) {\nRGB color=rgbs[i];\nint red=color.red;\nint green=color.green;\nint blue=color.blue;\nint intensity=(red + red + green+ green+ green+ green+ green+ blue) >> 3;\ncolor.red=color.green=color.blue=intensity;\n}\n}\nnewData.palette=new PaletteData(rgbs);\n}\n else {\nif (data.transparentPixel != -1) {\nnewData.transparentPixel=254;\n}\nRGB[] rgbs=new RGB[256];\nfor (int i=0; i < rgbs.length; i++) {\nrgbs[i]=new RGB(i,i,i);\n}\nnewData=new ImageData(r.width,r.height,8,new PaletteData(rgbs));\nnewData.maskData=data.maskData;\nnewData.maskPad=data.maskPad;\nint[] scanline=new int[r.width];\nint redMask=palette.redMask;\nint greenMask=palette.greenMask;\nint blueMask=palette.blueMask;\nint redShift=palette.redShift;\nint greenShift=palette.greenShift;\nint blueShift=palette.blueShift;\nfor (int y=0; y < r.height; y++) {\nint offset=y * newData.bytesPerLine;\ndata.getPixels(0,y,r.width,scanline,0);\nfor (int x=0; x < r.width; x++) {\nint pixel=scanline[x];\nint red=pixel & redMask;\nred=(redShift < 0) ? red >>> -redShift : red << redShift;\nint green=pixel & greenMask;\ngreen=(greenShift < 0) ? green >>> -greenShift : green << greenShift;\nint blue=pixel & blueMask;\nblue=(blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\nnewData.data[offset]=(byte)254;\n}\n}\n}\ninit(device,newData);\nif (device.tracking) {\ndevice.new_Object(this);\n}\nreturn;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\n}\n",
        "accuracyTokens" : 0.28909512761020884,
        "accuracyCharacters" : 0.23464776251661498
      } ],
      "memberId" : "4d17d67894099caffe78f6bebdcf9240"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
      "fileName" : "/src/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n * <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n * is otherwise in an invalid state</li>\n * <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device,Image srcImage,int flag){\n  if (device == null) {\n    device=Device.getDevice();\n  }\n  if (device == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  this.device=device;\n  if (srcImage == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (srcImage.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int xDisplay=device.xDisplay;\n  this.type=srcImage.type;\n  this.mask=0;\n  int[] unused=new int[1];\n  int[] w=new int[1];\n  int[] h=new int[1];\n  OS.XGetGeometry(xDisplay,srcImage.pixmap,unused,unused,unused,w,h,unused,unused);\n  int width=w[0];\n  int height=h[0];\n  int drawable=OS.XDefaultRootWindow(xDisplay);\n  if (flag != SWT.IMAGE_GRAY && (srcImage.mask != 0 || srcImage.transparentPixel != -1)) {\n    if (srcImage.transparentPixel != -1) {\n      srcImage.createMask();\n    }\n    int mask=OS.XCreatePixmap(xDisplay,drawable,width,height,1);\n    int gc=OS.XCreateGC(xDisplay,mask,0,null);\n    OS.XCopyArea(xDisplay,srcImage.mask,mask,gc,0,0,width,height,0,0);\n    OS.XFreeGC(xDisplay,gc);\n    this.mask=mask;\n    if (srcImage.transparentPixel != -1 && srcImage.memGC != null) {\n      srcImage.destroyMask();\n    }\n  }\nswitch (flag) {\ncase SWT.IMAGE_COPY:\n    int[] depth=new int[1];\n  OS.XGetGeometry(xDisplay,srcImage.pixmap,unused,unused,unused,unused,unused,unused,depth);\nint pixmap=OS.XCreatePixmap(xDisplay,drawable,width,height,depth[0]);\nint gc=OS.XCreateGC(xDisplay,pixmap,0,null);\nOS.XCopyArea(xDisplay,srcImage.pixmap,pixmap,gc,0,0,width,height,0,0);\nOS.XFreeGC(xDisplay,gc);\nthis.pixmap=pixmap;\ntransparentPixel=srcImage.transparentPixel;\nalpha=srcImage.alpha;\nif (srcImage.alphaData != null) {\nalphaData=new byte[srcImage.alphaData.length];\nSystem.arraycopy(srcImage.alphaData,0,alphaData,0,alphaData.length);\n}\nif (device.tracking) {\ndevice.new_Object(this);\n}\nreturn;\ncase SWT.IMAGE_DISABLE:\nXImage srcXImage=new XImage();\nint srcXImagePtr=OS.XGetImage(xDisplay,srcImage.pixmap,0,0,width,height,OS.AllPlanes,OS.ZPixmap);\nOS.memmove(srcXImage,srcXImagePtr,XImage.sizeof);\nbyte[] srcData=new byte[srcXImage.bytes_per_line * srcXImage.height];\nOS.memmove(srcData,srcXImage.data,srcData.length);\nint destPixmap=OS.XCreatePixmap(xDisplay,drawable,width,height,srcXImage.depth);\nint visualPtr=OS.XDefaultVisual(xDisplay,OS.XDefaultScreen(xDisplay));\nint screenDepth=OS.XDefaultDepthOfScreen(OS.XDefaultScreenOfDisplay(xDisplay));\nint destXImagePtr=OS.XCreateImage(xDisplay,visualPtr,screenDepth,OS.ZPixmap,0,0,width,height,srcXImage.bitmap_pad,0);\nXImage destXImage=new XImage();\nOS.memmove(destXImage,destXImagePtr,XImage.sizeof);\nint bufSize=destXImage.bytes_per_line * destXImage.height;\nint bufPtr=OS.XtMalloc(bufSize);\ndestXImage.data=bufPtr;\nOS.memmove(destXImagePtr,destXImage,XImage.sizeof);\nbyte[] destData=new byte[bufSize];\nColor zeroColor=device.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);\nColor oneColor=device.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);\nint zeroPixel=zeroColor.handle.pixel;\nint onePixel=oneColor.handle.pixel;\nswitch (srcXImage.bits_per_pixel) {\ncase 1:\ngc=OS.XCreateGC(xDisplay,drawable,0,null);\npixmap=OS.XCreatePixmap(xDisplay,drawable,width,height,1);\nOS.XCopyArea(xDisplay,srcImage.pixmap,pixmap,gc,0,0,width,height,0,0);\nOS.XDestroyImage(srcXImagePtr);\nOS.XDestroyImage(destXImagePtr);\nOS.XFreeGC(xDisplay,gc);\nreturn;\ncase 4:\nSWT.error(SWT.ERROR_NOT_IMPLEMENTED);\nbreak;\ncase 8:\nint index=0;\nint srcPixel, r, g, b;\nXColor[] colors=new XColor[256];\nint colormap=OS.XDefaultColormap(xDisplay,OS.XDefaultScreen(xDisplay));\nfor (int y=0; y < srcXImage.height; y++) {\nfor (int x=0; x < srcXImage.bytes_per_line; x++) {\nsrcPixel=srcData[index + x] & 0xFF;\nif (colors[srcPixel] == null) {\nXColor color=new XColor();\ncolor.pixel=srcPixel;\nOS.XQueryColor(xDisplay,colormap,color);\ncolors[srcPixel]=color;\n}\nXColor xColor=colors[srcPixel];\nr=(xColor.red >> 8) & 0xFF;\ng=(xColor.green >> 8) & 0xFF;\nb=(xColor.blue >> 8) & 0xFF;\nif ((r * r + g * g + b * b) < 98304) {\ndestData[index + x]=(byte)zeroPixel;\n}\n else {\ndestData[index + x]=(byte)onePixel;\n}\n}\nindex+=srcXImage.bytes_per_line;\n}\nbreak;\ncase 16:\nindex=0;\nVisual visual=new Visual();\nOS.memmove(visual,visualPtr,Visual.sizeof);\nint redMask=visual.red_mask;\nint greenMask=visual.green_mask;\nint blueMask=visual.blue_mask;\nint[] shift=new int[1];\ngetOffsetForMask(16,redMask,srcXImage.byte_order,shift);\nint rShift=24 - shift[0];\ngetOffsetForMask(16,greenMask,srcXImage.byte_order,shift);\nint gShift=24 - shift[0];\ngetOffsetForMask(16,blueMask,srcXImage.byte_order,shift);\nint bShift=24 - shift[0];\nbyte zeroLow=(byte)(zeroPixel & 0xFF);\nbyte zeroHigh=(byte)((zeroPixel >> 8) & 0xFF);\nbyte oneLow=(byte)(onePixel & 0xFF);\nbyte oneHigh=(byte)((onePixel >> 8) & 0xFF);\nfor (int y=0; y < srcXImage.height; y++) {\nint xIndex=0;\nfor (int x=0; x < srcXImage.bytes_per_line; x+=2) {\nsrcPixel=((srcData[index + xIndex + 1] & 0xFF) << 8) | (srcData[index + xIndex] & 0xFF);\nr=(srcPixel & redMask) << rShift >> 16;\ng=(srcPixel & greenMask) << gShift >> 16;\nb=(srcPixel & blueMask) << bShift >> 16;\nif ((r * r + g * g + b * b) < 98304) {\ndestData[index + xIndex]=zeroLow;\ndestData[index + xIndex + 1]=zeroHigh;\n}\n else {\ndestData[index + xIndex]=oneLow;\ndestData[index + xIndex + 1]=oneHigh;\n}\nxIndex+=srcXImage.bits_per_pixel / 8;\n}\nindex+=srcXImage.bytes_per_line;\n}\nbreak;\ncase 24:\ncase 32:\nindex=0;\nvisual=new Visual();\nOS.memmove(visual,visualPtr,Visual.sizeof);\nredMask=visual.red_mask;\ngreenMask=visual.green_mask;\nblueMask=visual.blue_mask;\nshift=new int[1];\ngetOffsetForMask(srcXImage.bits_per_pixel,redMask,srcXImage.byte_order,shift);\nrShift=shift[0];\ngetOffsetForMask(srcXImage.bits_per_pixel,greenMask,srcXImage.byte_order,shift);\ngShift=shift[0];\ngetOffsetForMask(srcXImage.bits_per_pixel,blueMask,srcXImage.byte_order,shift);\nbShift=shift[0];\nbyte zeroR=(byte)zeroColor.getRed();\nbyte zeroG=(byte)zeroColor.getGreen();\nbyte zeroB=(byte)zeroColor.getBlue();\nbyte oneR=(byte)oneColor.getRed();\nbyte oneG=(byte)oneColor.getGreen();\nbyte oneB=(byte)oneColor.getBlue();\nfor (int y=0; y < srcXImage.height; y++) {\nint xIndex=0;\nfor (int x=0; x < srcXImage.width; x++) {\nr=srcData[index + xIndex + rShift] & 0xFF;\ng=srcData[index + xIndex + gShift] & 0xFF;\nb=srcData[index + xIndex + bShift] & 0xFF;\nif ((r * r + g * g + b * b) < 98304) {\ndestData[index + xIndex + rShift]=zeroR;\ndestData[index + xIndex + gShift]=zeroG;\ndestData[index + xIndex + bShift]=zeroB;\n}\n else {\ndestData[index + xIndex + rShift]=oneR;\ndestData[index + xIndex + gShift]=oneG;\ndestData[index + xIndex + bShift]=oneB;\n}\nxIndex+=destXImage.bits_per_pixel / 8;\n}\nindex+=srcXImage.bytes_per_line;\n}\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_IMAGE);\n}\nOS.memmove(destXImage.data,destData,destData.length);\ngc=OS.XCreateGC(xDisplay,destPixmap,0,null);\nOS.XPutImage(xDisplay,destPixmap,gc,destXImagePtr,0,0,0,0,width,height);\nOS.XDestroyImage(destXImagePtr);\nOS.XDestroyImage(srcXImagePtr);\nOS.XFreeGC(xDisplay,gc);\nthis.pixmap=destPixmap;\nif (device.tracking) {\ndevice.new_Object(this);\n}\nreturn;\ncase SWT.IMAGE_GRAY:\nImageData data=srcImage.getImageData();\nPaletteData palette=data.palette;\nImageData newData=data;\nif (!palette.isDirect) {\nRGB[] rgbs=palette.getRGBs();\nfor (int i=0; i < rgbs.length; i++) {\nif (data.transparentPixel != i) {\nRGB color=rgbs[i];\nint red=color.red;\nint green=color.green;\nint blue=color.blue;\nint intensity=(red + red + green+ green+ green+ green+ green+ blue) >> 3;\ncolor.red=color.green=color.blue=intensity;\n}\n}\nnewData.palette=new PaletteData(rgbs);\n}\n else {\nif (data.transparentPixel != -1) {\nnewData.transparentPixel=254;\n}\nRGB[] rgbs=new RGB[256];\nfor (int i=0; i < rgbs.length; i++) {\nrgbs[i]=new RGB(i,i,i);\n}\nnewData=new ImageData(width,height,8,new PaletteData(rgbs));\nnewData.maskData=data.maskData;\nnewData.maskPad=data.maskPad;\nint[] scanline=new int[width];\nint redMask=palette.redMask;\nint greenMask=palette.greenMask;\nint blueMask=palette.blueMask;\nint redShift=palette.redShift;\nint greenShift=palette.greenShift;\nint blueShift=palette.blueShift;\nfor (int y=0; y < height; y++) {\nint offset=y * newData.bytesPerLine;\ndata.getPixels(0,y,width,scanline,0);\nfor (int x=0; x < width; x++) {\nint pixel=scanline[x];\nint red=pixel & redMask;\nred=(redShift < 0) ? red >>> -redShift : red << redShift;\nint green=pixel & greenMask;\ngreen=(greenShift < 0) ? green >>> -greenShift : green << greenShift;\nint blue=pixel & blueMask;\nblue=(blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\nnewData.data[offset]=(byte)254;\n}\n}\n}\ninit(device,newData);\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nif (device.tracking) {\ndevice.new_Object(this);\n}\n}\n",
        "accuracyTokens" : 0.2729422894985809,
        "accuracyCharacters" : 0.22903790087463557
      } ],
      "memberId" : "a26d756e4fdba750a38ac1d9fb95d44f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1c70972bfbe39a9f87e858e5e97e923ee244c636",
      "fileName" : "/src/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n * <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n * is otherwise in an invalid state</li>\n * <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device,Image srcImage,int flag){\n  if (device == null) {\n    device=Device.getDevice();\n  }\n  if (device == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  this.device=device;\n  if (srcImage == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (srcImage.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\nswitch (flag) {\ncase SWT.IMAGE_COPY:\n    Rectangle r=srcImage.getBounds();\n  this.type=srcImage.type;\nswitch (type) {\ncase SWT.BITMAP:\n  int hDC=device.internal_new_GC(null);\nint hdcSource=OS.CreateCompatibleDC(hDC);\nint hdcDest=OS.CreateCompatibleDC(hDC);\nint hOldSrc=OS.SelectObject(hdcSource,srcImage.handle);\nhandle=OS.CreateCompatibleBitmap(hdcSource,r.width,r.height);\nif (handle == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nint hOldDest=OS.SelectObject(hdcDest,handle);\nOS.BitBlt(hdcDest,0,0,r.width,r.height,hdcSource,0,0,OS.SRCCOPY);\nOS.SelectObject(hdcSource,hOldSrc);\nOS.SelectObject(hdcDest,hOldDest);\nOS.DeleteDC(hdcSource);\nOS.DeleteDC(hdcDest);\ndevice.internal_dispose_GC(hDC,null);\ntransparentPixel=srcImage.transparentPixel;\nalpha=srcImage.alpha;\nif (srcImage.alphaData != null) {\nalphaData=new byte[srcImage.alphaData.length];\nSystem.arraycopy(srcImage.alphaData,0,alphaData,0,alphaData.length);\n}\nbreak;\ncase SWT.ICON:\nif (OS.IsWinCE) {\ninit(device,srcImage.data);\n}\n else {\nhandle=OS.CopyImage(srcImage.handle,OS.IMAGE_ICON,r.width,r.height,0);\nif (handle == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\n}\nbreak;\ndefault :\nSWT.error(SWT.ERROR_UNSUPPORTED_FORMAT);\n}\nif (device.tracking) {\ndevice.new_Object(this);\n}\nreturn;\ncase SWT.IMAGE_DISABLE:\nRectangle r=srcImage.getBounds();\nthis.type=srcImage.type;\nbyte[] rgbBwBitmapInfo={40,0,0,0,(byte)(r.width & 0xFF),(byte)((r.width & 0xFF00) >> 8),(byte)((r.width & 0xFF0000) >> 16),(byte)((r.width & 0xFF000000) >> 24),(byte)(r.height & 0xFF),(byte)((r.height & 0xFF00) >> 8),(byte)((r.height & 0xFF0000) >> 16),(byte)((r.height & 0xFF000000) >> 24),1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,(byte)0xFF,(byte)0xFF,(byte)0xFF,0};\nint hDC=device.internal_new_GC(null);\nint hdcSource=OS.CreateCompatibleDC(hDC);\nif (hdcSource == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nint bwDC=OS.CreateCompatibleDC(hdcSource);\nif (bwDC == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nint hdcBmp=OS.CreateCompatibleDC(hDC);\nif (hdcBmp == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nint[] pbitsBW=new int[1];\nint hbmBW=OS.CreateDIBSection(bwDC,rgbBwBitmapInfo,OS.DIB_RGB_COLORS,pbitsBW,0,0);\nif (hbmBW == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nswitch (type) {\ncase SWT.BITMAP:\nint hOldSrc=OS.SelectObject(hdcSource,srcImage.handle);\nhandle=OS.CreateCompatibleBitmap(hDC,r.width,r.height);\nif (handle == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nint hOldBw=OS.SelectObject(bwDC,hbmBW);\nint hOldBmp=OS.SelectObject(hdcBmp,handle);\nOS.BitBlt(bwDC,0,0,r.width,r.height,hdcSource,0,0,OS.SRCCOPY);\nRECT rect=new RECT();\nrect.left=0;\nrect.top=0;\nrect.right=r.width;\nrect.bottom=r.height;\nOS.FillRect(hdcBmp,rect,OS.GetSysColorBrush(OS.COLOR_3DFACE));\nint hb=OS.CreateSolidBrush(OS.GetSysColor(OS.COLOR_3DHILIGHT));\nint oldBrush=OS.SelectObject(hdcBmp,hb);\nOS.BitBlt(hdcBmp,1,1,r.width,r.height,bwDC,0,0,0xB8074A);\nhb=OS.CreateSolidBrush(OS.GetSysColor(OS.COLOR_3DSHADOW));\nOS.DeleteObject(OS.SelectObject(hdcBmp,hb));\nOS.BitBlt(hdcBmp,0,0,r.width,r.height,bwDC,0,0,0xB8074A);\nOS.DeleteObject(OS.SelectObject(hdcBmp,oldBrush));\nOS.SelectObject(hdcSource,hOldSrc);\nOS.SelectObject(hdcBmp,hOldBmp);\nOS.SelectObject(bwDC,hOldBw);\nOS.DeleteDC(hdcSource);\nOS.DeleteDC(bwDC);\nOS.DeleteDC(hdcBmp);\nOS.DeleteObject(hbmBW);\ndevice.internal_dispose_GC(hDC,null);\nbreak;\ncase SWT.ICON:\nICONINFO iconInfo=new ICONINFO();\nif (OS.IsWinCE) {\nGetIconInfo(srcImage,iconInfo);\n}\n else {\nif (!OS.GetIconInfo(srcImage.handle,iconInfo)) {\nSWT.error(SWT.ERROR_INVALID_IMAGE);\n}\n}\nint hdcMask=OS.CreateCompatibleDC(hDC);\nif (iconInfo.hbmColor == 0) {\nhOldSrc=OS.SelectObject(hdcSource,iconInfo.hbmMask);\n}\n else {\nhOldSrc=OS.SelectObject(hdcSource,iconInfo.hbmColor);\n}\nint newHbmp=OS.CreateCompatibleBitmap(hdcSource,r.width,r.height);\nif (newHbmp == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nint newHmask=OS.CreateBitmap(r.width,r.height,1,1,null);\nif (newHmask == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nint hOldMask=OS.SelectObject(hdcMask,newHmask);\nif (iconInfo.hbmColor != 0) {\nOS.SelectObject(hdcSource,iconInfo.hbmMask);\n}\nOS.SelectObject(hdcSource,iconInfo.hbmMask);\nOS.BitBlt(hdcMask,0,0,r.width,r.height,hdcSource,0,0,OS.SRCCOPY);\nhOldBw=OS.SelectObject(bwDC,hbmBW);\nif (iconInfo.hbmColor == 0) {\nOS.SelectObject(hdcSource,iconInfo.hbmMask);\nOS.BitBlt(bwDC,0,0,r.width,r.height,hdcSource,0,r.height,OS.SRCCOPY);\n}\n else {\nOS.SelectObject(hdcSource,iconInfo.hbmColor);\nOS.BitBlt(bwDC,0,0,r.width,r.height,hdcSource,0,0,OS.SRCCOPY);\n}\nrect=new RECT();\nrect.left=0;\nrect.top=0;\nrect.right=r.width;\nrect.bottom=r.height;\nhOldBmp=OS.SelectObject(hdcBmp,newHbmp);\nOS.FillRect(hdcBmp,rect,OS.GetSysColorBrush(OS.COLOR_3DFACE));\nhb=OS.CreateSolidBrush(OS.GetSysColor(OS.COLOR_3DSHADOW));\noldBrush=OS.SelectObject(hdcBmp,hb);\nOS.BitBlt(hdcBmp,0,0,r.width,r.height,bwDC,0,0,0xB8074A);\nOS.BitBlt(bwDC,0,0,r.width,r.height,hdcMask,0,0,OS.NOTSRCCOPY);\nhb=OS.CreateSolidBrush(0);\nOS.DeleteObject(OS.SelectObject(hdcBmp,hb));\nOS.BitBlt(hdcBmp,0,0,r.width,r.height,bwDC,0,0,0xB8074A);\nOS.DeleteObject(OS.SelectObject(hdcBmp,oldBrush));\nOS.SelectObject(hdcSource,hOldSrc);\nOS.DeleteDC(hdcSource);\nOS.SelectObject(bwDC,hOldBw);\nOS.DeleteDC(bwDC);\nOS.SelectObject(hdcBmp,hOldBmp);\nOS.DeleteDC(hdcBmp);\nOS.SelectObject(hdcMask,hOldMask);\nOS.DeleteDC(hdcMask);\nOS.DeleteObject(hbmBW);\ndevice.internal_dispose_GC(hDC,null);\nICONINFO newIconInfo=new ICONINFO();\nnewIconInfo.fIcon=iconInfo.fIcon;\nnewIconInfo.hbmMask=newHmask;\nnewIconInfo.hbmColor=newHbmp;\nhandle=OS.CreateIconIndirect(newIconInfo);\nif (handle == 0) {\nSWT.error(SWT.ERROR_NO_HANDLES);\n}\nOS.DeleteObject(newHbmp);\nOS.DeleteObject(newHmask);\nif (iconInfo.hbmColor != 0) {\nOS.DeleteObject(iconInfo.hbmColor);\n}\nOS.DeleteObject(iconInfo.hbmMask);\nbreak;\ndefault :\nSWT.error(SWT.ERROR_UNSUPPORTED_FORMAT);\n}\nif (device.tracking) {\ndevice.new_Object(this);\n}\nreturn;\ncase SWT.IMAGE_GRAY:\nRectangle r=srcImage.getBounds();\nImageData data=srcImage.getImageData();\nPaletteData palette=data.palette;\nImageData newData=data;\nif (!palette.isDirect) {\nRGB[] rgbs=palette.getRGBs();\nfor (int i=0; i < rgbs.length; i++) {\nif (data.transparentPixel != i) {\nRGB color=rgbs[i];\nint red=color.red;\nint green=color.green;\nint blue=color.blue;\nint intensity=(red + red + green+ green+ green+ green+ green+ blue) >> 3;\ncolor.red=color.green=color.blue=intensity;\n}\n}\nnewData.palette=new PaletteData(rgbs);\n}\n else {\nif (data.transparentPixel != -1) {\nnewData.transparentPixel=254;\n}\nRGB[] rgbs=new RGB[256];\nfor (int i=0; i < rgbs.length; i++) {\nrgbs[i]=new RGB(i,i,i);\n}\nnewData=new ImageData(r.width,r.height,8,new PaletteData(rgbs));\nnewData.maskData=data.maskData;\nnewData.maskPad=data.maskPad;\nint[] scanline=new int[r.width];\nint redMask=palette.redMask;\nint greenMask=palette.greenMask;\nint blueMask=palette.blueMask;\nint redShift=palette.redShift;\nint greenShift=palette.greenShift;\nint blueShift=palette.blueShift;\nfor (int y=0; y < r.height; y++) {\nint offset=y * newData.bytesPerLine;\ndata.getPixels(0,y,r.width,scanline,0);\nfor (int x=0; x < r.width; x++) {\nint pixel=scanline[x];\nint red=pixel & redMask;\nred=(redShift < 0) ? red >>> -redShift : red << redShift;\nint green=pixel & greenMask;\ngreen=(greenShift < 0) ? green >>> -greenShift : green << greenShift;\nint blue=pixel & blueMask;\nblue=(blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\nnewData.data[offset]=(byte)254;\n}\n}\n}\ninit(device,newData);\nif (device.tracking) {\ndevice.new_Object(this);\n}\nreturn;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\n}\n",
        "accuracyTokens" : 0.9495756365451822,
        "accuracyCharacters" : 0.6488337813231596
      } ],
      "memberId" : "c27fe3a4ec65787980ae9f0766c84151"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.5038710178846574,
    "accuracyCharactersMin" : 0.3708398149048034,
    "accuracyTokensMax" : 0.5038710178846574,
    "accuracyCharactersMax" : 0.3708398149048034,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 4311081117,
    "patternUseTimeInNanoSec" : 4752972259
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "103863",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (true, false);",
      "commitMsg" : "support Qt",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "aa605ad23dee4307b62423c9392e1cea",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
          "commitId2" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 27,
          "methodNumber2" : 27
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "16be6c3505d667bcbfbafa9a4baaec52",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "commitId2" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c24cd28b084a250eab29d0fbd70039ac",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "commitId2" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 36,
          "methodNumber2" : 36
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : " Bug 103863 -  Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9d71014d5289df96d7ac024a1a0a6719",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "commitId2" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 33,
          "methodNumber2" : 33
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f22296af2bd4bcb7a22f0f7799cc5c9d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "commitId2" : "c1d0126fc6c64fd6e2473353b2a4a680639a6fba",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 38,
          "methodNumber2" : 38
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "055496c6c92bc85237a9fd1da736581b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "commitId2" : "c1d0126fc6c64fd6e2473353b2a4a680639a6fba",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 31,
          "methodNumber2" : 31
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (true, false);",
      "commitMsg" : " Bug 103863 -  Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "141347f08491a97dc787ac9908212362",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "commitId2" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 35,
          "methodNumber2" : 35
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119, 1001, 4119 ],
        "treeSize" : 15
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (true, false);",
      "commitMsg" : "support Qt",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "aa605ad23dee4307b62423c9392e1cea",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
          "commitId2" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 27,
          "methodNumber2" : 27
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119, 1001, 4119 ],
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c24cd28b084a250eab29d0fbd70039ac",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "commitId2" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 36,
          "methodNumber2" : 36
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "treeSize" : 15
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
      "fileName" : "/src/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * @param changed a control that has had a state change which requires a recalculation of its size\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n * <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.1\n */\npublic void layout(Control[] changed){\n  layout(changed,SWT.NONE);\n  checkWidget();\n  if (changed == null) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n}\n",
        "accuracyTokens" : 0.3157894736842105,
        "accuracyCharacters" : 0.43103448275862066
      } ],
      "memberId" : "16be6c3505d667bcbfbafa9a4baaec52"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "/src/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * @param changed a control that has had a state change which requires a recalculation of its size\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n * <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.1\n */\npublic void layout(Control[] changed){\n  layout(changed,SWT.NONE);\n  checkWidget();\n  if (changed == null) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n}\n",
        "accuracyTokens" : 0.3157894736842105,
        "accuracyCharacters" : 0.43103448275862066
      } ],
      "memberId" : "aa605ad23dee4307b62423c9392e1cea"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "63f803a737d416603789d25d5eba7834fce0e4c9",
      "fileName" : "/src/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * @param changed a control that has had a state change which requires a recalculation of its size\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n * <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.1\n */\npublic void layout(Control[] changed){\n  layout(changed,SWT.NONE);\n  checkWidget();\n  if (changed == null) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n}\n",
        "accuracyTokens" : 0.3157894736842105,
        "accuracyCharacters" : 0.43103448275862066
      } ],
      "memberId" : "9d71014d5289df96d7ac024a1a0a6719"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "63f803a737d416603789d25d5eba7834fce0e4c9",
      "fileName" : "/src/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * @param changed a control that has had a state change which requires a recalculation of its size\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n * <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.1\n */\npublic void layout(Control[] changed){\n  layout(changed,SWT.NONE);\n  checkWidget();\n  if (changed == null) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n}\n",
        "accuracyTokens" : 0.3157894736842105,
        "accuracyCharacters" : 0.43103448275862066
      } ],
      "memberId" : "141347f08491a97dc787ac9908212362"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
      "fileName" : "/src/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 36,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * @param changed a control that has had a state change which requires a recalculation of its size\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n * <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.1\n */\npublic void layout(Control[] changed){\n  layout(changed,SWT.NONE);\n  checkWidget();\n  if (changed == null) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n}\n",
        "accuracyTokens" : 0.3157894736842105,
        "accuracyCharacters" : 0.43103448275862066
      } ],
      "memberId" : "c24cd28b084a250eab29d0fbd70039ac"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
      "fileName" : "/src/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 38,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * @param changed a control that has had a state change which requires a recalculation of its size\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n * <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.1\n */\npublic void layout(Control[] changed){\n  layout(changed,SWT.NONE);\n  checkWidget();\n  if (changed == null) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n}\n",
        "accuracyTokens" : 0.3157894736842105,
        "accuracyCharacters" : 0.43103448275862066
      } ],
      "memberId" : "f22296af2bd4bcb7a22f0f7799cc5c9d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
      "fileName" : "/src/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 31,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * @param changed a control that has had a state change which requires a recalculation of its size\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n * <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.1\n */\npublic void layout(Control[] changed){\n  layout(changed,SWT.NONE);\n  checkWidget();\n  if (changed == null) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n}\n",
        "accuracyTokens" : 0.3157894736842105,
        "accuracyCharacters" : 0.43103448275862066
      } ],
      "memberId" : "055496c6c92bc85237a9fd1da736581b"
    } ],
    "foundMembers" : 7,
    "numberOfRecommendationSets" : 7,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.31578947368421056,
    "accuracyCharactersMin" : 0.4310344827586206,
    "accuracyTokensMax" : 0.31578947368421056,
    "accuracyCharactersMax" : 0.4310344827586206,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 3038740943,
    "patternUseTimeInNanoSec" : 13907894810
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "129314",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "75812",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "99022f3b3c0d18c37229af45dd9ed0c4",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2329406946d89122eb3bd38a262415d60b3058b9",
          "commitId2" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)82272 - List returned by Device#getFontList(...) has a lot of repetition",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f88985d2eb7e7ecf132d3742bd511544",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "commitId2" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));-\t\treturn;+\t\tstart = end + 1;+\t\tend = string.length();+\t\tif (start < end) atsName = string.substring(start, end);",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "37939f3f0c955e95b5854843ee114098",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "commitId2" : "abdb7df6c5ef7f31dd770f626e22ad0d039e1629",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1006, 1006, 1004, 4070, -10258, 6430, -13611, 24593, 1004, 4070, 18124, 9276, 8095, 28241, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1000, 4063, 4023, 1000, 4070, 1037, 12860, 4063, 1000, 4070, -15320, -12439, 4063, 1007, 4077, 4061, 1000, 4070, 1674, -15262, 4077, 1000, 4137, 4077, 1000, 4070, 1, -30501, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1, -30501, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1674, -15262, 4017, 1000, 4070, 1, -30501, 4017, 1007, 4077, 4027, 1000, 4070, -10328, 6475, 4077, 1000, 4023, 4077, 1002, 4063, 2000, 2000, 2999, 1000, 4070, 1674, -15262, 4023, 1000, 4070, 1, -30501, 4023, 1001, 4114, 960, -9170, 1, -28594, 1008, 4047 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)82272 - List returned by Device#getFontList(...) has a lot of repetition",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "98c36e3ada6a00150d74be2226fa7a67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "commitId2" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "treeSize" : 8
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));-\t\treturn;+\t\tstart = end + 1;+\t\tend = string.length();+\t\tif (start < end) atsName = string.substring(start, end);",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "37939f3f0c955e95b5854843ee114098",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "commitId2" : "abdb7df6c5ef7f31dd770f626e22ad0d039e1629",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1006, 1006, 1004, 4070, -10258, 6430, -13611, 24593, 1004, 4070, 18124, 9276, 8095, 28241, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1000, 4063, 4023, 1000, 4070, 1037, 12860, 4063, 1000, 4070, -15320, -12439, 4063, 1007, 4077, 4061, 1000, 4070, 1674, -15262, 4077, 1000, 4137, 4077, 1000, 4070, 1, -30501, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1, -30501, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1674, -15262, 4017, 1000, 4070, 1, -30501, 4017, 1007, 4077, 4027, 1000, 4070, -10328, 6475, 4077, 1000, 4023, 4077, 1002, 4063, 2000, 2000, 2999, 1000, 4070, 1674, -15262, 4023, 1000, 4070, 1, -30501, 4023, 1001, 4114, 960, -9170, 1, -28594, 1008, 4047 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)82272 - List returned by Device#getFontList(...) has a lot of repetition",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "98c36e3ada6a00150d74be2226fa7a67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "commitId2" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "treeSize" : 8
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
      "fileName" : "/src/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n * @param string the string representation of a <code>FontData</code> (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n * @see #toString\n */\npublic FontData(String string){\n  if (string == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  int start=0;\n  int end=string.indexOf('|');\n  if (end == -1) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  String version1=string.substring(start,end);\n  try {\n    if (Integer.parseInt(version1) != 1) {\n      SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  String name=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  float height=0;\n  try {\n    height=Float.parseFloat(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  int style=0;\n  try {\n    style=Integer.parseInt(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    setName(name);\n    setHeight(height);\n    setStyle(style);\n    return;\n  }\n  String platform=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    setName(name);\n    setHeight(height);\n    setStyle(style);\n    return;\n  }\n  String version2=string.substring(start,end);\n  if (platform.equals(\"MOTIF\") && version2.equals(\"1\")) {\n    start=end + 1;\n    end=string.length();\n    if (end == -1) {\n      setName(name);\n      setHeight(height);\n      setStyle(style);\n      return;\n    }\n    String xlfd=string.substring(start,end);\n    setXlfd(xlfd);\n    return;\n  }\n  setName(name);\n  setHeight(height);\n  setStyle(style);\n}\n",
        "accuracyTokens" : 0.9851485148514851,
        "accuracyCharacters" : 0.8269230769230769
      } ],
      "memberId" : "f88985d2eb7e7ecf132d3742bd511544"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
      "fileName" : "/src/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n * @param string the string representation of a <code>FontData</code> (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n * @see #toString\n */\npublic FontData(String string){\n  if (string == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  int start=0;\n  int end=string.indexOf('|');\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  String version1=string.substring(start,end);\n  try {\n    if (Integer.parseInt(version1) != 1) {\n      SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  String name=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  float height=0;\n  try {\n    height=Float.parseFloat(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int style=0;\n  try {\n    style=Integer.parseInt(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  setName(name);\n  setHeight(height);\n  setStyle(style);\n  if (end == -1) {\n    return;\n  }\n  String platform=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    return;\n  }\n  String version2=string.substring(start,end);\n  if (platform.equals(\"CARBON\") && version2.equals(\"1\")) {\n    return;\n  }\n}\n",
        "accuracyTokens" : 0.9131652661064426,
        "accuracyCharacters" : 0.781491002570694
      } ],
      "memberId" : "37939f3f0c955e95b5854843ee114098"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
      "fileName" : "/src/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n * @param string the string representation of a <code>FontData</code> (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n * @see #toString\n */\npublic FontData(String string){\n  if (string == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  int start=0;\n  int end=string.indexOf('|');\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  String version1=string.substring(start,end);\n  try {\n    if (Integer.parseInt(version1) != 1) {\n      SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  String name=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  float height=0;\n  try {\n    height=Float.parseFloat(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int style=0;\n  try {\n    style=Integer.parseInt(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  setName(name);\n  setHeight(height);\n  setStyle(style);\n  if (end == -1) {\n    return;\n  }\n  String platform=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    return;\n  }\n  String version2=string.substring(start,end);\n  if (platform.equals(\"GTK\") && version2.equals(\"1\")) {\n    return;\n  }\n}\n",
        "accuracyTokens" : 0.9766763848396501,
        "accuracyCharacters" : 0.8354922279792746
      } ],
      "memberId" : "98c36e3ada6a00150d74be2226fa7a67"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2329406946d89122eb3bd38a262415d60b3058b9",
      "fileName" : "/src/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n * @param string the string representation of a <code>FontData</code> (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n * @see #toString\n */\npublic FontData(String string){\n  if (string == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  int start=0;\n  int end=string.indexOf('|');\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  String version1=string.substring(start,end);\n  try {\n    if (Integer.parseInt(version1) != 1) {\n      SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  String name=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  float height=0;\n  try {\n    height=Float.parseFloat(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int style=0;\n  try {\n    style=Integer.parseInt(string.substring(start,end));\n  }\n catch (  NumberFormatException e) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  start=end + 1;\n  end=string.indexOf('|',start);\n  data=OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n  data.lfCharSet=(byte)OS.DEFAULT_CHARSET;\n  setName(name);\n  setHeight(height);\n  setStyle(style);\n  if (end == -1) {\n    return;\n  }\n  String platform=string.substring(start,end);\n  start=end + 1;\n  end=string.indexOf('|',start);\n  if (end == -1) {\n    return;\n  }\n  String version2=string.substring(start,end);\n  if (platform.equals(\"WINDOWS\") && version2.equals(\"1\")) {\n    LOGFONT newData=OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n    try {\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfHeight=Integer.parseInt(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfWidth=Integer.parseInt(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfEscapement=Integer.parseInt(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfOrientation=Integer.parseInt(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfWeight=Integer.parseInt(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfItalic=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfUnderline=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfStrikeOut=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfCharSet=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfOutPrecision=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfClipPrecision=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfQuality=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n      end=string.indexOf('|',start);\n      if (end == -1) {\n        return;\n      }\n      newData.lfPitchAndFamily=Byte.parseByte(string.substring(start,end));\n      start=end + 1;\n    }\n catch (    NumberFormatException e) {\n      setName(name);\n      setHeight(height);\n      setStyle(style);\n      return;\n    }\n    TCHAR buffer=new TCHAR(0,string.substring(start),false);\n    int length=Math.min(OS.LF_FACESIZE - 1,buffer.length());\n    if (OS.IsUnicode) {\n      char[] lfFaceName=((LOGFONTW)newData).lfFaceName;\n      System.arraycopy(buffer.chars,0,lfFaceName,0,length);\n    }\n else {\n      byte[] lfFaceName=((LOGFONTA)newData).lfFaceName;\n      System.arraycopy(buffer.bytes,0,lfFaceName,0,length);\n    }\n    data=newData;\n  }\n}\n",
        "accuracyTokens" : 0.9778012684989429,
        "accuracyCharacters" : 0.7698499021100718
      } ],
      "memberId" : "99022f3b3c0d18c37229af45dd9ed0c4"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9631978585741302,
    "accuracyCharactersMin" : 0.8034390523957793,
    "accuracyTokensMax" : 0.9631978585741302,
    "accuracyCharactersMax" : 0.8034390523957793,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 2943483013,
    "patternUseTimeInNanoSec" : 7769817410
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "134091",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "+\t\tint newOffset = -1;-\t\t\ttext.setFocus();-\t\t\tint offset = text.getOffsetAtLocation(pt);-\t\t\tif (offset != oldOffset) {-\t\t\t\tOS.ImageList_DragShowNolock(false);-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t\tOS.ImageList_DragShowNolock(true);-\t\t\t}-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\tint offset = -1;-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(2, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\tif (offset != -1 && offset != oldOffset) {-\t\t\t\tOS.ImageList_DragShowNolock(false);-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t\tOS.ImageList_DragShowNolock(true);-\t\t\t}+\t\t}+\t\tif (newOffset != -1 && newOffset != oldOffset) {+\t\t\ttext.setFocus();+\t\t\tOS.ImageList_DragShowNolock(false);+\t\t\ttext.setCaretOffset(newOffset);+\t\t\tOS.ImageList_DragShowNolock(true);",
      "commitMsg" : "136675 - No scrollbar events for Text",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7d61cd41afe733881c46a0d2668c87b0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
          "commitId2" : "1dce96d2e02b2c8b1285af4b452459877daaec8f",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1006, 1006, 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, -15561, 25747, 1, -30241, 1006, 1006, 1004, 4017, 1004, 4070, -15561, 25747, 0, 120, 1004, 4070, 21302, -31334, 0, 120, 1004, 4070, 0, 2532, 0, 3588, 1004, 4070, -478, 18627, 0, 121, 1004, 4070, -15561, 25747, -7871, 26171, 1004, 4070, 0, 2532, 0, 112, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1002, 4070, 2140, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3002, 1000, 4070, -11040, 16979, 4077, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1002, 4061, 3009, 2000, 2997, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1002, 4023, 2260, 1999, 2994, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1002, 4023, 2760, 2000, 2993, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1002, 4023, 2260, 1998, 2992, 1002, 4070, 1561, 2000, 2991, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 112, 4067, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -28089, 31089, 4063, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1000, 4018, 4027, 1000, 4018, 4018, 1002, 4017, 1910, 2000, 2991, 1000, 4063, 4017, 1002, 4070, 2461, 2000, 2990, 1000, 4070, 0, 112, 4063, 1000, 4063, 4017, 1002, 4070, 2460, 2000, 2990, 1000, 4070, 0, 3588, 4063, 1000, 4017, 4018, 1002, 4063, 1941, 2000, 2992, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1002, 4063, 3140, 2000, 2992, 1002, 4070, 2000, 2000, 2992, 1002, 4070, 3140, 2000, 2992, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1001, 4119, 1001, 4119 ],
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "-\tint offset = -1;+\tint newOffset = -1;-\t\t\t//text.setFocus();\t-\t\t\toffset = text.getOffsetAtLocation(pt);-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\t// hide caret-\t\t\tdrawCaret();-\t\t\tcaretBounds = null; +\t\t// hide caret+\t\tdrawCaret();+\t\tcaretBounds = null; -\tif (offset != -1) {-\t\ttext.setCaretOffset(offset);+\tif (newOffset != -1) {+\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "bug 137320 [StyledText] caret does not move correctly when inserted text wraps",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cef0db73a399b1914ad62667dddc2be0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02a41a72a100251a98dc8e7de59f64c8c32b223d",
          "commitId2" : "801c75677b1aab8c4f677654ebaade9ee0264453",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, 0, 3251, 0, 112, 1006, 1004, 4070, -15561, 25747, 0, 105, 1002, 4070, 2001, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1000, 4061, 4128, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -28089, 31089, 4063, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4018, 4018, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 120, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 120, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -11040, 16979, 4077 ],
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "-\tint offset = -1;+\tint newOffset = -1;-\t\t\t//text.setFocus();\t-\t\t\toffset = text.getOffsetAtLocation(pt);-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\t// hide caret-\t\t\tdrawCaret();-\t\t\tcaretBounds = null; +\t\t// hide caret+\t\tdrawCaret();+\t\tcaretBounds = null; -\tif (offset != -1) {-\t\ttext.setCaretOffset(offset);+\tif (newOffset != -1) {+\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "Bug 127216",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "df6018a928068c3cc9e7152adfc9f89a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "272ce17177489cafd1a8a24ec2c3c365d57fb55a",
          "commitId2" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, 0, 3251, 0, 112, 1006, 1004, 4070, -15561, 25747, 0, 105, 1002, 4070, 2001, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1000, 4061, 4128, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -28089, 31089, 4063, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4018, 4018, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 120, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 120, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -11040, 16979, 4077 ],
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "+\t\tint newOffset = -1;-\t\t\ttext.setFocus();-\t\t\tint offset = text.getOffsetAtLocation(pt);-\t\t\tif (offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\tint offset = -1;-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\tif (offset != -1 && offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}+\t\t}+\t\tif (newOffset != -1 && newOffset != oldOffset) {+\t\t\ttext.setFocus();+\t\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "Bug 134091 - can't drop text at end of lineBug 134112 - dropping on empty line is hard",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "da3b2c35cd9351da521cad4d1d3f4d36",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
          "commitId2" : "94eca708710e7f0e16144697653aeb4db6c9e562",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1006, 1006, 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, -15561, 25747, 1, -30241, 1006, 1004, 4070, 7104, 1076, -28089, 31089, 1006, 1027, 4070, 0, 3251, 0, 112, 1004, 4017, 1004, 4070, -15561, 25747, 0, 120, 1004, 4070, 21302, -31334, 0, 120, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1002, 4070, 2540, 2000, 2993, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3002, 1000, 4070, -11040, 16979, 4077, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1002, 4061, 3009, 2000, 2997, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1002, 4023, 2260, 2000, 2994, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1000, 4018, 4027, 1000, 4018, 4018, 1002, 4017, 1910, 2000, 2991, 1000, 4063, 4017, 1002, 4070, 2461, 2000, 2990, 1000, 4070, 0, 112, 4063, 1000, 4063, 4017, 1002, 4070, 2460, 2000, 2990, 1000, 4070, 0, 3588, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061 ],
        "treeSize" : 18
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "-\tint offset = -1;+\tint newOffset = -1;-\t\t\t//text.setFocus();\t-\t\t\toffset = text.getOffsetAtLocation(pt);-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\t// hide caret-\t\t\tdrawCaret();-\t\t\tcaretBounds = null; +\t\t// hide caret+\t\tdrawCaret();+\t\tcaretBounds = null; -\tif (offset != -1) {-\t\ttext.setCaretOffset(offset);+\tif (newOffset != -1) {+\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "bug 137320 [StyledText] caret does not move correctly when inserted text wraps",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cef0db73a399b1914ad62667dddc2be0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02a41a72a100251a98dc8e7de59f64c8c32b223d",
          "commitId2" : "801c75677b1aab8c4f677654ebaade9ee0264453",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, 0, 3251, 0, 112, 1006, 1004, 4070, -15561, 25747, 0, 105, 1002, 4070, 2001, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1000, 4061, 4128, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -28089, 31089, 4063, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4018, 4018, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 120, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 120, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -11040, 16979, 4077 ],
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "+\t\tint newOffset = -1;-\t\t\ttext.setFocus();-\t\t\tint offset = text.getOffsetAtLocation(pt);-\t\t\tif (offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\tint offset = -1;-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\tif (offset != -1 && offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}+\t\t}+\t\tif (newOffset != -1 && newOffset != oldOffset) {+\t\t\ttext.setFocus();+\t\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "Bug 134091 - can't drop text at end of lineBug 134112 - dropping on empty line is hard",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "da3b2c35cd9351da521cad4d1d3f4d36",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
          "commitId2" : "94eca708710e7f0e16144697653aeb4db6c9e562",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1006, 1006, 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, -15561, 25747, 1, -30241, 1006, 1004, 4070, 7104, 1076, -28089, 31089, 1006, 1027, 4070, 0, 3251, 0, 112, 1004, 4017, 1004, 4070, -15561, 25747, 0, 120, 1004, 4070, 21302, -31334, 0, 120, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1002, 4070, 2540, 2000, 2993, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3002, 1000, 4070, -11040, 16979, 4077, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1002, 4061, 3009, 2000, 2997, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1002, 4023, 2260, 2000, 2994, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1000, 4018, 4027, 1000, 4018, 4018, 1002, 4017, 1910, 2000, 2991, 1000, 4063, 4017, 1002, 4070, 2461, 2000, 2990, 1000, 4070, 0, 112, 4063, 1000, 4063, 4017, 1002, 4070, 2460, 2000, 2990, 1000, 4070, 0, 3588, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061 ],
        "treeSize" : 18
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
      "fileName" : "/src/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void showDropTargetEffect(int effect,int x,int y){\n  if ((effect & DND.FEEDBACK_SELECT) != 0) {\n    Point pt=text.getDisplay().map(null,text,x,y);\n    int oldOffset=text.getCaretOffset();\n    try {\n      int offset=text.getOffsetAtLocation(pt);\n      if (offset != oldOffset) {\n        OS.ImageList_DragShowNolock(false);\n        text.setCaretOffset(offset);\n        OS.ImageList_DragShowNolock(true);\n      }\n    }\n catch (    IllegalArgumentException ex1) {\n      int maxOffset=text.getCharCount();\n      Point maxLocation=text.getLocationAtOffset(maxOffset);\n      int offset=-1;\n      if (pt.y >= maxLocation.y) {\n        if (pt.x >= maxLocation.x) {\n          newOffset=maxOffset;\n        }\n else {\n          try {\n          }\n catch (          IllegalArgumentException ex2) {\n            newOffset=-1;\n          }\n          newOffset=text.getOffsetAtLocation(new Point(pt.x,maxLocation.y));\n        }\n      }\n else {\n        try {\n          int startOffset=text.getOffsetAtLocation(new Point(0,pt.y));\n          int endOffset=maxOffset;\n          int line=text.getLineAtOffset(startOffset);\n          int lineCount=text.getLineCount();\n          if (line + 1 < lineCount) {\n            endOffset=text.getOffsetAtLine(line + 1) - 1;\n          }\n          int lineHeight=text.getLineHeight(startOffset);\n          for (int i=endOffset; i >= startOffset; i--) {\n            if (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n              break;\n            }\n          }\n        }\n catch (        IllegalArgumentException ex2) {\n          newOffset=-1;\n        }\n        newOffset=i;\n      }\n      if (offset != -1 && offset != oldOffset) {\n        OS.ImageList_DragShowNolock(false);\n        text.setCaretOffset(offset);\n        OS.ImageList_DragShowNolock(true);\n      }\n    }\n  }\n}\n",
        "accuracyTokens" : 0.74375,
        "accuracyCharacters" : 0.5472238122495707
      } ],
      "memberId" : "7d61cd41afe733881c46a0d2668c87b0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
      "fileName" : "/src/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void showDropTargetEffect(int effect,int x,int y){\n  if ((effect & DND.FEEDBACK_SELECT) != 0) {\n    Point pt=text.getDisplay().map(null,text,x,y);\n    int oldOffset=text.getCaretOffset();\n    try {\n      int offset=text.getOffsetAtLocation(pt);\n      if (offset != oldOffset) {\n        text.setCaretOffset(offset);\n      }\n    }\n catch (    IllegalArgumentException ex1) {\n      int maxOffset=text.getCharCount();\n      Point maxLocation=text.getLocationAtOffset(maxOffset);\n      int offset=-1;\n      if (pt.y >= maxLocation.y) {\n        if (pt.x >= maxLocation.x) {\n          newOffset=maxOffset;\n        }\n else {\n          try {\n          }\n catch (          IllegalArgumentException ex2) {\n            newOffset=-1;\n          }\n          newOffset=text.getOffsetAtLocation(new Point(pt.x,maxLocation.y));\n        }\n      }\n else {\n        try {\n          int startOffset=text.getOffsetAtLocation(new Point(0,pt.y));\n          int endOffset=maxOffset;\n          int line=text.getLineAtOffset(startOffset);\n          int lineCount=text.getLineCount();\n          if (line + 1 < lineCount) {\n            endOffset=text.getOffsetAtLine(line + 1) - 1;\n          }\n          int lineHeight=text.getLineHeight(startOffset);\n          for (int i=endOffset; i >= startOffset; i--) {\n            if (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n              break;\n            }\n          }\n        }\n catch (        IllegalArgumentException ex2) {\n          newOffset=-1;\n        }\n        newOffset=i;\n      }\n      if (offset != -1 && offset != oldOffset) {\n        text.setCaretOffset(offset);\n      }\n    }\n  }\n}\n",
        "accuracyTokens" : 0.7615894039735099,
        "accuracyCharacters" : 0.5588048315321043
      } ],
      "memberId" : "da3b2c35cd9351da521cad4d1d3f4d36"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "272ce17177489cafd1a8a24ec2c3c365d57fb55a",
      "fileName" : "/src/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void showDropTargetEffect(int effect,int x,int y){\n  int offset=-1;\n  if ((effect & DND.FEEDBACK_SELECT) != 0) {\n    Point pt=text.getDisplay().map(null,text,x,y);\n    try {\n    }\n catch (    IllegalArgumentException ex1) {\n      int maxOffset=text.getCharCount();\n      Point maxLocation=text.getLocationAtOffset(maxOffset);\n      if (pt.y >= maxLocation.y) {\n        if (pt.x >= maxLocation.x) {\n          newOffset=maxOffset;\n        }\n else {\n          try {\n          }\n catch (          IllegalArgumentException ex2) {\n            newOffset=-1;\n          }\n          newOffset=text.getOffsetAtLocation(new Point(pt.x,maxLocation.y));\n        }\n      }\n else {\n        try {\n          int startOffset=text.getOffsetAtLocation(new Point(0,pt.y));\n          int endOffset=maxOffset;\n          int line=text.getLineAtOffset(startOffset);\n          int lineCount=text.getLineCount();\n          if (line + 1 < lineCount) {\n            endOffset=text.getOffsetAtLine(line + 1) - 1;\n          }\n          int lineHeight=text.getLineHeight(startOffset);\n          for (int i=endOffset; i >= startOffset; i--) {\n            if (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n              break;\n            }\n          }\n        }\n catch (        IllegalArgumentException ex2) {\n          newOffset=-1;\n        }\n        newOffset=i;\n      }\n    }\n  }\n  if (caretBounds != null) {\n    drawCaret();\n    caretBounds=null;\n  }\n  if (offset != -1) {\n    text.setCaretOffset(offset);\n    caretBounds=text.getCaret().getBounds();\n    drawCaret();\n  }\n}\n",
        "accuracyTokens" : 0.8295081967213115,
        "accuracyCharacters" : 0.5725699067909454
      } ],
      "memberId" : "df6018a928068c3cc9e7152adfc9f89a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "02a41a72a100251a98dc8e7de59f64c8c32b223d",
      "fileName" : "/src/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void showDropTargetEffect(int effect,int x,int y){\n  int offset=-1;\n  if ((effect & DND.FEEDBACK_SELECT) != 0) {\n    Point pt=text.getDisplay().map(null,text,x,y);\n    try {\n    }\n catch (    IllegalArgumentException ex1) {\n      int maxOffset=text.getCharCount();\n      Point maxLocation=text.getLocationAtOffset(maxOffset);\n      if (pt.y >= maxLocation.y) {\n        if (pt.x >= maxLocation.x) {\n          newOffset=maxOffset;\n        }\n else {\n          try {\n          }\n catch (          IllegalArgumentException ex2) {\n            newOffset=-1;\n          }\n          newOffset=text.getOffsetAtLocation(new Point(pt.x,maxLocation.y));\n        }\n      }\n else {\n        try {\n          int startOffset=text.getOffsetAtLocation(new Point(0,pt.y));\n          int endOffset=maxOffset;\n          int line=text.getLineAtOffset(startOffset);\n          int lineCount=text.getLineCount();\n          if (line + 1 < lineCount) {\n            endOffset=text.getOffsetAtLine(line + 1) - 1;\n          }\n          int lineHeight=text.getLineHeight(startOffset);\n          for (int i=endOffset; i >= startOffset; i--) {\n            if (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n              break;\n            }\n          }\n        }\n catch (        IllegalArgumentException ex2) {\n          newOffset=-1;\n        }\n        newOffset=i;\n      }\n    }\n  }\n  if (caretBounds != null) {\n    drawCaret();\n    caretBounds=null;\n  }\n  if (offset != -1) {\n    text.setCaretOffset(offset);\n    caretBounds=text.getCaret().getBounds();\n    drawCaret();\n  }\n}\n",
        "accuracyTokens" : 0.8295081967213115,
        "accuracyCharacters" : 0.5725699067909454
      } ],
      "memberId" : "cef0db73a399b1914ad62667dddc2be0"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.7910889493540332,
    "accuracyCharactersMin" : 0.5627921143408915,
    "accuracyTokensMax" : 0.7910889493540332,
    "accuracyCharactersMax" : 0.5627921143408915,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 195307023,
    "patternUseTimeInNanoSec" : 331092187
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "139329_2",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2af9e2e868e257c15289f6176b715b56",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 29,
          "methodNumber2" : 29
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "edebc48987254b70c151cb9faad5ccad",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 21,
          "methodNumber2" : 21
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4b6aeb1b0fe44e4b3dacc78c097c968f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 33,
          "methodNumber2" : 33
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2af9e2e868e257c15289f6176b715b56",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 29,
          "methodNumber2" : 29
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4b6aeb1b0fe44e4b3dacc78c097c968f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 33,
          "methodNumber2" : 33
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 29,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void showItem(int index){\n  int index=indexOf(item);\n  Control control=item.control;\n  if (control != null && !control.isDisposed()) {\n    control.setVisible(item.expanded);\n  }\n  item.redraw(true);\n  layoutItems(index + 1,true);\n}\n",
        "accuracyTokens" : 0.6326530612244898,
        "accuracyCharacters" : 0.6476190476190476
      } ],
      "memberId" : "2af9e2e868e257c15289f6176b715b56"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void showItem(int index){\n  int index=indexOf(item);\n  Control control=item.control;\n  if (control != null && !control.isDisposed()) {\n    control.setVisible(item.expanded);\n  }\n  item.redraw();\n  layoutItems(index + 1,true);\n}\n",
        "accuracyTokens" : 0.625,
        "accuracyCharacters" : 0.6407766990291263
      } ],
      "memberId" : "4b6aeb1b0fe44e4b3dacc78c097c968f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "int gtk_key_press_event(int widget,int event){\n  int index=indexOf(item);\n  if (OS.GTK_VERSION >= OS.VERSION(2,4,0)) {\n    if (!hasFocus()) {\n      return 0;\n    }\n    int result=super.gtk_key_press_event(widget,event);\n    if (result != 0) {\n      return result;\n    }\n    int index=0;\n    while (index < itemCount) {\n      if (items[index].hasFocus()) {\n        break;\n      }\n      index++;\n    }\n    GdkEventKey gdkEvent=new GdkEventKey();\n    OS.memmove(gdkEvent,event,GdkEventKey.sizeof);\n    boolean next=false;\nswitch (gdkEvent.keyval) {\ncase OS.GDK_Up:\ncase OS.GDK_Left:\n      next=false;\n    break;\ncase OS.GDK_Down:\ncase OS.GDK_Right:\n  next=true;\nbreak;\ndefault :\nreturn result;\n}\nint start=index, offset=next ? 1 : -1;\nwhile ((index=(index + offset + itemCount) % itemCount) != start) {\nif (item.setFocus()) {\nreturn result;\n}\n}\nreturn result;\n}\n else {\nif (focusIndex != -1) {\nExpandItem item=items[focusIndex];\nGdkEventKey keyEvent=new GdkEventKey();\nOS.memmove(keyEvent,event,GdkEventKey.sizeof);\nswitch (keyEvent.keyval) {\ncase OS.GDK_Return:\ncase OS.GDK_space:\nEvent ev=new Event();\nev.item=item;\nsendEvent(item.expanded ? SWT.Collapse : SWT.Expand,ev);\nitem.expanded=!item.expanded;\nshowItem(focusIndex);\nbreak;\ncase OS.GDK_Up:\ncase OS.GDK_KP_Up:\nif (focusIndex > 0) {\nitem.redraw();\nfocusIndex--;\nitems[focusIndex].redraw();\n}\nbreak;\ncase OS.GDK_Down:\ncase OS.GDK_KP_Down:\nif (focusIndex < itemCount - 1) {\nitem.redraw();\nfocusIndex++;\nitems[focusIndex].redraw();\n}\nbreak;\n}\n}\n}\nreturn super.gtk_key_press_event(widget,event);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void showItem(int index){\n  int index=indexOf(item);\n  Control control=item.control;\n  if (control != null && !control.isDisposed()) {\n    control.setVisible(item.expanded);\n  }\n  item.redraw();\n  layoutItems(index + 1,true);\n}\n",
        "accuracyTokens" : 0.625,
        "accuracyCharacters" : 0.6407766990291263
      } ],
      "memberId" : "edebc48987254b70c151cb9faad5ccad"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 4,
    "precision" : 0.75,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.6275510204081632,
    "accuracyCharactersMin" : 0.6430574818924334,
    "accuracyTokensMax" : 0.6275510204081632,
    "accuracyCharactersMax" : 0.6430574818924334,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 2803043343,
    "patternUseTimeInNanoSec" : 4577096456
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "139329_3",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw (true);+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw (true);+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2894064c7d97283212e104931b4af559",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw ();+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw ();+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f14ec2e4b59f07159d19f5016a9d474c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw ();+\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {+\t\tif (item == lastFocus) {+\t\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\t\tif (focusIndex < itemCount) {+\t\t\t\tlastFocus = items [focusIndex];+\t\t\t\tlastFocus.redraw ();+\t\t\t} else {+\t\t\t\tlastFocus = null;+\t\t\t}+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "225143ad6762326fbfdb0fc8d70a063b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 32467, -9796, 16320, -22344, 1002, 4017, 2089, 2000, 3001, 1002, 4070, 1400, 2000, 2999, 1002, 4070, 2001, 2000, 3001, 1004, 4017, 1006, 1006, 1006, 1002, 4076, 2141, 2000, 2999, 1006, 1000, 4063, 4017, 1000, 4070, 0, 2532, 4063, 1000, 4070, -20509, -31113, 4063, 1000, 4023, 4017, 1000, 4063, 4023, 1002, 4070, 2461, 2000, 2998, 1000, 4070, 0, 2532, 4063, 1000, 4029, 4023, 1000, 4029, 4023, 1000, 4029, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 2999, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2996, 1002, 4070, 1999, 2000, 2996, 1002, 4029, 2000, 2000, 2993, 1002, 4137, 2050, 2000, 2997, 1002, 4029, 1642, 2000, 2996, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 2999, 1007, 4061, 4027, 1000, 4070, 30365, -30, 4077, 1000, 4070, 30365, -30, 4063, 1000, 4070, 30365, -30, 4077, 1000, 4120, 4077, 1001, 4118, 1001, 4018 ],
        "treeSize" : 11
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw (true);+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw (true);+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2894064c7d97283212e104931b4af559",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw ();+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw ();+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f14ec2e4b59f07159d19f5016a9d474c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "treeSize" : 9
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void destroyItem(ExpandItem item){\n  if (inDispose) {\n    return;\n  }\n  int index=0;\n  while (index < itemCount) {\n    if (items[index] == item) {\n      break;\n    }\n    index++;\n  }\n  if (index == itemCount) {\n    return;\n  }\n  if (item == focusItem) {\n    int focusIndex=index > 0 ? index - 1 : 1;\n    if (focusIndex < itemCount) {\n      focusItem=items[focusIndex];\n      focusItem.redraw();\n    }\n else {\n      focusItem=null;\n    }\n  }\n  System.arraycopy(items,index + 1,items,index,--itemCount - index);\n  items[itemCount]=null;\n  item.redraw();\n  layoutItems(index,true);\n}\n",
        "accuracyTokens" : 0.9690721649484536,
        "accuracyCharacters" : 0.7769652650822669
      } ],
      "memberId" : "f14ec2e4b59f07159d19f5016a9d474c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void destroyItem(ExpandItem item){\n  int index=0;\n  while (index < itemCount) {\n    if (items[index] == item) {\n      break;\n    }\n    index++;\n  }\n  if (index == itemCount) {\n    return;\n  }\n  if (item == focusItem) {\n    int focusIndex=index > 0 ? index - 1 : 1;\n    if (focusIndex < itemCount) {\n      focusItem=items[focusIndex];\n      focusItem.redraw();\n    }\n else {\n      focusItem=null;\n    }\n  }\n  System.arraycopy(items,index + 1,items,index,--itemCount - index);\n  items[itemCount]=null;\n  item.redraw();\n  layoutItems(index,true);\n}\n",
        "accuracyTokens" : 0.8173076923076923,
        "accuracyCharacters" : 0.6722532588454376
      } ],
      "memberId" : "225143ad6762326fbfdb0fc8d70a063b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "/src/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void destroyItem(ExpandItem item){\n  int index=0;\n  while (index < itemCount) {\n    if (items[index] == item) {\n      break;\n    }\n    index++;\n  }\n  if (index == itemCount) {\n    return;\n  }\n  if (item == focusItem) {\n    int focusIndex=index > 0 ? index - 1 : 1;\n    if (focusIndex < itemCount) {\n      focusItem=items[focusIndex];\n      focusItem.redraw(true);\n    }\n else {\n      focusItem=null;\n    }\n  }\n  System.arraycopy(items,index + 1,items,index,--itemCount - index);\n  items[itemCount]=null;\n  item.redraw(true);\n  layoutItems(index,true);\n}\n",
        "accuracyTokens" : 0.9789473684210527,
        "accuracyCharacters" : 0.7884615384615384
      } ],
      "memberId" : "2894064c7d97283212e104931b4af559"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9217757418923994,
    "accuracyCharactersMin" : 0.7458933541297476,
    "accuracyTokensMax" : 0.9217757418923994,
    "accuracyCharactersMax" : 0.7458933541297476,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 1698019173,
    "patternUseTimeInNanoSec" : 4409784792
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "142947_2",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\t// Drag under effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else if (control instanceof StyledText) {-\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdropEffect = new TableDropTargetEffect();+\t} else if (control instanceof Tree) {+\t\tdropEffect = new TreeDropTargetEffect();-\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);+\t\t\t\tevent.item = getItem(getControl(), dragOverEvent.x, dragOverEvent.y);-\t\t\t\t-\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6ada29d77953ab4812f42972f3cb8af5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1006, 1002, 4135, 2000, 2000, 3002, 1002, 4070, 2720, 2000, 3006, 1002, 4828, 3191, 2000, 3004, 1006, 1006, 1004, 4070, 1229, 19374, 2005, -16591, 1002, 4016, 1649, 2000, 3003, 1002, 4070, 1391, 2000, 3001, 1002, 4828, 1040, 2000, 3002, 1004, 4070, 28757, -17181, 2005, -16591, 1002, 4135, 2000, 2000, 3000, 1006, 1006, 1004, 4070, -19930, -18031, 7697, -23200, 1002, 4112, 2000, 2000, 3001, 1002, 4828, 2000, 2000, 3000, 1004, 4070, 20351, -2123, 27169, -4385, 1002, 4135, 2000, 2000, 2998, 1002, 4070, 1420, 2000, 2999, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3001, 1004, 4070, 32611, -29504, -158, 27375, 1002, 4070, 1599, 2000, 3001, 1002, 4023, 1621, 1984, 2998, 1002, 4070, 1600, 2000, 2999, 1004, 4070, 19825, 1506, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3004, 1002, 4070, 2040, 2000, 3007, 1000, 4023, 4087, 1002, 4063, 2000, 2000, 3004, 1002, 4070, 2469, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1000, 4070, 7697, -23200, 4077, 1008, 4061, 1008, 4077, 1001, 4070, -19930, -18031, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4828, 979, -20136, 39, -6210, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 32611, -29504, 1001, 4070, -19930, -18031, 1001, 4070, 14519, 25949, 1001, 4070, 14519, 25949, 1001, 4063, 1001, 4070, 23800, 46, 1001, 4063, 1001, 4070, -2923, -5243, 1001, 4063, 1001, 4070, 1, 2298, 1001, 4070, -11859, -30648, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 120, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 121 ],
        "treeSize" : 20
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\t\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\t\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\t-\t// DND effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);++\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t} else if (control instanceof Tree) {+\t\tdragEffect = new TreeDragSourceEffect();-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdragEffect = new TableDragSourceEffect();",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0e790203c3c4dd75e69b9f0140eb3c05",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1004, 4070, 25166, -603, -29595, -28833, 1006, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, -17802, -6912, 1006, 1006, 1002, 4070, 2609, 2000, 3001, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 39, -6210, -19965, -28482, 1006, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 1229, 19374, 7363, 5294, 1004, 4070, 19825, 1506, -17802, -6912, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3002, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1000, 4135, 4027, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1007, 4027, 4027, 1002, 4135, 2000, 2000, 2999, 1000, 4070, -27735, 7141, 4077, 1000, 4070, -27735, 7141, 4077, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949 ],
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\t //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\t //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);++\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t} else if (control instanceof Tree) {+\t\tdragEffect = new TreeDragSourceEffect();-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdragEffect = new TableDragSourceEffect();",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cb73d23c6822e7cb411af1af51c7fab3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1004, 4070, 25166, -603, -29595, -28833, 1006, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, -17802, -6912, 1006, 1006, 1002, 4070, 2609, 2000, 3001, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 39, -6210, -19965, -28482, 1006, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 1229, 19374, 7363, 5294, 1004, 4070, 19825, 1506, -17802, -6912, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3002, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1000, 4135, 4027, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1007, 4027, 4027, 1002, 4135, 2000, 2000, 2999, 1000, 4070, -27735, 7141, 4077, 1000, 4070, -27735, 7141, 4077, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949 ],
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\t//\t Drag and drop effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else if (control instanceof StyledText) {-\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a205165781010dc9bdd973abaa0ee600",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1006, 1004, 4070, 28757, -17181, -29595, -28833, 1004, 4070, -19930, -18031, -2615, -25272, 1004, 4070, 39, -6210, -1154, 22560, 1006, 1002, 4070, 2580, 2000, 3003, 1002, 4828, 2231, 2000, 3004, 1004, 4070, 19825, 1506, -17802, -6912, 1002, 4070, -5510, 2000, 3003, 1002, 4016, 1649, 2000, 3003, 1002, 4070, 1391, 2000, 3001, 1002, 4070, 10119, 2000, 3002, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1002, 4070, 1461, 2000, 2999, 1000, 4063, 4023, 1002, 4070, 2469, 2000, 3000, 1002, 4070, -5649, 2000, 2998, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 32611, -29504, 1001, 4070, 32611, -29504, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4112, 1001, 4070, 14519, 25949, 1008, 4027, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4828, 979, -20136, 39, -6210, 1008, 4027, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 20351, -2123, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374 ],
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "813014ad09778562850c6e495b64c153",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1002, 4135, 2000, 2000, 3001, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1006, 1004, 4070, 19825, 1506, 2005, -16591, 1002, 4070, -5510, 2000, 3000, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, 2005, -16591, 1004, 4070, 1229, 19374, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 2520, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1001, 4070, 14519, 25949, 1001, 4112, 1008, 4027, 1008, 4061, 1008, 4077, 1001, 4112 ],
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "00c495c28774d613c7b07b2baba8c00b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1002, 4135, 2000, 2000, 3001, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1006, 1004, 4070, 19825, 1506, 2005, -16591, 1002, 4070, -5510, 2000, 3000, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, 2005, -16591, 1004, 4070, 1229, 19374, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 2520, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1001, 4070, 14519, 25949, 1001, 4112, 1008, 4027, 1008, 4061, 1008, 4077, 1001, 4112 ],
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "bb683ee54158ac5345210c8cc816484c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c2ba51b847902300aec8ecd9848e485d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d39432f3016c04cbdf296feb1b2795fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "treeSize" : 13
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\t// Drag under effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else if (control instanceof StyledText) {-\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdropEffect = new TableDropTargetEffect();+\t} else if (control instanceof Tree) {+\t\tdropEffect = new TreeDropTargetEffect();-\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);+\t\t\t\tevent.item = getItem(getControl(), dragOverEvent.x, dragOverEvent.y);-\t\t\t\t-\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6ada29d77953ab4812f42972f3cb8af5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1006, 1002, 4135, 2000, 2000, 3002, 1002, 4070, 2720, 2000, 3006, 1002, 4828, 3191, 2000, 3004, 1006, 1006, 1004, 4070, 1229, 19374, 2005, -16591, 1002, 4016, 1649, 2000, 3003, 1002, 4070, 1391, 2000, 3001, 1002, 4828, 1040, 2000, 3002, 1004, 4070, 28757, -17181, 2005, -16591, 1002, 4135, 2000, 2000, 3000, 1006, 1006, 1004, 4070, -19930, -18031, 7697, -23200, 1002, 4112, 2000, 2000, 3001, 1002, 4828, 2000, 2000, 3000, 1004, 4070, 20351, -2123, 27169, -4385, 1002, 4135, 2000, 2000, 2998, 1002, 4070, 1420, 2000, 2999, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3001, 1004, 4070, 32611, -29504, -158, 27375, 1002, 4070, 1599, 2000, 3001, 1002, 4023, 1621, 1984, 2998, 1002, 4070, 1600, 2000, 2999, 1004, 4070, 19825, 1506, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3004, 1002, 4070, 2040, 2000, 3007, 1000, 4023, 4087, 1002, 4063, 2000, 2000, 3004, 1002, 4070, 2469, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1000, 4070, 7697, -23200, 4077, 1008, 4061, 1008, 4077, 1001, 4070, -19930, -18031, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4828, 979, -20136, 39, -6210, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 32611, -29504, 1001, 4070, -19930, -18031, 1001, 4070, 14519, 25949, 1001, 4070, 14519, 25949, 1001, 4063, 1001, 4070, 23800, 46, 1001, 4063, 1001, 4070, -2923, -5243, 1001, 4063, 1001, 4070, 1, 2298, 1001, 4070, -11859, -30648, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 120, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 121 ],
        "treeSize" : 20
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d39432f3016c04cbdf296feb1b2795fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "treeSize" : 13
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n * drop target is created for a control or if the operating system will not allow the creation\n * of the drop target</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DROPTARGETID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  control.setData(DROPTARGETID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (!DropTarget.this.isDisposed()) {\n        DropTarget.this.dispose();\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event event){\n      onDispose();\n    }\n  }\n);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n}\n",
        "accuracyTokens" : 0.6871165644171779,
        "accuracyCharacters" : 0.5801781737193764
      } ],
      "memberId" : "813014ad09778562850c6e495b64c153"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n * drag source is created for a control or if the operating system will not allow the creation\n * of the drag source</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DRAGSOURCEID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  control.setData(DRAGSOURCEID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (event.type == SWT.Dispose) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.dispose();\n        }\n      }\n      if (event.type == SWT.DragDetect) {\n        if (!DragSource.this.isDisposed()) {\n        }\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  control.addListener(SWT.DragDetect,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event e){\n      onDispose();\n    }\n  }\n);\n}\n",
        "accuracyTokens" : 0.6956521739130435,
        "accuracyCharacters" : 0.5351170568561873
      } ],
      "memberId" : "d39432f3016c04cbdf296feb1b2795fd"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n * drop target is created for a control or if the operating system will not allow the creation\n * of the drop target</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DROPTARGETID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  control.setData(DROPTARGETID,this);\n  createCOMInterfaces();\n  this.AddRef();\n  if (COM.CoLockObjectExternal(iDropTarget.getAddress(),true,true) != COM.S_OK) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  if (COM.RegisterDragDrop(control.handle,iDropTarget.getAddress()) != COM.S_OK) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (!DropTarget.this.isDisposed()) {\n        DropTarget.this.dispose();\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event event){\n      onDispose();\n    }\n  }\n);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else   if (control instanceof StyledText) {\n    effect=new StyledTextDragAndDropEffect((StyledText)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n * drag source is created for a control or if the operating system will not allow the creation\n * of the drag source</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DRAGSOURCEID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  control.setData(DRAGSOURCEID,this);\n  createCOMInterfaces();\n  this.AddRef();\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (event.type == SWT.Dispose) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.dispose();\n        }\n      }\n      if (event.type == SWT.DragDetect) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.drag(event);\n        }\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  control.addListener(SWT.DragDetect,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event e){\n      DragSource.this.onDispose();\n    }\n  }\n);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n}\n",
        "accuracyTokens" : 0.7581395348837209,
        "accuracyCharacters" : 0.6312292358803987
      } ],
      "memberId" : "cb73d23c6822e7cb411af1af51c7fab3"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n * drop target is created for a control or if the operating system will not allow the creation\n * of the drop target</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DROPTARGETID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  control.setData(DROPTARGETID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (!DropTarget.this.isDisposed()) {\n        DropTarget.this.dispose();\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event event){\n      onDispose();\n    }\n  }\n);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n}\n",
        "accuracyTokens" : 0.6871165644171779,
        "accuracyCharacters" : 0.5801781737193764
      } ],
      "memberId" : "00c495c28774d613c7b07b2baba8c00b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n * drag source is created for a control or if the operating system will not allow the creation\n * of the drag source</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DRAGSOURCEID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  control.setData(DRAGSOURCEID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (event.type == SWT.Dispose) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.dispose();\n        }\n      }\n      if (event.type == SWT.DragDetect) {\n        if (!DragSource.this.isDisposed()) {\n        }\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  control.addListener(SWT.DragDetect,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event e){\n      onDispose();\n    }\n  }\n);\n}\n",
        "accuracyTokens" : 0.6956521739130435,
        "accuracyCharacters" : 0.5351170568561873
      } ],
      "memberId" : "c2ba51b847902300aec8ecd9848e485d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n * drop target is created for a control or if the operating system will not allow the creation\n * of the drop target</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (Drag_Motion == null || Drag_Leave == null || Drag_Data_Received == null || Drag_Drop == null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  if (control.getData(DROPTARGETID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  control.setData(DROPTARGETID,this);\n  drag_motion_handler=OS.g_signal_connect(control.handle,OS.drag_motion,Drag_Motion.getAddress(),0);\n  drag_leave_handler=OS.g_signal_connect(control.handle,OS.drag_leave,Drag_Leave.getAddress(),0);\n  drag_data_received_handler=OS.g_signal_connect(control.handle,OS.drag_data_received,Drag_Data_Received.getAddress(),0);\n  drag_drop_handler=OS.g_signal_connect(control.handle,OS.drag_drop,Drag_Drop.getAddress(),0);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (!DropTarget.this.isDisposed()) {\n        DropTarget.this.dispose();\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event event){\n      onDispose();\n    }\n  }\n);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else   if (control instanceof StyledText) {\n    effect=new StyledTextDragAndDropEffect((StyledText)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n  dragOverHeartbeat=new Runnable(){\n    public void run(){\n      Control control=DropTarget.this.control;\n      if (control == null || control.isDisposed() || dragOverStart == 0) {\n        return;\n      }\n      long time=System.currentTimeMillis();\n      int delay=DRAGOVER_HYSTERESIS;\n      if (time < dragOverStart) {\n        delay=(int)(dragOverStart - time);\n      }\n else {\n        int allowedOperations=dragOverEvent.operations;\n        TransferData[] allowedTypes=dragOverEvent.dataTypes;\n        TransferData[] dataTypes=new TransferData[allowedTypes.length];\n        System.arraycopy(allowedTypes,0,dataTypes,0,dataTypes.length);\n        DNDEvent event=new DNDEvent();\n        event.widget=dragOverEvent.widget;\n        event.x=dragOverEvent.x;\n        event.y=dragOverEvent.y;\n        event.time=(int)time;\n        event.feedback=DND.FEEDBACK_SELECT;\n        event.dataTypes=dataTypes;\n        event.dataType=selectedDataType;\n        event.operations=dragOverEvent.operations;\n        event.detail=selectedOperation;\n        event.item=effect.getItem(dragOverEvent.x,dragOverEvent.y);\n        selectedDataType=null;\n        selectedOperation=DND.DROP_NONE;\n        notifyListeners(DND.DragOver,event);\n        effect.showDropTargetEffect(event.feedback,DND.DragOver,event.x,event.y);\n        if (event.dataType != null) {\n          for (int i=0; i < allowedTypes.length; i++) {\n            if (allowedTypes[i].type == event.dataType.type) {\n              selectedDataType=event.dataType;\n              break;\n            }\n          }\n        }\n        if (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n          selectedOperation=event.detail;\n        }\n      }\n      control=DropTarget.this.control;\n      if (control == null || control.isDisposed()) {\n        return;\n      }\n      control.getDisplay().timerExec(delay,dragOverHeartbeat);\n    }\n  }\n;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f92974be5295e55dcc64d71b120e30866018b539",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n * drag source is created for a control or if the operating system will not allow the creation\n * of the drag source</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (DragGetData == null || DragEnd == null || DragDataDelete == null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  if (control.getData(DRAGSOURCEID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  control.setData(DRAGSOURCEID,this);\n  OS.g_signal_connect(control.handle,OS.drag_data_get,DragGetData.getAddress(),0);\n  OS.g_signal_connect(control.handle,OS.drag_end,DragEnd.getAddress(),0);\n  OS.g_signal_connect(control.handle,OS.drag_data_delete,DragDataDelete.getAddress(),0);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (event.type == SWT.Dispose) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.dispose();\n        }\n      }\n      if (event.type == SWT.DragDetect) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.drag(event);\n        }\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  control.addListener(SWT.DragDetect,controlListener);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event e){\n      onDispose();\n    }\n  }\n);\n}\n",
        "accuracyTokens" : 0.8074074074074075,
        "accuracyCharacters" : 0.6900198281559815
      } ],
      "memberId" : "0e790203c3c4dd75e69b9f0140eb3c05"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n * drop target is created for a control or if the operating system will not allow the creation\n * of the drop target</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (DropProc == null || DragProc == null || TransferProc == null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  if (control.getData(DROPTARGETID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  control.setData(DROPTARGETID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\nswitch (event.type) {\ncase SWT.Dispose:\n        if (!DropTarget.this.isDisposed()) {\n          onDispose();\n        }\n      break;\ncase SWT.Show:\n    if (!registered) {\n      registerDropTarget();\n    }\n else {\n      int[] args=new int[]{OS.XmNdropSiteActivity,OS.XmDROP_SITE_ACTIVE};\n      OS.XmDropSiteUpdate(DropTarget.this.control.handle,args,args.length / 2);\n      if (DropTarget.this.control instanceof Label) {\n        int formHandle=OS.XtParent(DropTarget.this.control.handle);\n        OS.XmDropSiteUpdate(formHandle,args,args.length / 2);\n      }\n    }\n  break;\ncase SWT.Hide:\nint[] args=new int[]{OS.XmNdropSiteActivity,OS.XmDROP_SITE_INACTIVE};\nOS.XmDropSiteUpdate(DropTarget.this.control.handle,args,args.length / 2);\nif (DropTarget.this.control instanceof Label) {\nint formHandle=OS.XtParent(DropTarget.this.control.handle);\nOS.XmDropSiteUpdate(formHandle,args,args.length / 2);\n}\nbreak;\n}\n}\n}\n;\ncontrol.addListener(SWT.Dispose,controlListener);\nControl c=control;\nwhile (c != null) {\nc.addListener(SWT.Show,controlListener);\nc.addListener(SWT.Hide,controlListener);\nc=c.getParent();\n}\nthis.addListener(SWT.Dispose,new Listener(){\npublic void handleEvent(Event event){\nif (DropTarget.this.control == null || DropTarget.this.control.isDisposed()) {\nreturn;\n}\nunregisterDropTarget();\nonDispose();\n}\n}\n);\nif (control instanceof Tree) {\neffect=new TreeDragAndDropEffect((Tree)control);\n}\n else if (control instanceof Table) {\neffect=new TableDragAndDropEffect((Table)control);\n}\n else if (control instanceof StyledText) {\neffect=new StyledTextDragAndDropEffect((StyledText)control);\n}\n else {\neffect=new NoDragAndDropEffect(control);\n}\nif (control.isVisible()) {\nregisterDropTarget();\n}\ndragOverHeartbeat=new Runnable(){\npublic void run(){\nControl control=DropTarget.this.control;\nif (control == null || control.isDisposed() || dragOverStart == 0) {\nreturn;\n}\nlong time=System.currentTimeMillis();\nint delay=DRAGOVER_HYSTERESIS;\nif (time < dragOverStart) {\ndelay=(int)(dragOverStart - time);\n}\n else {\nint allowedOperations=dragOverEvent.operations;\nTransferData[] allowedTypes=dragOverEvent.dataTypes;\nTransferData[] dataTypes=new TransferData[allowedTypes.length];\nSystem.arraycopy(allowedTypes,0,dataTypes,0,dataTypes.length);\nDNDEvent event=new DNDEvent();\nevent.widget=dragOverEvent.widget;\nevent.x=dragOverEvent.x;\nevent.y=dragOverEvent.y;\nevent.time=(int)time;\nevent.feedback=DND.FEEDBACK_SELECT;\nevent.dataTypes=dataTypes;\nevent.dataType=selectedDataType;\nevent.operations=dragOverEvent.operations;\nevent.detail=selectedOperation;\nevent.item=effect.getItem(dragOverEvent.x,dragOverEvent.y);\nnotifyListeners(DND.DragOver,event);\neffect.showDropTargetEffect(event.feedback,DND.DragOver,event.x,event.y);\nselectedDataType=null;\nif (event.dataType != null) {\nfor (int i=0; i < allowedTypes.length; i++) {\nif (allowedTypes[i].type == event.dataType.type) {\nselectedDataType=event.dataType;\nbreak;\n}\n}\n}\nselectedOperation=DND.DROP_NONE;\nif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\nselectedOperation=event.detail;\n}\n}\ncontrol=DropTarget.this.control;\nif (control == null || control.isDisposed()) {\nreturn;\n}\ncontrol.getDisplay().timerExec(delay,dragOverHeartbeat);\n}\n}\n;\n}\n",
        "accuracyTokens" : 0.892,
        "accuracyCharacters" : 0.7379692617787856
      } ],
      "memberId" : "6ada29d77953ab4812f42972f3cb8af5"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n * drag source is created for a control or if the operating system will not allow the creation\n * of the drag source</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control,int style){\n  super(control,checkStyle(style));\n  if (ConvertProc == null || DragDropFinish == null || DropFinish == null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DRAGSOURCEID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  control.setData(DRAGSOURCEID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (event.type == SWT.Dispose) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.dispose();\n        }\n      }\n      if (event.type == SWT.DragDetect) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.drag(event);\n        }\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  control.addListener(SWT.DragDetect,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event e){\n      onDispose();\n    }\n  }\n);\n}\n",
        "accuracyTokens" : 0.7340425531914894,
        "accuracyCharacters" : 0.59765625
      } ],
      "memberId" : "bb683ee54158ac5345210c8cc816484c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n * drop target is created for a control or if the operating system will not allow the creation\n * of the drop target</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (DragTrackingHandler == null || DragTrackingHandler == null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  if (control.getData(DROPTARGETID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DROP);\n  }\n  control.setData(DROPTARGETID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (!DropTarget.this.isDisposed()) {\n        DropTarget.this.dispose();\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event event){\n      onDispose();\n    }\n  }\n);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else   if (control instanceof StyledText) {\n    effect=new StyledTextDragAndDropEffect((StyledText)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n  dragOverHeartbeat=new Runnable(){\n    public void run(){\n      Control control=DropTarget.this.control;\n      if (control == null || control.isDisposed() || dragOverStart == 0) {\n        return;\n      }\n      long time=System.currentTimeMillis();\n      int delay=DRAGOVER_HYSTERESIS;\n      if (time < dragOverStart) {\n        delay=(int)(dragOverStart - time);\n      }\n else {\n        int allowedOperations=dragOverEvent.operations;\n        TransferData[] allowedTypes=dragOverEvent.dataTypes;\n        TransferData[] dataTypes=new TransferData[allowedTypes.length];\n        System.arraycopy(allowedTypes,0,dataTypes,0,dataTypes.length);\n        DNDEvent event=new DNDEvent();\n        event.widget=dragOverEvent.widget;\n        event.x=dragOverEvent.x;\n        event.y=dragOverEvent.y;\n        event.time=(int)time;\n        event.feedback=DND.FEEDBACK_SELECT;\n        event.dataTypes=dataTypes;\n        event.dataType=selectedDataType;\n        event.operations=dragOverEvent.operations;\n        event.detail=selectedOperation;\n        event.item=effect.getItem(event.x,event.y);\n        selectedDataType=null;\n        selectedOperation=DND.DROP_NONE;\n        notifyListeners(DND.DragOver,event);\n        effect.showDropTargetEffect(event.feedback,DND.DragOver,event.x,event.y);\n        if (event.dataType != null) {\n          for (int i=0; i < allowedTypes.length; i++) {\n            if (allowedTypes[i].type == event.dataType.type) {\n              selectedDataType=event.dataType;\n              break;\n            }\n          }\n        }\n        if (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n          selectedOperation=event.detail;\n        }\n      }\n      control=DropTarget.this.control;\n      if (control == null || control.isDisposed()) {\n        return;\n      }\n      control.getDisplay().timerExec(delay,dragOverHeartbeat);\n    }\n  }\n;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f8fe23a917bfec64ec37ec88389dd25746799609",
      "fileName" : "/src/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n * DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n * <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n * drag source is created for a control or if the operating system will not allow the creation\n * of the drag source</li>\n * </ul>\n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control,int style){\n  super(control,checkStyle(style));\n  this.control=control;\n  Object effect=control.getData(v$_0_);\n  if (effect instanceof t$_0_) {\n    v$_1_=(t$_0_)effect;\n  }\n  if (control.getData(DRAGSOURCEID) != null) {\n    DND.error(DND.ERROR_CANNOT_INIT_DRAG);\n  }\n  control.setData(DRAGSOURCEID,this);\n  controlListener=new Listener(){\n    public void handleEvent(    Event event){\n      if (event.type == SWT.Dispose) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.dispose();\n        }\n      }\n      if (event.type == SWT.DragDetect) {\n        if (!DragSource.this.isDisposed()) {\n          DragSource.this.drag(event);\n        }\n      }\n    }\n  }\n;\n  control.addListener(SWT.Dispose,controlListener);\n  control.addListener(SWT.DragDetect,controlListener);\n  this.addListener(SWT.Dispose,new Listener(){\n    public void handleEvent(    Event e){\n      onDispose();\n    }\n  }\n);\n  if (control instanceof Tree) {\n    effect=new TreeDragAndDropEffect((Tree)control);\n  }\n else   if (control instanceof Table) {\n    effect=new TableDragAndDropEffect((Table)control);\n  }\n else   if (control instanceof StyledText) {\n    effect=new StyledTextDragAndDropEffect((StyledText)control);\n  }\n else {\n    effect=new NoDragAndDropEffect(control);\n  }\n}\n",
        "accuracyTokens" : 0.7090909090909091,
        "accuracyCharacters" : 0.5777777777777777
      } ],
      "memberId" : "a205165781010dc9bdd973abaa0ee600"
    } ],
    "foundMembers" : 9,
    "numberOfRecommendationSets" : 12,
    "precision" : 0.75,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.7406908756926633,
    "accuracyCharactersMin" : 0.60724920163823,
    "accuracyTokensMax" : 0.7406908756926633,
    "accuracyCharactersMax" : 0.60724920163823,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 297365344,
    "patternUseTimeInNanoSec" : 410195712
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "76182",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nint shiftedKey (int key)",
      "diff" : "+\tif (synchronizer == this.synchronizer) return;",
      "commitMsg" : "76182 - Display.setSynchronizer considered harmful",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f57decb8b2ec2821183980c420a424",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
          "commitId2" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 133,
          "methodNumber2" : 134
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22379, -31454, 4017, 1000, 4063, 4017, 1000, 4132, 4063, 1000, 4070, -22379, -31454, 4063, 1007, 4047, 4027 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nvoid setMenuBar (Menu menu)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "52b070c0c3f05139478d6ff0a70bbe6d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 137,
          "methodNumber2" : 138
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nvoid showIMWindow (Control control)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9d2949a58f429f843db67380f2f36636",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 121,
          "methodNumber2" : 122
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\nvoid setToolTipText (int handle, String toolTipText)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b52e104286a62bbc773d970b4462587",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 115,
          "methodNumber2" : 116
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\n/**\n * Causes the user-interface thread to <em>sleep</em> (that is,\n * to be put in a state where it does not consume CPU cycles)\n * until an event is received or it is otherwise awakened.\n *\n * @return <code>true</code> if an event requiring dispatching was placed on the queue.\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n *\n * @see #wake\n */\npublic boolean sleep ()",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f59de5ef7d7afb0d622d5751ad522fc1",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 86,
          "methodNumber2" : 87
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\n/**\n * Causes the user-interface thread to <em>sleep</em> (that is,\n * to be put in a state where it does not consume CPU cycles)\n * until an event is received or it is otherwise awakened.\n *\n * @return <code>true</code> if an event requiring dispatching was placed on the queue.\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n *\n * @see #wake\n */\npublic boolean sleep ()",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5287de7fefbc90cf40d848a75c32628",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 98,
          "methodNumber2" : 99
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nint shiftedKey (int key)",
      "diff" : "+\tif (synchronizer == this.synchronizer) return;",
      "commitMsg" : "76182 - Display.setSynchronizer considered harmful",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f57decb8b2ec2821183980c420a424",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
          "commitId2" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 133,
          "methodNumber2" : 134
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22379, -31454, 4017, 1000, 4063, 4017, 1000, 4132, 4063, 1000, 4070, -22379, -31454, 4063, 1007, 4047, 4027 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nvoid showIMWindow (Control control)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9d2949a58f429f843db67380f2f36636",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 121,
          "methodNumber2" : 122
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
      "fileName" : "/src/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 137,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n * @param synchronizer the new synchronizer for the display (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer(Synchronizer synchronizer){\n  checkDevice();\n  if (synchronizer == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (synchronizer == this.synchronizer) {\n    return;\n  }\n  if (this.synchronizer != null) {\n    this.synchronizer.runAsyncMessages(true);\n  }\n  this.synchronizer=synchronizer;\n}\n",
        "accuracyTokens" : 0.48,
        "accuracyCharacters" : 0.5202312138728323
      } ],
      "memberId" : "52b070c0c3f05139478d6ff0a70bbe6d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
      "fileName" : "/src/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 121,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n * @param synchronizer the new synchronizer for the display (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer(Synchronizer synchronizer){\n  checkDevice();\n  if (synchronizer == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (synchronizer == this.synchronizer) {\n    return;\n  }\n  if (this.synchronizer != null) {\n    this.synchronizer.runAsyncMessages(true);\n  }\n  this.synchronizer=synchronizer;\n}\n",
        "accuracyTokens" : 0.48,
        "accuracyCharacters" : 0.5202312138728323
      } ],
      "memberId" : "9d2949a58f429f843db67380f2f36636"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
      "fileName" : "/src/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 115,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n * @param synchronizer the new synchronizer for the display (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer(Synchronizer synchronizer){\n  checkDevice();\n  if (synchronizer == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (synchronizer == this.synchronizer) {\n    return;\n  }\n  if (this.synchronizer != null) {\n    this.synchronizer.runAsyncMessages(true);\n  }\n  this.synchronizer=synchronizer;\n}\n",
        "accuracyTokens" : 0.48,
        "accuracyCharacters" : 0.5202312138728323
      } ],
      "memberId" : "8b52e104286a62bbc773d970b4462587"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
      "fileName" : "/src/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 86,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n * @param synchronizer the new synchronizer for the display (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer(Synchronizer synchronizer){\n  checkDevice();\n  if (synchronizer == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (synchronizer == this.synchronizer) {\n    return;\n  }\n  if (this.synchronizer != null) {\n    this.synchronizer.runAsyncMessages(true);\n  }\n  this.synchronizer=synchronizer;\n}\n",
        "accuracyTokens" : 0.48,
        "accuracyCharacters" : 0.5202312138728323
      } ],
      "memberId" : "f59de5ef7d7afb0d622d5751ad522fc1"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
      "fileName" : "/src/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 98,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n * @param synchronizer the new synchronizer for the display (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer(Synchronizer synchronizer){\n  checkDevice();\n  if (synchronizer == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (synchronizer == this.synchronizer) {\n    return;\n  }\n  if (this.synchronizer != null) {\n    this.synchronizer.runAsyncMessages(true);\n  }\n  this.synchronizer=synchronizer;\n}\n",
        "accuracyTokens" : 0.48,
        "accuracyCharacters" : 0.5202312138728323
      } ],
      "memberId" : "f5287de7fefbc90cf40d848a75c32628"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
      "fileName" : "/src/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 133,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n * @param synchronizer the new synchronizer for the display (must not be null)\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer(Synchronizer synchronizer){\n  checkDevice();\n  if (synchronizer == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (synchronizer == this.synchronizer) {\n    return;\n  }\n  Synchronizer oldSynchronizer;\nsynchronized (Device.class) {\n    oldSynchronizer=this.synchronizer;\n    this.synchronizer=synchronizer;\n  }\n  if (oldSynchronizer != null) {\n    oldSynchronizer.runAsyncMessages(true);\n  }\n}\n",
        "accuracyTokens" : 0.9615384615384616,
        "accuracyCharacters" : 0.8544474393530997
      } ],
      "memberId" : "f3f57decb8b2ec2821183980c420a424"
    } ],
    "foundMembers" : 6,
    "numberOfRecommendationSets" : 6,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.5602564102564103,
    "accuracyCharactersMin" : 0.5759339181195435,
    "accuracyTokensMax" : 0.5602564102564103,
    "accuracyCharactersMax" : 0.5759339181195435,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 3224251358,
    "patternUseTimeInNanoSec" : 10744166665
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "77194",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return the ID of the button that was selected to dismiss the\n *         message box (e.g. SWT.OK, SWT.CANCEL, etc...)\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic int open ()",
      "methodModified" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return the ID of the button that was selected to dismiss the\n *         message box (e.g. SWT.OK, SWT.CANCEL, etc...)\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic int open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible (); +\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList1 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList1, argList1.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList1 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList1 [3]) / 2;+\t\tint[] argList2 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList2, argList2.length / 2);+\t}-\t+",
      "commitMsg" : "94429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "24bbecc32da18833e1217645b45f1485",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1649f9291e5ab587842ff74da4e7552a83358f40",
          "commitId2" : "cec8d1f59cc30d6b9f2a9a3c74fa145c00429317",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MessageBox.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -355, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -355, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -355, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -355, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -355, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -354, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -354, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -354, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;+\t\tint[] argList5 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);+\t}",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "86877308add979cb916d7aeebaa60dfb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "87bde8ecf91d5b6cb5383cb413b8a36aca5ffd8f",
          "commitId2" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -351, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();-\t\tOS.XmNfilterLabelString, xmStringPtr4+\t\tOS.XmNfilterLabelString, xmStringPtr4,+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,-\t* Bug in AIX. The dialog does not responde to input, if the parent-\t* is not realized.  The fix is to realized the parent.  +\t* Bug in AIX. The dialog does not respond to input, if the parent+\t* is not realized.  The fix is to realize the parent.  -\tint [] argList = {+\tint [] argList2 = {-\tint textArea = OS.XmCreateLabel(dialog, name, argList, argList.length/2);+\tint textArea = OS.XmCreateLabel(dialog, name, argList2, argList2.length/2);+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList3 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList3, argList3.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList3 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList3 [3]) / 2;+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList4, argList4.length / 2);+\t}-\t\tint [] argList2 = {OS.XmNdirMask, 0};-\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);-\t\tint xmString3 = argList2 [1];+\t\tint [] argList5 = {OS.XmNdirMask, 0};+\t\tOS.XtGetValues (dialog, argList5, argList5.length / 2);+\t\tint xmString3 = argList5 [1];",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7487c6222f62527d4afd13672d2a173b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "commitId2" : "dd5d27ae2bd4eb2cc73da0a3725fc80f024c4ac2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/DirectoryDialog.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1004, 4095, 1002, 4070, 2000, 2001, 2999, 1002, 4039, 2000, 2001, 2999, 1027, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -24837, -354, -24837, -351, 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1007, 4023, 4061, 1002, 4070, 2000, 1999, 3001, 1002, 4039, 2000, 1999, 3001, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082, 1002, 4070, 2000, 2000, 3002, 1002, 4095, 2000, 2000, 3000, 1000, 4070, -24837, -351, 4067, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039 ],
        "treeSize" : 12
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;+\t\tint[] argList5 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);+\t}",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "86877308add979cb916d7aeebaa60dfb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "87bde8ecf91d5b6cb5383cb413b8a36aca5ffd8f",
          "commitId2" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -351, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();-\t\tOS.XmNfilterLabelString, xmStringPtr4+\t\tOS.XmNfilterLabelString, xmStringPtr4,+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,-\t* Bug in AIX. The dialog does not responde to input, if the parent-\t* is not realized.  The fix is to realized the parent.  +\t* Bug in AIX. The dialog does not respond to input, if the parent+\t* is not realized.  The fix is to realize the parent.  -\tint [] argList = {+\tint [] argList2 = {-\tint textArea = OS.XmCreateLabel(dialog, name, argList, argList.length/2);+\tint textArea = OS.XmCreateLabel(dialog, name, argList2, argList2.length/2);+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList3 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList3, argList3.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList3 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList3 [3]) / 2;+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList4, argList4.length / 2);+\t}-\t\tint [] argList2 = {OS.XmNdirMask, 0};-\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);-\t\tint xmString3 = argList2 [1];+\t\tint [] argList5 = {OS.XmNdirMask, 0};+\t\tOS.XtGetValues (dialog, argList5, argList5.length / 2);+\t\tint xmString3 = argList5 [1];",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7487c6222f62527d4afd13672d2a173b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "commitId2" : "dd5d27ae2bd4eb2cc73da0a3725fc80f024c4ac2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/DirectoryDialog.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1004, 4095, 1002, 4070, 2000, 2001, 2999, 1002, 4039, 2000, 2001, 2999, 1027, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -24837, -354, -24837, -351, 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1007, 4023, 4061, 1002, 4070, 2000, 1999, 3001, 1002, 4039, 2000, 1999, 3001, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082, 1002, 4070, 2000, 2000, 3002, 1002, 4095, 2000, 2000, 3000, 1000, 4070, -24837, -351, 4067, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039 ],
        "treeSize" : 12
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "87bde8ecf91d5b6cb5383cb413b8a36aca5ffd8f",
      "fileName" : "/src/org/eclipse/swt/widgets/FileDialog.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Makes the dialog visible and brings it to the front\n * of the display.\n * @return a string describing the absolute path of the first selected file,\n * or null if the dialog was cancelled or an error occurred\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open(){\n  String string=title;\n  if (string.length() == 0) {\n    string=\" \";\n  }\n  byte[] buffer1=Converter.wcsToMbcs(null,string,true);\n  int xmStringPtr1=OS.XmStringParseText(buffer1,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  fullPath=null;\n  fileNames=new String[0];\n  String mask=FILTER;\n  if (filterExtensions == null) {\n    filterExtensions=new String[0];\n  }\n  if (filterNames == null) {\n    filterNames=new String[0];\n  }\n  if (filterExtensions.length != 0) {\n    if (filterExtensions.length == 1) {\n      String filter=filterExtensions[0];\n      if (filter.indexOf(';',0) == -1) {\n        mask=filter;\n      }\n    }\n  }\n  byte[] buffer2=Converter.wcsToMbcs(null,mask,true);\n  int xmStringPtr2=OS.XmStringParseText(buffer2,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  if (filterPath == null) {\n    filterPath=\"\";\n  }\n  int length=filterPath.length();\n  if (length == 0 || filterPath.charAt(length - 1) != SEPARATOR) {\n    filterPath+=SEPARATOR;\n  }\n  byte[] buffer3=Converter.wcsToMbcs(null,filterPath,true);\n  int xmStringPtr3=OS.XmStringParseText(buffer3,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  Display display=parent.display;\n  int[] argList1={OS.XmNresizePolicy,OS.XmRESIZE_NONE,OS.XmNdialogStyle,OS.XmDIALOG_PRIMARY_APPLICATION_MODAL,OS.XmNwidth,OS.XDisplayWidth(display.xDisplay,OS.XDefaultScreen(display.xDisplay)) * 4 / 9,OS.XmNpathMode,OS.XmPATH_MODE_FULL,OS.XmNdialogTitle,xmStringPtr1,OS.XmNpattern,xmStringPtr2,OS.XmNdirMask,xmStringPtr3};\n  if (OS.IsAIX) {\n    parent.realizeWidget();\n  }\n  int parentHandle=parent.shellHandle;\n  byte[] name=new byte[]{0};\n  dialog=OS.XmCreateFileSelectionDialog(parentHandle,name,argList1,argList1.length / 2);\n  int child=OS.XmFileSelectionBoxGetChild(dialog,OS.XmDIALOG_HELP_BUTTON);\n  if (child != 0) {\n    OS.XtUnmanageChild(child);\n  }\n  OS.XmStringFree(xmStringPtr1);\n  OS.XmStringFree(xmStringPtr2);\n  OS.XmStringFree(xmStringPtr3);\n  if (fileName != null && fileName.length() > 0) {\n    byte[] buffer4=Converter.wcsToMbcs(null,fileName,true);\n    int xmStringPtr4=OS.XmStringParseText(buffer4,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n    int[] argList2={OS.XmNdirSpec,0};\n    OS.XtGetValues(dialog,argList2,argList2.length / 2);\n    int oldDirSpec=argList2[1];\n    int newDirSpec=OS.XmStringConcat(oldDirSpec,xmStringPtr4);\n    argList2[1]=newDirSpec;\n    OS.XtSetValues(dialog,argList2,argList2.length / 2);\n    OS.XmStringFree(xmStringPtr4);\n    OS.XmStringFree(oldDirSpec);\n    OS.XmStringFree(newDirSpec);\n  }\n  Callback cancelCallback=new Callback(this,\"cancelPressed\",3);\n  int cancelAddress=cancelCallback.getAddress();\n  if (cancelAddress == 0) {\n    SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);\n  }\n  OS.XtAddCallback(dialog,OS.XmNcancelCallback,cancelAddress,0);\n  Callback okCallback=new Callback(this,\"okPressed\",3);\n  int okAddress=okCallback.getAddress();\n  if (okAddress == 0) {\n    SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);\n  }\n  OS.XtAddCallback(dialog,OS.XmNokCallback,okAddress,0);\n  Callback selectCallback=null;\n  if ((style & SWT.MULTI) != 0) {\n    child=OS.XmFileSelectionBoxGetChild(dialog,OS.XmDIALOG_LIST);\n    if (child != 0) {\n      int[] argList3={OS.XmNselectionPolicy,OS.XmEXTENDED_SELECT};\n      OS.XtSetValues(child,argList3,argList3.length / 2);\n      selectCallback=new Callback(this,\"itemSelected\",3);\n      int selectAddress=selectCallback.getAddress();\n      if (selectAddress == 0) {\n        error(SWT.ERROR_NO_MORE_CALLBACKS);\n      }\n      OS.XtAddCallback(child,OS.XmNextendedSelectionCallback,selectAddress,0);\n    }\n  }\n  OS.XtManageChild(dialog);\n  while (OS.XtIsRealized(dialog) && OS.XtIsManaged(dialog)) {\n    if (!display.readAndDispatch()) {\n      display.sleep();\n    }\n  }\n  if (OS.XtIsRealized(dialog)) {\n    OS.XtDestroyWidget(dialog);\n  }\n  okCallback.dispose();\n  cancelCallback.dispose();\n  if (selectCallback != null) {\n    selectCallback.dispose();\n  }\n  return fullPath;\n}\n",
        "accuracyTokens" : 0.8137254901960784,
        "accuracyCharacters" : 0.5705470313542361
      } ],
      "memberId" : "86877308add979cb916d7aeebaa60dfb"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
      "fileName" : "/src/org/eclipse/swt/widgets/DirectoryDialog.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Makes the dialog visible and brings it to the front\n * of the display.\n * @return a string describing the absolute path of the selected directory,\n * or null if the dialog was cancelled or an error occurred\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open(){\n  String string=title;\n  if (string.length() == 0) {\n    string=\" \";\n  }\n  byte[] buffer1=Converter.wcsToMbcs(null,string,true);\n  int xmStringPtr1=OS.XmStringParseText(buffer1,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  byte[] buffer2=Converter.wcsToMbcs(null,\"*\",true);\n  int xmStringPtr2=OS.XmStringParseText(buffer2,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  if (filterPath == null) {\n    filterPath=\"\";\n  }\n  byte[] buffer3=Converter.wcsToMbcs(null,filterPath,true);\n  int xmStringPtr3=OS.XmStringParseText(buffer3,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  byte[] buffer7=Converter.wcsToMbcs(null,SWT.getMessage(\"SWT_Selection\"),true);\n  int xmStringPtr4=OS.XmStringParseText(buffer7,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  Display display=parent.display;\n  int[] argList1={OS.XmNresizePolicy,OS.XmRESIZE_NONE,OS.XmNdialogStyle,OS.XmDIALOG_PRIMARY_APPLICATION_MODAL,OS.XmNwidth,OS.XDisplayWidth(display.xDisplay,OS.XDefaultScreen(display.xDisplay)) * 4 / 9,OS.XmNdialogTitle,xmStringPtr1,OS.XmNpattern,xmStringPtr2,OS.XmNdirectory,xmStringPtr3,OS.XmNpathMode,OS.XmPATH_MODE_FULL,OS.XmNfilterLabelString,xmStringPtr4};\n  if (OS.IsAIX) {\n    parent.realizeWidget();\n  }\n  int parentHandle=parent.shellHandle;\n  byte[] name=new byte[]{0};\n  int dialog=OS.XmCreateFileSelectionDialog(parentHandle,name,argList1,argList1.length / 2);\n  int child=OS.XmFileSelectionBoxGetChild(dialog,OS.XmDIALOG_HELP_BUTTON);\n  if (child != 0) {\n    OS.XtUnmanageChild(child);\n  }\n  child=OS.XmFileSelectionBoxGetChild(dialog,OS.XmDIALOG_LIST);\n  if (child != 0) {\n    int parent2=OS.XtParent(child);\n    if (parent2 != 0) {\n      OS.XtUnmanageChild(parent2);\n    }\n  }\n  child=OS.XmFileSelectionBoxGetChild(dialog,OS.XmDIALOG_LIST_LABEL);\n  if (child != 0) {\n    OS.XtUnmanageChild(child);\n  }\n  child=OS.XmFileSelectionBoxGetChild(dialog,OS.XmDIALOG_TEXT);\n  if (child != 0) {\n    OS.XtUnmanageChild(child);\n  }\n  child=OS.XmFileSelectionBoxGetChild(dialog,OS.XmDIALOG_SELECTION_LABEL);\n  if (child != 0) {\n    OS.XtUnmanageChild(child);\n  }\n  OS.XmStringFree(xmStringPtr1);\n  OS.XmStringFree(xmStringPtr2);\n  OS.XmStringFree(xmStringPtr3);\n  OS.XmStringFree(xmStringPtr4);\n  byte[] buffer4=Converter.wcsToMbcs(null,message,true);\n  int xmString1=OS.XmStringGenerate(buffer4,null,OS.XmCHARSET_TEXT,null);\n  int[] argList={OS.XmNlabelType,OS.XmSTRING,OS.XmNlabelString,xmString1};\n  int textArea=OS.XmCreateLabel(dialog,name,argList,argList.length / 2);\n  OS.XtManageChild(textArea);\n  OS.XmStringFree(xmString1);\n  Callback callback=new Callback(this,\"activate\",3);\n  int address=callback.getAddress();\n  if (address == 0) {\n    SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);\n  }\n  OS.XtAddCallback(dialog,OS.XmNokCallback,address,OS.XmDIALOG_OK_BUTTON);\n  OS.XtAddCallback(dialog,OS.XmNcancelCallback,address,OS.XmDIALOG_CANCEL_BUTTON);\n  cancel=true;\n  OS.XtManageChild(dialog);\n  while (OS.XtIsRealized(dialog) && OS.XtIsManaged(dialog)) {\n    if (!display.readAndDispatch()) {\n      display.sleep();\n    }\n  }\n  String directoryPath=\"\";\n  if (!cancel) {\n    int[] argList2={OS.XmNdirMask,0};\n    OS.XtGetValues(dialog,argList2,argList2.length / 2);\n    int xmString3=argList2[1];\n    int[] table=new int[]{display.tabMapping,display.crMapping};\n    int ptr=OS.XmStringUnparse(xmString3,null,OS.XmCHARSET_TEXT,OS.XmCHARSET_TEXT,table,table.length,OS.XmOUTPUT_ALL);\n    if (ptr != 0) {\n      int length=OS.strlen(ptr);\n      byte[] buffer=new byte[length];\n      OS.memmove(buffer,ptr,length);\n      OS.XtFree(ptr);\n      directoryPath=new String(Converter.mbcsToWcs(null,buffer));\n    }\n    OS.XmStringFree(xmString3);\n    int length=directoryPath.length();\n    if (directoryPath.charAt(length - 1) == '*') {\n      directoryPath=directoryPath.substring(0,length - 1);\n      length--;\n    }\n    if (directoryPath.endsWith(SEPARATOR) && !directoryPath.equals(SEPARATOR)) {\n      directoryPath=directoryPath.substring(0,length - 1);\n    }\n    filterPath=directoryPath;\n  }\n  if (OS.XtIsRealized(dialog)) {\n    OS.XtDestroyWidget(dialog);\n  }\n  callback.dispose();\n  if (cancel) {\n    return null;\n  }\n  return directoryPath;\n}\n",
        "accuracyTokens" : 0.8210313447927199,
        "accuracyCharacters" : 0.5832801531589024
      } ],
      "memberId" : "7487c6222f62527d4afd13672d2a173b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1649f9291e5ab587842ff74da4e7552a83358f40",
      "fileName" : "/src/org/eclipse/swt/widgets/MessageBox.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Makes the dialog visible and brings it to the front\n * of the display.\n * @return the ID of the button that was selected to dismiss the\n * message box (e.g. SWT.OK, SWT.CANCEL, etc...)\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic int open(){\n  String string=title;\n  if (string.length() == 0) {\n    string=\" \";\n  }\n  byte[] buffer=Converter.wcsToMbcs(null,string,true);\n  int xmStringPtr=OS.XmStringParseText(buffer,0,OS.XmFONTLIST_DEFAULT_TAG,OS.XmCHARSET_TEXT,null,0,0);\n  int dialogStyle=OS.XmDIALOG_MODELESS;\n  if ((style & SWT.PRIMARY_MODAL) != 0) {\n    dialogStyle=OS.XmDIALOG_PRIMARY_APPLICATION_MODAL;\n  }\n  if ((style & SWT.APPLICATION_MODAL) != 0) {\n    dialogStyle=OS.XmDIALOG_FULL_APPLICATION_MODAL;\n  }\n  if ((style & SWT.SYSTEM_MODAL) != 0) {\n    dialogStyle=OS.XmDIALOG_SYSTEM_MODAL;\n  }\n  if (parent != null && dialogStyle == OS.XmDIALOG_MODELESS) {\n    dialogStyle=OS.XmDIALOG_PRIMARY_APPLICATION_MODAL;\n  }\n  int[] argList={OS.XmNnoResize,1,OS.XmNresizePolicy,OS.XmRESIZE_NONE,OS.XmNdialogStyle,dialogStyle,OS.XmNdialogTitle,xmStringPtr};\n  int parentHandle=parent.shellHandle;\n  int dialog=createHandle(parentHandle,argList);\n  if (dialog == 0) {\n    error(SWT.ERROR_NO_HANDLES);\n  }\n  OS.XmStringFree(xmStringPtr);\n  setMessage(dialog);\n  setButtons(dialog);\n  Callback callback=new Callback(this,\"activate\",3);\n  int address=callback.getAddress();\n  if (address == 0) {\n    SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);\n  }\n  OS.XtAddCallback(dialog,OS.XmNokCallback,address,OS.XmDIALOG_OK_BUTTON);\n  OS.XtAddCallback(dialog,OS.XmNcancelCallback,address,OS.XmDIALOG_CANCEL_BUTTON);\n  OS.XtAddCallback(dialog,OS.XmNhelpCallback,address,OS.XmDIALOG_HELP_BUTTON);\n  OS.XtManageChild(dialog);\n  Display display=parent.display;\n  while (OS.XtIsRealized(dialog) && OS.XtIsManaged(dialog)) {\n    if (!display.readAndDispatch()) {\n      display.sleep();\n    }\n  }\n  if (OS.XtIsRealized(dialog)) {\n    OS.XtDestroyWidget(dialog);\n  }\n  callback.dispose();\n  if ((style & (SWT.YES | SWT.NO | SWT.CANCEL)) == (SWT.YES | SWT.NO | SWT.CANCEL)) {\n    if (button == OS.XmDIALOG_OK_BUTTON) {\n      return SWT.YES;\n    }\n    if (button == OS.XmDIALOG_CANCEL_BUTTON) {\n      return SWT.NO;\n    }\n    return SWT.CANCEL;\n  }\n  if ((style & (SWT.YES | SWT.NO)) == (SWT.YES | SWT.NO)) {\n    return (button == OS.XmDIALOG_OK_BUTTON) ? SWT.YES : SWT.NO;\n  }\n  if ((style & (SWT.OK | SWT.CANCEL)) == (SWT.OK | SWT.CANCEL)) {\n    return (button == OS.XmDIALOG_OK_BUTTON) ? SWT.OK : SWT.CANCEL;\n  }\n  if ((style & SWT.OK) == SWT.OK) {\n    return SWT.OK;\n  }\n  if ((style & (SWT.RETRY | SWT.CANCEL)) == (SWT.RETRY | SWT.CANCEL)) {\n    return (button == OS.XmDIALOG_OK_BUTTON) ? SWT.RETRY : SWT.CANCEL;\n  }\n  if ((style & (SWT.ABORT | SWT.RETRY | SWT.IGNORE)) == (SWT.ABORT | SWT.RETRY | SWT.IGNORE)) {\n    if (button == OS.XmDIALOG_OK_BUTTON) {\n      return SWT.ABORT;\n    }\n    if (button == OS.XmDIALOG_CANCEL_BUTTON) {\n      return SWT.RETRY;\n    }\n    return SWT.IGNORE;\n  }\n  return SWT.CANCEL;\n}\n",
        "accuracyTokens" : 0.75,
        "accuracyCharacters" : 0.5895006402048656
      } ],
      "memberId" : "24bbecc32da18833e1217645b45f1485"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.7949189449962661,
    "accuracyCharactersMin" : 0.5811092749060013,
    "accuracyTokensMax" : 0.7949189449962661,
    "accuracyCharactersMax" : 0.5811092749060013,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 1948491045,
    "patternUseTimeInNanoSec" : 1425556765
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "86079_1",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\n/**\n * Pastes text from clipboard.\n * <p>\n * The selected text is deleted from the widget\n * and new text inserted from the clipboard.\n * </p>\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void paste ()",
      "diff" : "-\t\tint value = Integer.parseInt (string);+\t\tint value;+\t\tif (digits > 0) {+\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\tif (index != -1)  {+\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t} else {+\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t}+\t\t\t\t}+\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}+\t\t} else {+\t\t\tvalue = Integer.parseInt (string);+\t\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "787a0317e1a4a252a839c28889a05ec8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 25
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "treeSize" : 16
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\nvoid hookEvents ()",
      "diff" : "-\t\t\tint value = Integer.parseInt (string);+\t\t\tint value;+\t\t\tif (digits > 0) {+\t\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\t\tif (index != -1)  {+\t\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t\t} else {+\t\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t\t} else {+\t\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t\t}+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}-\t}\t+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f191d30bdf175ec5a28508c6cbd91d9b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 23
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid updateText ()",
      "methodModified" : "\nint XmNmodifyVerifyCallback (int w, int client_data, int call_data)",
      "diff" : "-\t\t\tOS.XmNposition, 0};\t\t/* 7 */+\t\t\tOS.XmNposition, 0,\t\t/* 7 */+\t\t\tOS.XmNdecimalPoints, 0\t/* 9 */};+\tint digits = argList [9];-\t\t\tint value = Integer.parseInt (string);\t\t\t+\t\t\tint value;+\t\t\tif (digits > 0) {+\t\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\t\tif (index != -1)  {+\t\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t\t} else {+\t\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t\t} else {+\t\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t\t}+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}+\t\tif (digits > 0) {+\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\tint index = string.length () - digits;+\t\t\tStringBuffer buffer = new StringBuffer ();+\t\t\tif (index > 0) {+\t\t\t\tbuffer.append (string.substring (0, index));+\t\t\t\tbuffer.append (decimalSeparator);+\t\t\t\tbuffer.append (string.substring (index));+\t\t\t} else {+\t\t\t\tbuffer.append (\"0\");+\t\t\t\tbuffer.append (decimalSeparator);+\t\t\t\twhile (index++ < 0) buffer.append (\"0\");+\t\t\t\tbuffer.append (string);+\t\t\t}+\t\t\tstring = buffer.toString ();+\t\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "15e6a2a6f4f260586eba8ec0ff1d0ab3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2f7b25b56baa5857ac82297b9b5ab474f4612d5a",
          "commitId2" : "b39744881f45488dd8a2f2962c5fac3d5881b16d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 32,
          "methodNumber2" : 35
        },
        "pattern" : [ 1003, 4087, 2000, 2006, 1003, 4087, 2000, 1998, 1003, 4087, 2000, 1994, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -20324, -21274, 4067, 1000, 4076, 4087, 1000, 4070, -11372, -31724, 4076, 1000, 4029, 4076, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, -2464, -13221, 4063, 1000, 4029, 4087, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4137, 4087, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4137, 1007, 4071, 4061, 1000, 4828, 979, -20136, -3677, 9169, 4068, 1000, 4070, -21029, -27584, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -3677, 9169, 4112, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4023, 4023, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4023, 4023, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4070, 1531, 10450, 4023, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4054, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4109, 4061, 1000, 4017, 4109, 1000, 4090, 4017, 1000, 4070, 1531, 10450, 4090, 1000, 4029, 4017, 1007, 4023, 4109, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4054, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -27114, 21100, 4063 ],
        "treeSize" : 18
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\n/**\n * Pastes text from clipboard.\n * <p>\n * The selected text is deleted from the widget\n * and new text inserted from the clipboard.\n * </p>\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void paste ()",
      "diff" : "-\t\tint value = Integer.parseInt (string);+\t\tint value;+\t\tif (digits > 0) {+\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\tif (index != -1)  {+\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t} else {+\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t}+\t\t\t\t}+\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}+\t\t} else {+\t\t\tvalue = Integer.parseInt (string);+\t\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "787a0317e1a4a252a839c28889a05ec8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 25
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "treeSize" : 16
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\nvoid hookEvents ()",
      "diff" : "-\t\t\tint value = Integer.parseInt (string);+\t\t\tint value;+\t\t\tif (digits > 0) {+\t\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\t\tif (index != -1)  {+\t\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t\t} else {+\t\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t\t} else {+\t\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t\t}+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}-\t}\t+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f191d30bdf175ec5a28508c6cbd91d9b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 23
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "treeSize" : 18
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
      "fileName" : "/src/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "int getSelectionText(){\n  int[] actualSize=new int[1];\n  int[] ptr=new int[1];\n  if (OS.GetControlData(textHandle,(short)OS.kControlEntireControl,OS.kControlEditTextCFStringTag,4,ptr,actualSize) == OS.noErr) {\n    CFRange range=new CFRange();\n    range.location=0;\n    range.length=OS.CFStringGetLength(ptr[0]);\n    char[] buffer=new char[range.length];\n    OS.CFStringGetCharacters(ptr[0],range,buffer);\n    OS.CFRelease(ptr[0]);\n    String string=new String(buffer);\n    try {\n      int value;\n      if (digits > 0) {\n        String decimalSeparator=getDecimalSeparator();\n        int index=string.indexOf(decimalSeparator);\n        if (index != -1) {\n          String wholePart=string.substring(0,index);\n          String decimalPart=string.substring(index + 1);\n          if (decimalPart.length() > digits) {\n            decimalPart=decimalPart.substring(0,digits);\n          }\n else {\n            int i=digits - decimalPart.length();\n            for (int j=0; j < i; j++) {\n              decimalPart=decimalPart + \"0\";\n            }\n          }\n          int wholeValue=Integer.parseInt(wholePart);\n          int decimalValue=Integer.parseInt(decimalPart);\n          for (int i=0; i < digits; i++) {\n            wholeValue*=10;\n          }\n          value=wholeValue + decimalValue;\n        }\n else {\n          value=Integer.parseInt(string);\n        }\n      }\n else {\n        value=Integer.parseInt(string);\n      }\n      int max=OS.GetControl32BitMaximum(buttonHandle);\n      int min=OS.GetControl32BitMinimum(buttonHandle);\n      if (min <= value && value <= max) {\n        return value;\n      }\n    }\n catch (    NumberFormatException e) {\n    }\n  }\n  return OS.GetControl32BitValue(buttonHandle);\n}\n",
        "accuracyTokens" : 0.993993993993994,
        "accuracyCharacters" : 0.7384341637010676
      } ],
      "memberId" : "f191d30bdf175ec5a28508c6cbd91d9b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2f7b25b56baa5857ac82297b9b5ab474f4612d5a",
      "fileName" : "/src/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void updateText(){\n  int[] argList={OS.XmNtextField,0,OS.XmNminimumValue,0,OS.XmNmaximumValue,0,OS.XmNposition,0};\n  OS.XtGetValues(handle,argList,argList.length / 2);\n  int ptr=OS.XmTextGetString(argList[1]);\n  int position=argList[7];\n  if (ptr != 0) {\n    int length=OS.strlen(ptr);\n    byte[] buffer=new byte[length];\n    OS.memmove(buffer,ptr,length);\n    OS.XtFree(ptr);\n    String string=new String(Converter.mbcsToWcs(getCodePage(),buffer));\n    try {\n      int value;\n      if (digits > 0) {\n        String decimalSeparator=getDecimalSeparator();\n        int index=string.indexOf(decimalSeparator);\n        if (index != -1) {\n          String wholePart=string.substring(0,index);\n          String decimalPart=string.substring(index + 1);\n          if (decimalPart.length() > digits) {\n            decimalPart=decimalPart.substring(0,digits);\n          }\n else {\n            int i=digits - decimalPart.length();\n            for (int j=0; j < i; j++) {\n              decimalPart=decimalPart + \"0\";\n            }\n          }\n          int wholeValue=Integer.parseInt(wholePart);\n          int decimalValue=Integer.parseInt(decimalPart);\n          for (int i=0; i < digits; i++) {\n            wholeValue*=10;\n          }\n          value=wholeValue + decimalValue;\n        }\n else {\n          value=Integer.parseInt(string);\n        }\n      }\n else {\n        value=Integer.parseInt(string);\n      }\n      if (argList[3] <= value && value <= argList[5]) {\n        position=value;\n      }\n    }\n catch (    NumberFormatException e) {\n    }\n  }\n  if (position == argList[7]) {\n    String string=String.valueOf(position);\n    byte[] buffer=Converter.wcsToMbcs(getCodePage(),string,true);\n    boolean warnings=display.getWarnings();\n    display.setWarnings(false);\n    OS.XmTextSetString(argList[1],buffer);\n    display.setWarnings(warnings);\n  }\n else {\n    int[] argList2={OS.XmNposition,position};\n    OS.XtSetValues(handle,argList2,argList2.length / 2);\n  }\n}\n",
        "accuracyTokens" : 0.7818532818532818,
        "accuracyCharacters" : 0.5605999189298744
      } ],
      "memberId" : "15e6a2a6f4f260586eba8ec0ff1d0ab3"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "/src/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "int getSelectionText(){\n  int length=OS.GetWindowTextLength(hwndText);\n  TCHAR buffer=new TCHAR(getCodePage(),length + 1);\n  OS.GetWindowText(hwndText,buffer,length + 1);\n  String string=buffer.toString(0,length);\n  try {\n    int value;\n    if (digits > 0) {\n      String decimalSeparator=getDecimalSeparator();\n      int index=string.indexOf(decimalSeparator);\n      if (index != -1) {\n        String wholePart=string.substring(0,index);\n        String decimalPart=string.substring(index + 1);\n        if (decimalPart.length() > digits) {\n          decimalPart=decimalPart.substring(0,digits);\n        }\n else {\n          int i=digits - decimalPart.length();\n          for (int j=0; j < i; j++) {\n            decimalPart=decimalPart + \"0\";\n          }\n        }\n        int wholeValue=Integer.parseInt(wholePart);\n        int decimalValue=Integer.parseInt(decimalPart);\n        for (int i=0; i < digits; i++) {\n          wholeValue*=10;\n        }\n        value=wholeValue + decimalValue;\n      }\n else {\n        value=Integer.parseInt(string);\n      }\n    }\n else {\n      value=Integer.parseInt(string);\n    }\n    int[] max=new int[1], min=new int[1];\n    OS.SendMessage(hwndUpDown,OS.UDM_GETRANGE32,min,max);\n    if (min[0] <= value && value <= max[0]) {\n      return value;\n    }\n  }\n catch (  NumberFormatException e) {\n  }\n  if (OS.IsWinCE) {\n    return OS.SendMessage(hwndUpDown,OS.UDM_GETPOS,0,0) & 0xFFFF;\n  }\n else {\n    return OS.SendMessage(hwndUpDown,OS.UDM_GETPOS32,0,0);\n  }\n}\n",
        "accuracyTokens" : 0.9934426229508196,
        "accuracyCharacters" : 0.7622615803814714
      } ],
      "memberId" : "787a0317e1a4a252a839c28889a05ec8"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9230966329326985,
    "accuracyCharactersMin" : 0.6870985543374711,
    "accuracyTokensMax" : 0.9230966329326985,
    "accuracyCharactersMax" : 0.6870985543374711,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 2279530149,
    "patternUseTimeInNanoSec" : 4665882241
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "95409",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "methodModified" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\tif (pattern != null) {+\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\t} else {+\t\tdata.gdipBrush = 0;+\t}",
      "commitMsg" : "fix transparency",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f615434e60b7154ca3cf599ef2a4b0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
          "commitId2" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 81,
          "methodNumber2" : 81
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 14990, 16478, -20254, -5418, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4063, 2539, 2000, 2999, 1000, 4029, 4077, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7fa1ca3ea81f107ce6c80d94370a2a18",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 75,
          "methodNumber2" : 75
        },
        "pattern" : [ 1004, 4017, 1000, 4018, 4027, 1002, 4017, 1910, 2000, 2999, 1002, 4023, 1911, 2000, 2999, 1008, 4027, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 14990, 16478 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tCairo.cairo_set_pattern(cairo, pattern.handle);+\tif (pattern != null) {+\t\tCairo.cairo_set_pattern(cairo, pattern.handle);+\t} else {+\t\tGdkGCValues values = new GdkGCValues();+\t\tOS.gdk_gc_get_values(handle, values);+\t\tGdkColor color = new GdkColor();+\t\tcolor.pixel = values.foreground_pixel;+\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();+\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);+\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4429110aa31b41bb735aff6df96a6f19",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 88,
          "methodNumber2" : 88
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 1, 17008, 0, 2532, 1004, 4070, 14990, 16478, -21059, -11891, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 1476, -11768, 46, 12378, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -3913, -22996, 4068, 1000, 4070, -12571, -25310, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -3913, -22996, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 28041, 24093, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, -12571, -25310, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, 13277, 24821, 4068, 1000, 4070, 1447, 12131, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, 13277, 24821, 4112, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4063, 4077, 1000, 4070, -12571, -25310, 4063, 1000, 4070, -28849, 24714, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -9595, 5913, 4067, 1002, 4023, 2599, 2000, 2996, 1002, 4063, 1999, 2000, 2996, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 13658, 375, 4063, 1000, 4070, -9595, 5913, 4023, 1000, 4063, 4023, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4070, 1447, 12131, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 989, -10456, 4063, 1000, 4070, 23305, 7453, 4063, 1000, 4070, 1440, -14520, 4023, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1, -18287, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1504, -12541, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1850, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0011a80c539260a5b97625d60fa91fb0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 80,
          "methodNumber2" : 80
        },
        "pattern" : [ 1004, 4017, 1000, 4018, 4027, 1002, 4017, 1910, 2000, 2999, 1002, 4023, 1911, 2000, 2999, 1008, 4027, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 14990, 16478 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tCairo.cairo_set_pattern(cairo, pattern.handle);+\tif (pattern != null) {+\t\tCairo.cairo_set_pattern(cairo, pattern.handle);+\t} else {+\t\tint display = data.display;+\t\tXGCValues values = new XGCValues ();+\t\tOS.XGetGCValues (display, handle, OS.GCForeground, values);+\t\tXColor color = new XColor();+\t\tcolor.pixel = values.foreground;+\t\tOS.XQueryColor(display, data.colormap, color);+\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2f9e56a101373119e392439f50b0abc3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 92,
          "methodNumber2" : 92
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 1476, -11768, 1504, -12541, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 14990, 16478, 46, 12378, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 25509, 6338, 4067, 1000, 4063, 4087, 1000, 4070, 46, -4182, 4063, 1000, 4070, 25509, 6338, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, 14213, -23178, 4068, 1000, 4070, -12571, -25310, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, 14213, -23178, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -16263, -10500, 4063, 1000, 4070, 25509, 6338, 4023, 1000, 4070, -18686, 28200, 4023, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 1849, -5313, 4063, 1000, 4070, -12571, -25310, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -26098, -18965, 4068, 1000, 4070, 1447, 12131, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -26098, -18965, 4112, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4063, 4077, 1000, 4070, -12571, -25310, 4063, 1000, 4070, 30280, 26947, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -26148, -19981, 4063, 1000, 4070, 25509, 6338, 4023, 1000, 4063, 4023, 1000, 4070, 46, -4182, 4063, 1000, 4070, -9595, 5913, 4063, 1000, 4070, 1447, 12131, 4023, 1000, 4063, 4023, 1000, 4070, 989, -10456, 4063, 1000, 4070, 23305, 7453, 4063, 1000, 4070, 1440, -14520, 4023, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1, -18287, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1850, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1849, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the foreground pattern.\n *\n * @param pattern the new foreground pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setForegroundPattern (Pattern pattern)",
      "methodModified" : "\n\n/** \n * Sets the foreground pattern.\n *\n * @param pattern the new foreground pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setForegroundPattern (Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tinitGdip(true, false);-\tGdip.Pen_SetBrush(data.gdipPen, pattern.handle);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tinitGdip(false, false);+\tif (pattern != null) {+\t\tif (data.gdipPen != 0) Gdip.Pen_SetBrush(data.gdipPen, pattern.handle);+\t} else {+\t\tif (data.gdipPen != 0) {+\t\t\tGdip.Pen_delete(data.gdipPen);+\t\t\tdata.gdipPen = 0;+\t\t}+\t}",
      "commitMsg" : "fix transparency",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4b482f645115394548384c9c3d51dfa8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
          "commitId2" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 90,
          "methodNumber2" : 90
        },
        "pattern" : [ 1005, 1003, 4119, 2000, 1999, 1004, 4119, 1004, 4017, 1006, 1006, 1002, 4063, 2001, 2000, 2997, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 1476, -11768, -1726, 15285, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 14990, 16478, -1726, 15285, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1726, 15285, 4063, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1726, 15285, 4063, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4063, 2539, 2000, 2997, 1000, 4029, 4077, 1000, 4063, 4023, 1000, 4070, 33, -13596, 4063, 1000, 4070, -13686, -4175, 4063 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);-\tOS.CGContextSetStrokeColorSpace(handle, colorspace);-\tOS.CGColorSpaceRelease(colorspace);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.forePattern = pattern.createPattern(handle);-\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);+\tif (pattern != null) {+\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);+\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);+\t\tOS.CGColorSpaceRelease(colorspace);+\t\tdata.forePattern = pattern.createPattern(handle);+\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);+\t} else {+\t\tint colorspace = data.device.colorspace;+\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);+\t\tfloat[] color = data.foreground;+\t\tOS.CGContextSetStrokeColor(handle, color);+\t\tdata.forePattern = 0;\t+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6f0d0889d12f51d57bf7c2e99ada68df",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 84,
          "methodNumber2" : 84
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1006, 1006, 1006, 1006, 1004, 4070, 1476, -11768, 30280, 26947, 1002, 4070, 1600, 2001, 3000, 1004, 4070, 1, 17008, -11391, -18476, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1002, 4063, 2399, 2000, 2996, 1002, 4070, 2000, 2000, 2996, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5502, 3474, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 979, -20136, 1488, 8796, 4068, 1000, 4070, 1447, 12131, 4067, 1002, 4063, 2640, 2000, 2997, 1000, 4070, 46, -4182, 4063, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 46, -4182, 4063, 1000, 4070, 30040, -5324, 4063, 1000, 4029, 4077, 1000, 4063, 4023, 1002, 4070, 2001, 2000, 2999, 1000, 4070, 0, 2532, 4063, 1000, 4070, -18686, 28200, 4023 ],
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n *\n * @param color the new foreground color for the receiver\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color)",
      "methodModified" : "\n\n/**\n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n *\n * @param color the new foreground color for the receiver\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color)",
      "diff" : "+\tint colorspace = data.device.colorspace;+\tOS.CGContextSetStrokeColorSpace(handle, colorspace);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cfc9dce99786b92b66a574148342f22a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 83,
          "methodNumber2" : 83
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1000, 4063, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5502, 3474, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);-\tOS.CGContextSetFillColorSpace(handle, colorspace);-\tOS.CGColorSpaceRelease(colorspace);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.backPattern = pattern.createPattern(handle);-\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);+\tif (pattern != null) {+\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);+\t\tOS.CGContextSetFillColorSpace(handle, colorspace);+\t\tOS.CGColorSpaceRelease(colorspace);+\t\tdata.backPattern = pattern.createPattern(handle);+\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);+\t} else {+\t\tint colorspace = data.device.colorspace;+\t\tOS.CGContextSetFillColorSpace(handle, colorspace);+\t\tfloat[] color = data.background;+\t\tOS.CGContextSetFillColor(handle, color);+\t\tdata.backPattern = 0;\t+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9af007235d3489db0fa26edcd81515eb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 73,
          "methodNumber2" : 73
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1006, 1006, 1006, 1006, 1004, 4070, 1476, -11768, -20328, 21806, 1002, 4070, 1600, 2001, 3000, 1004, 4070, 1, 17008, 60, 28073, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1002, 4063, 2399, 2000, 2996, 1002, 4070, 2000, 2000, 2996, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5464, -19235, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 979, -20136, 1488, 8796, 4068, 1000, 4070, 1447, 12131, 4067, 1002, 4063, 2640, 2000, 2997, 1000, 4070, 46, -4182, 4063, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 46, -4182, 4063, 1000, 4070, -31482, 31913, 4063, 1000, 4029, 4077, 1000, 4063, 4023, 1002, 4070, 2001, 2000, 2999, 1000, 4070, 0, 2532, 4063, 1000, 4070, -18686, 28200, 4023 ],
        "treeSize" : 10
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "methodModified" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\tif (pattern != null) {+\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\t} else {+\t\tdata.gdipBrush = 0;+\t}",
      "commitMsg" : "fix transparency",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f615434e60b7154ca3cf599ef2a4b0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
          "commitId2" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 81,
          "methodNumber2" : 81
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 14990, 16478, -20254, -5418, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4063, 2539, 2000, 2999, 1000, 4029, 4077, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0011a80c539260a5b97625d60fa91fb0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 80,
          "methodNumber2" : 80
        },
        "pattern" : [ 1004, 4017, 1000, 4018, 4027, 1002, 4017, 1910, 2000, 2999, 1002, 4023, 1911, 2000, 2999, 1008, 4027, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 14990, 16478 ],
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 81,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the background pattern.\n * @param pattern the new background pattern\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Pattern\n * @since 3.1\n */\npublic void setBackgroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(false,false);\n  if (data.gdipBrush != 0) {\n    destroyGdipBrush(data.gdipBrush);\n  }\n  data.gdipBrush=Gdip.Brush_Clone(pattern.handle);\n  data.backgroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.8,
        "accuracyCharacters" : 0.746031746031746
      } ],
      "memberId" : "f3f615434e60b7154ca3cf599ef2a4b0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the foreground pattern.\n * @param pattern the new foreground pattern\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Pattern\n * @since 3.1\n */\npublic void setForegroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(true,false);\n  Gdip.Pen_SetBrush(data.gdipPen,pattern.handle);\n  data.foregroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.5641025641025641,
        "accuracyCharacters" : 0.5533498759305211
      } ],
      "memberId" : "4b482f645115394548384c9c3d51dfa8"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58f181425ac99cdd29070515e69fe5c833083a71",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 75,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  data.backgroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.9459459459459459,
        "accuracyCharacters" : 0.8564814814814815
      } ],
      "memberId" : "7fa1ca3ea81f107ce6c80d94370a2a18"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58f181425ac99cdd29070515e69fe5c833083a71",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  Cairo.cairo_set_pattern(cairo,pattern.handle);\n  data.foregroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.3448275862068966,
        "accuracyCharacters" : 0.3185483870967742
      } ],
      "memberId" : "4429110aa31b41bb735aff6df96a6f19"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58f181425ac99cdd29070515e69fe5c833083a71",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 80,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public void setBackgroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int colorspace=OS.CGColorSpaceCreatePattern(data.device.colorspace);\n  OS.CGContextSetFillColorSpace(handle,colorspace);\n  OS.CGColorSpaceRelease(colorspace);\n  if (data.backPattern != 0) {\n    OS.CGPatternRelease(data.backPattern);\n  }\n  data.backPattern=pattern.createPattern(handle);\n  OS.CGContextSetFillPattern(handle,data.backPattern,data.background);\n  data.backgroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.35789473684210527,
        "accuracyCharacters" : 0.32976827094474154
      } ],
      "memberId" : "0011a80c539260a5b97625d60fa91fb0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58f181425ac99cdd29070515e69fe5c833083a71",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 92,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int colorspace=OS.CGColorSpaceCreatePattern(data.device.colorspace);\n  OS.CGContextSetStrokeColorSpace(handle,colorspace);\n  OS.CGColorSpaceRelease(colorspace);\n  if (data.forePattern != 0) {\n    OS.CGPatternRelease(data.forePattern);\n  }\n  data.forePattern=pattern.createPattern(handle);\n  OS.CGContextSetStrokePattern(handle,data.forePattern,data.foreground);\n  data.foregroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.3716216216216216,
        "accuracyCharacters" : 0.36643356643356645
      } ],
      "memberId" : "2f9e56a101373119e392439f50b0abc3"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58f181425ac99cdd29070515e69fe5c833083a71",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  data.backgroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.23357664233576642,
        "accuracyCharacters" : 0.22897800776196636
      } ],
      "memberId" : "9af007235d3489db0fa26edcd81515eb"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58f181425ac99cdd29070515e69fe5c833083a71",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 84,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  Cairo.cairo_set_pattern(cairo,pattern.handle);\n  data.foregroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.32116788321167883,
        "accuracyCharacters" : 0.29449423815621
      } ],
      "memberId" : "6f0d0889d12f51d57bf7c2e99ada68df"
    } ],
    "foundMembers" : 8,
    "numberOfRecommendationSets" : 8,
    "precision" : 1.0,
    "recall" : 0.8888888888888888,
    "accuracyTokensMin" : 0.49239212253332243,
    "accuracyCharactersMin" : 0.4617606967296259,
    "accuracyTokensMax" : 0.49239212253332243,
    "accuracyCharactersMax" : 0.4617606967296259,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 2276316771,
    "patternUseTimeInNanoSec" : 6303812341
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "97981",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "98198",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f17871ff615dfb52a62f74dc95989707",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "commitId2" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 31,
          "methodNumber2" : 31
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "61cbbbfd8ff41e0faf0cf9e6df87e37f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "61213e1d33be6df09651589941b1e8eb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 25,
          "methodNumber2" : 25
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "89c72f5250d7bf261892d4e14a35badc",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 39,
          "methodNumber2" : 39
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "98198",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f17871ff615dfb52a62f74dc95989707",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "commitId2" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 31,
          "methodNumber2" : 31
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "61213e1d33be6df09651589941b1e8eb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 25,
          "methodNumber2" : 25
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
      "fileName" : "/src/org/eclipse/swt/widgets/Control.java",
      "methodNumber" : 31,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void fixFocus(Control focusControl){\n  Shell shell=getShell();\n  Control control=this;\n  while (control != shell && (control=control.parent) != null) {\n    if (control.setFocus()) {\n      return;\n    }\n  }\n  shell.setSavedFocus(focusControl);\n  int window=OS.GetControlOwner(handle);\n  OS.ClearKeyboardFocus(window);\n}\n",
        "accuracyTokens" : 0.9830508474576272,
        "accuracyCharacters" : 0.8374558303886925
      } ],
      "memberId" : "f17871ff615dfb52a62f74dc95989707"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
      "fileName" : "/src/org/eclipse/swt/widgets/Control.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void fixFocus(Control focusControl){\n  Shell shell=getShell();\n  Control control=this;\n  while (control != shell && (control=control.parent) != null) {\n    if (control.setFocus()) {\n      return;\n    }\n  }\n  shell.setSavedFocus(focusControl);\n}\n",
        "accuracyTokens" : 0.5694444444444444,
        "accuracyCharacters" : 0.4183168316831683
      } ],
      "memberId" : "61cbbbfd8ff41e0faf0cf9e6df87e37f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
      "fileName" : "/src/org/eclipse/swt/widgets/Control.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void fixFocus(Control focusControl){\n  Shell shell=getShell();\n  Control control=this;\n  while (control != shell && (control=control.parent) != null) {\n    if (control.setFocus()) {\n      return;\n    }\n  }\n  shell.setSavedFocus(focusControl);\n  int focusHandle=shell.fixedHandle;\n  OS.GTK_WIDGET_SET_FLAGS(focusHandle,OS.GTK_CAN_FOCUS);\n  OS.gtk_widget_grab_focus(focusHandle);\n  OS.GTK_WIDGET_UNSET_FLAGS(focusHandle,OS.GTK_CAN_FOCUS);\n}\n",
        "accuracyTokens" : 0.5753424657534246,
        "accuracyCharacters" : 0.42431761786600497
      } ],
      "memberId" : "61213e1d33be6df09651589941b1e8eb"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 0.75,
    "accuracyTokensMin" : 0.709279252551832,
    "accuracyCharactersMin" : 0.5600300933126219,
    "accuracyTokensMax" : 0.709279252551832,
    "accuracyCharactersMax" : 0.5600300933126219,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 2057761768,
    "patternUseTimeInNanoSec" : 6268183272
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "76391",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "methodModified" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "91ba23341e2b8170b088d3c495ae209a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "methodModified" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d633a5811af620ef9eb35aa8dceaeb1c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 11,
          "methodNumber2" : 11
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "methodModified" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "113c78ecbf4f7de1e9be9cb14918575a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 13,
          "methodNumber2" : 13
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "methodModified" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "64b684aac3fadcdac6f7988443e47f63",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "methodModified" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "97359d1f70cf99912f8b8f5bf83a51e6",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 12,
          "methodNumber2" : 12
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "methodModified" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5c5f1975e599ef503eb3eca53077499",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 14,
          "methodNumber2" : 14
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "methodModified" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d633a5811af620ef9eb35aa8dceaeb1c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 11,
          "methodNumber2" : 11
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "methodModified" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "113c78ecbf4f7de1e9be9cb14918575a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 13,
          "methodNumber2" : 13
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "treeSize" : 8
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "/src/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Returns the background color at the given column index in the receiver.\n * @param index the column index\n * @return the background color\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.0\n */\npublic Color getBackground(int index){\n  checkWidget();\n  if (!parent.checkData(this,true)) {\n    error(SWT.ERROR_WIDGET_DISPOSED);\n  }\n  int count=Math.max(1,parent.getColumnCount());\n  if (0 > index || index > count - 1) {\n    return getBackground();\n  }\n  int pixel=cellBackground != null ? cellBackground[index] : -1;\n  return pixel == -1 ? getBackground() : Color.win32_new(display,pixel);\n}\n",
        "accuracyTokens" : 0.9733333333333334,
        "accuracyCharacters" : 0.8635097493036211
      } ],
      "memberId" : "91ba23341e2b8170b088d3c495ae209a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "/src/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 11,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n * @param index the column index\n * @return the receiver's font\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.0\n */\npublic Font getFont(int index){\n  checkWidget();\n  if (!parent.checkData(this,true)) {\n    error(SWT.ERROR_WIDGET_DISPOSED);\n  }\n  int count=Math.max(1,parent.getColumnCount());\n  if (0 > index || index > count - 1) {\n    return getFont();\n  }\n  int hFont=(cellFont != null) ? cellFont[index] : font;\n  return hFont == -1 ? getFont() : Font.win32_new(display,hFont);\n}\n",
        "accuracyTokens" : 0.972972972972973,
        "accuracyCharacters" : 0.8520710059171598
      } ],
      "memberId" : "d633a5811af620ef9eb35aa8dceaeb1c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "/src/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 13,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Returns the foreground color at the given column index in the receiver.\n * @param index the column index\n * @return the foreground color\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @since 3.0\n */\npublic Color getForeground(int index){\n  checkWidget();\n  if (!parent.checkData(this,true)) {\n    error(SWT.ERROR_WIDGET_DISPOSED);\n  }\n  int count=Math.max(1,parent.getColumnCount());\n  if (0 > index || index > count - 1) {\n    return getForeground();\n  }\n  int pixel=cellForeground != null ? cellForeground[index] : -1;\n  return pixel == -1 ? getForeground() : Color.win32_new(display,pixel);\n}\n",
        "accuracyTokens" : 0.9733333333333334,
        "accuracyCharacters" : 0.8607242339832869
      } ],
      "memberId" : "113c78ecbf4f7de1e9be9cb14918575a"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 0.5,
    "accuracyTokensMin" : 0.9732132132132133,
    "accuracyCharactersMin" : 0.8587683297346893,
    "accuracyTokensMax" : 0.9732132132132133,
    "accuracyCharactersMax" : 0.8587683297346893,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 1099045347,
    "patternUseTimeInNanoSec" : 2895130056
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "89785",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0c1167592a08867eebb1243936ed7056",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 14,
          "methodNumber2" : 15
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid releaseWidget ()",
      "methodModified" : "\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "abd11a5e3885523702b6c6e494f5e58b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 8,
          "methodNumber2" : 9
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\nvoid releaseWidget ()",
      "diff" : "+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d2856e652d7a3f40203630053aa00678",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 13,
          "methodNumber2" : 13
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;\t",
      "commitMsg" : "89785",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "519c31b9348e6f4e90c278b665c38a55",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "commitId2" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+    if (linkDisabledColor != null) linkDisabledColor.dispose ();+    linkDisabledColor = null;",
      "commitMsg" : "89785",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "dc726bdd228b406be08aea3385b4d297",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
          "commitId2" : "99ebdda9366dd7a5b6b26ca3eb47fbdcbb78a927",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 15,
          "methodNumber2" : 16
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "treeSize" : 5
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid releaseWidget ()",
      "methodModified" : "\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "abd11a5e3885523702b6c6e494f5e58b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 8,
          "methodNumber2" : 9
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+    if (linkDisabledColor != null) linkDisabledColor.dispose ();+    linkDisabledColor = null;",
      "commitMsg" : "89785",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "dc726bdd228b406be08aea3385b4d297",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
          "commitId2" : "99ebdda9366dd7a5b6b26ca3eb47fbdcbb78a927",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 15,
          "methodNumber2" : 16
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "treeSize" : 5
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "/src/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 14,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void releaseWidget(){\n  super.releaseWidget();\n  if (layout != null) {\n    layout.dispose();\n  }\n  layout=null;\n  if (linkColor != null) {\n    linkColor.dispose();\n  }\n  linkColor=null;\n  if (linkDisabledColor != null) {\n    linkDisabledColor.dispose();\n  }\n  linkDisabledColor=null;\n  offsets=null;\n  ids=null;\n  mnemonics=null;\n  text=null;\n}\n",
        "accuracyTokens" : 0.9433962264150944,
        "accuracyCharacters" : 0.7746913580246914
      } ],
      "memberId" : "0c1167592a08867eebb1243936ed7056"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
      "fileName" : "/src/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 15,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void releaseWidget(){\n  super.releaseWidget();\n  if (layout != null) {\n    layout.dispose();\n  }\n  layout=null;\n  if (linkColor != null) {\n    linkColor.dispose();\n  }\n  linkColor=null;\n  if (linkDisabledColor != null) {\n    linkDisabledColor.dispose();\n  }\n  linkDisabledColor=null;\n  offsets=null;\n  ids=null;\n  mnemonics=null;\n  text=null;\n}\n",
        "accuracyTokens" : 0.9433962264150944,
        "accuracyCharacters" : 0.7932098765432098
      } ],
      "memberId" : "dc726bdd228b406be08aea3385b4d297"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
      "fileName" : "/src/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void releaseWidget(){\n  super.releaseWidget();\n  if (layout != null) {\n    layout.dispose();\n  }\n  layout=null;\n  if (linkColor != null) {\n    linkColor.dispose();\n  }\n  linkColor=null;\n  if (linkDisabledColor != null) {\n    linkDisabledColor.dispose();\n  }\n  linkDisabledColor=null;\n  offsets=null;\n  ids=null;\n  mnemonics=null;\n  text=null;\n}\n",
        "accuracyTokens" : 0.9433962264150944,
        "accuracyCharacters" : 0.7777777777777778
      } ],
      "memberId" : "519c31b9348e6f4e90c278b665c38a55"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "/src/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void releaseWidget(){\n  super.releaseWidget();\n  if (layout != null) {\n    layout.dispose();\n  }\n  layout=null;\n  if (linkColor != null) {\n    linkColor.dispose();\n  }\n  linkColor=null;\n  if (linkDisabledColor != null) {\n    linkDisabledColor.dispose();\n  }\n  linkDisabledColor=null;\n  offsets=null;\n  ids=null;\n  mnemonics=null;\n  text=null;\n}\n",
        "accuracyTokens" : 0.9433962264150944,
        "accuracyCharacters" : 0.7777777777777778
      } ],
      "memberId" : "abd11a5e3885523702b6c6e494f5e58b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "/src/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 13,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void releaseWidget(){\n  super.releaseWidget();\n  if (layout != null) {\n    layout.dispose();\n  }\n  layout=null;\n  if (linkColor != null) {\n    linkColor.dispose();\n  }\n  linkColor=null;\n  if (linkDisabledColor != null) {\n    linkDisabledColor.dispose();\n  }\n  linkDisabledColor=null;\n  offsets=null;\n  ids=null;\n  mnemonics=null;\n  text=null;\n}\n",
        "accuracyTokens" : 0.7924528301886793,
        "accuracyCharacters" : 0.6172839506172839
      } ],
      "memberId" : "d2856e652d7a3f40203630053aa00678"
    } ],
    "foundMembers" : 5,
    "numberOfRecommendationSets" : 5,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9132075471698113,
    "accuracyCharactersMin" : 0.7481481481481481,
    "accuracyTokensMax" : 0.9132075471698113,
    "accuracyCharactersMax" : 0.7481481481481481,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 1835321926,
    "patternUseTimeInNanoSec" : 6987496453
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "79107",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_NULL_ARGUMENT);+\t}-\t\tif (string == null) break;",
      "commitMsg" : "Produces java objects mapping to XPCOM header files",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6163731106df272c8694c28edfa21751",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
          "commitId2" : "7460f398f4aff7bc31e8034651e2181376b83e54",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 51,
          "methodNumber2" : 51
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 14990, 16478, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_NULL_ARGUMENT);+\t}",
      "commitMsg" : "Produces java objects mapping to XPCOM header files",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "42a0282a3d4875ce3a2d0c455507943c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
          "commitId2" : "7460f398f4aff7bc31e8034651e2181376b83e54",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 42,
          "methodNumber2" : 42
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 14990, 16478, 4063 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break; ",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c477c8769f1bc45dacb08ac61745a889",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
          "commitId2" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 46,
          "methodNumber2" : 46
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break; ",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "88334e1d359304d3db98e229db6a6da7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
          "commitId2" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 46,
          "methodNumber2" : 46
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break;",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e3ccf759fa2bbef053b6a20adca3083a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "commitId2" : "5aa729a4435cbc3bc39b7010a99ea938c612d744",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 61,
          "methodNumber2" : 61
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) {-\t\t\tOS.g_free (iter);-\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);-\t\t}",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a46ec5596b8618a6f9138da080feab71",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "commitId2" : "5aa729a4435cbc3bc39b7010a99ea938c612d744",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 50,
          "methodNumber2" : 50
        },
        "pattern" : [ 1006, 1004, 4070, 0, 2532, 1533, -6208, 1004, 4070, -19155, -2236, -16882, 15078, 1006, 1006, 1004, 4070, 49, 31512, 1533, -6208, 1004, 4070, -13611, 24593, 0, 105, 1004, 4070, 11864, -7841, 29746, 14748, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1002, 4063, 1941, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1000, 4076, 4017, 1002, 4070, 2529, 2000, 3000, 1002, 4070, 2591, 2000, 2999, 1008, 4023 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) continue;",
      "commitMsg" : "79191",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "b789e73145cde035a1547f804b4c440b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
          "commitId2" : "f302f87369c16404fa6c4d15137c2070c9b0c600",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4083 ],
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "79191",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7bd8ddb4d7290d6640b7e213591eef0d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
          "commitId2" : "f302f87369c16404fa6c4d15137c2070c9b0c600",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2f8ef6d6d1405000acb93fcb3ea4fe43",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f9bded957dc1b6446661cc9d0425e4171068b116",
          "commitId2" : "3e1412832c437c4b4192bd508a7ca98ba639ef47",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 41,
          "methodNumber2" : 41
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "60cd2c2d473c4149b06a0c920ca9e1a6",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f9bded957dc1b6446661cc9d0425e4171068b116",
          "commitId2" : "3e1412832c437c4b4192bd508a7ca98ba639ef47",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 48,
          "methodNumber2" : 48
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 9
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break; ",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c477c8769f1bc45dacb08ac61745a889",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
          "commitId2" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 46,
          "methodNumber2" : 46
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "60cd2c2d473c4149b06a0c920ca9e1a6",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f9bded957dc1b6446661cc9d0425e4171068b116",
          "commitId2" : "3e1412832c437c4b4192bd508a7ca98ba639ef47",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 48,
          "methodNumber2" : 48
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 9
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
      "fileName" : "/src/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's list to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  if (items.length == 0) {\n    removeAll();\n    return;\n  }\n  int index=0;\n  int[] table=new int[items.length];\n  String codePage=getCodePage();\n  while (index < items.length) {\n    String string=items[index];\n    if (string == null) {\n      break;\n    }\n    byte[] buffer=Converter.wcsToMbcs(codePage,encodeString(string),true);\n    int xmString=OS.XmStringCreateLocalized(buffer);\n    if (xmString == 0) {\n      break;\n    }\n    table[index++]=xmString;\n  }\n  int ptr=OS.XtMalloc(index * 4);\n  OS.memmove(ptr,table,index * 4);\n  int[] argList1={OS.XmNitems,ptr,OS.XmNitemCount,index};\n  OS.XtSetValues(handle,argList1,argList1.length / 2);\n  for (int i=0; i < index; i++) {\n    OS.XmStringFree(table[i]);\n  }\n  OS.XtFree(ptr);\n  if (index < items.length) {\n    error(SWT.ERROR_ITEM_NOT_ADDED);\n  }\n  int[] argList2={OS.XmNtextField,0};\n  OS.XtGetValues(handle,argList2,argList2.length / 2);\n  boolean warnings=display.getWarnings();\n  display.setWarnings(false);\n  OS.XmTextSetString(argList2[1],new byte[1]);\n  display.setWarnings(warnings);\n  int[] argList3={OS.XmNlist,0};\n  OS.XtGetValues(handle,argList3,argList3.length / 2);\n  int[] argList4={OS.XmNselectedItemCount,0,OS.XmNselectedItems,0};\n  OS.XtSetValues(argList3[1],argList4,argList4.length / 2);\n}\n",
        "accuracyTokens" : 0.9681159420289855,
        "accuracyCharacters" : 0.8148907103825137
      } ],
      "memberId" : "c477c8769f1bc45dacb08ac61745a889"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see List#deselectAll()\n * @see List#select(int[])\n * @see List#setSelection(int[])\n */\npublic void setSelection(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    deselectAll();\n    return;\n  }\n  String codePage=getCodePage();\n  if ((style & SWT.SINGLE) != 0) {\n    String string=items[0];\n    if (string != null) {\n      byte[] buffer=Converter.wcsToMbcs(codePage,string,true);\n      int xmString=OS.XmStringCreateLocalized(buffer);\n      if (xmString != 0) {\n        int index=OS.XmListItemPos(handle,xmString);\n        if (index != 0) {\n          OS.XmListSelectPos(handle,index,false);\n        }\n        OS.XmStringFree(xmString);\n        if (index != 0 && OS.XmListPosSelected(handle,index)) {\n          showSelection();\n          return;\n        }\n      }\n    }\n    deselectAll();\n    return;\n  }\n  deselectAll();\n  int count=0;\n  int[] table=new int[length];\n  for (int i=0; i < length; i++) {\n    String string=items[i];\n    if (string != null) {\n      byte[] buffer=Converter.wcsToMbcs(codePage,string,true);\n      int xmString=OS.XmStringCreateLocalized(buffer);\n      if (xmString != 0) {\n        table[count++]=xmString;\n      }\n    }\n  }\n  int ptr=OS.XtMalloc(count * 4);\n  OS.memmove(ptr,table,count * 4);\n  int[] argList={OS.XmNselectedItems,ptr,OS.XmNselectedItemCount,count};\n  OS.XtSetValues(handle,argList,argList.length / 2);\n  boolean focusSet=false;\n  for (int i=0; i < count; i++) {\n    if (!focusSet) {\n      int index=OS.XmListItemPos(handle,table[i]);\n      if (index > 0) {\n        focusSet=true;\n        setFocusIndex(index - 1);\n      }\n    }\n    OS.XmStringFree(table[i]);\n  }\n  OS.XtFree(ptr);\n  OS.XmListUpdateSelectedList(handle);\n  showSelection();\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's items to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  OS.XmListSetPos(handle,0);\n  OS.XmListDeselectAllItems(handle);\n  if ((style & SWT.H_SCROLL) != 0) {\n    OS.XmListDeleteAllItems(handle);\n  }\n  int index=0;\n  int[] table=new int[items.length];\n  String codePage=getCodePage();\n  while (index < items.length) {\n    String string=items[index];\n    if (string == null) {\n      break;\n    }\n    byte[] buffer=Converter.wcsToMbcs(codePage,string,true);\n    int xmString=OS.XmStringCreateLocalized(buffer);\n    if (xmString == 0) {\n      break;\n    }\n    table[index++]=xmString;\n  }\n  int ptr=OS.XtMalloc(index * 4);\n  OS.memmove(ptr,table,index * 4);\n  int[] argList={OS.XmNitems,ptr,OS.XmNitemCount,index};\n  OS.XtSetValues(handle,argList,argList.length / 2);\n  for (int i=0; i < index; i++) {\n    OS.XmStringFree(table[i]);\n  }\n  OS.XtFree(ptr);\n  if ((style & SWT.H_SCROLL) != 0) {\n    OS.XtResizeWindow(handle);\n  }\n  if (index < items.length) {\n    error(SWT.ERROR_ITEM_NOT_ADDED);\n  }\n}\n",
        "accuracyTokens" : 0.9578544061302682,
        "accuracyCharacters" : 0.5462295081967213
      } ],
      "memberId" : "88334e1d359304d3db98e229db6a6da7"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selected is first cleared, then the new items are\n * selected.\n * @param items the array of items\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setSelection(TabItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  if (items.length == 0) {\n    setSelection(-1,false);\n  }\n else {\n    for (int i=items.length - 1; i >= 0; --i) {\n      int index=indexOf(items[i]);\n      if (index != -1) {\n        setSelection(index,false);\n      }\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/Table.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if one of the items has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see Table#deselectAll()\n * @see Table#select(int[])\n * @see Table#setSelection(int[])\n */\npublic void setSelection(TableItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  int focusIndex=-1;\n  for (int i=length - 1; i >= 0; --i) {\n    int index=indexOf(items[i]);\n    if (index != -1) {\n      select(focusIndex=index);\n    }\n  }\n  if (focusIndex != -1) {\n    setFocusIndex(focusIndex);\n  }\n  showSelection();\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "/src/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 51,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's list to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  OS.SendMessage(handle,OS.CB_RESETCONTENT,0,0);\n  int codePage=getCodePage();\n  for (int i=0; i < items.length; i++) {\n    String string=items[i];\n    if (string == null) {\n      break;\n    }\n    TCHAR buffer=new TCHAR(codePage,string,true);\n    int code=OS.SendMessage(handle,OS.CB_ADDSTRING,0,buffer);\n    if (code == OS.CB_ERR) {\n      error(SWT.ERROR_ITEM_NOT_ADDED);\n    }\n    if (code == OS.CB_ERRSPACE) {\n      error(SWT.ERROR_ITEM_NOT_ADDED);\n    }\n  }\n  sendEvent(SWT.Modify);\n}\n",
        "accuracyTokens" : 0.9271523178807947,
        "accuracyCharacters" : 0.7
      } ],
      "memberId" : "6163731106df272c8694c28edfa21751"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/Tree.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if one of the items has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see Tree#deselectAll()\n */\npublic void setSelection(TreeItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    deselectAll();\n    return;\n  }\n  TreeItem item=items[0];\n  if (item != null) {\n    if (item.isDisposed()) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    int hOldItem=OS.SendMessage(handle,OS.TVM_GETNEXTITEM,OS.TVGN_CARET,0);\n    int hNewItem=hAnchor=item.handle;\n    boolean fixScroll=checkScroll(hNewItem);\n    if (fixScroll) {\n      OS.SendMessage(handle,OS.WM_SETREDRAW,1,0);\n      OS.DefWindowProc(handle,OS.WM_SETREDRAW,0,0);\n    }\n    ignoreSelect=true;\n    OS.SendMessage(handle,OS.TVM_SELECTITEM,OS.TVGN_CARET,hNewItem);\n    ignoreSelect=false;\n    if (OS.SendMessage(handle,OS.TVM_GETVISIBLECOUNT,0,0) == 0) {\n      OS.SendMessage(handle,OS.TVM_SELECTITEM,OS.TVGN_FIRSTVISIBLE,hNewItem);\n    }\n    if (fixScroll) {\n      OS.DefWindowProc(handle,OS.WM_SETREDRAW,1,0);\n      OS.SendMessage(handle,OS.WM_SETREDRAW,0,0);\n    }\n    if (hOldItem == hNewItem) {\n      TVITEM tvItem=new TVITEM();\n      tvItem.mask=OS.TVIF_STATE;\n      tvItem.state=OS.TVIS_SELECTED;\n      tvItem.stateMask=OS.TVIS_SELECTED;\n      tvItem.hItem=hNewItem;\n      OS.SendMessage(handle,OS.TVM_SETITEM,0,tvItem);\n      showItem(hNewItem);\n    }\n  }\n  if ((style & SWT.SINGLE) != 0) {\n    return;\n  }\n  TVITEM tvItem=new TVITEM();\n  tvItem.mask=OS.TVIF_STATE;\n  tvItem.stateMask=OS.TVIS_SELECTED;\n  int oldProc=OS.GetWindowLong(handle,OS.GWL_WNDPROC);\n  OS.SetWindowLong(handle,OS.GWL_WNDPROC,TreeProc);\n  for (int i=0; i < this.items.length; i++) {\n    item=this.items[i];\n    if (item != null) {\n      int index=0;\n      while (index < length) {\n        if (items[index] == item) {\n          break;\n        }\n        index++;\n      }\n      tvItem.hItem=item.handle;\n      OS.SendMessage(handle,OS.TVM_GETITEM,0,tvItem);\n      if ((tvItem.state & OS.TVIS_SELECTED) != 0) {\n        if (index == length) {\n          tvItem.state=0;\n          OS.SendMessage(handle,OS.TVM_SETITEM,0,tvItem);\n        }\n      }\n else {\n        if (index != length) {\n          tvItem.state=OS.TVIS_SELECTED;\n          OS.SendMessage(handle,OS.TVM_SETITEM,0,tvItem);\n        }\n      }\n    }\n  }\n  OS.SetWindowLong(handle,OS.GWL_WNDPROC,oldProc);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see List#deselectAll()\n * @see List#select(int[])\n * @see List#setSelection(int[])\n */\npublic void setSelection(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  int focusIndex=-1;\n  for (int i=length - 1; i >= 0; --i) {\n    String string=items[i];\n    int index=0;\n    if (string != null) {\n      int localFocus=-1;\n      while ((index=indexOf(string,index)) != -1) {\n        if (localFocus == -1) {\n          localFocus=index;\n        }\n        select(index,false);\n        if ((style & SWT.SINGLE) != 0 && isSelected(index)) {\n          showSelection();\n          return;\n        }\n        index++;\n      }\n      if (localFocus != -1) {\n        focusIndex=localFocus;\n      }\n    }\n  }\n  if ((style & SWT.MULTI) != 0) {\n    if (focusIndex >= 0) {\n      setFocusIndex(focusIndex);\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's items to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  int oldProc=OS.GetWindowLong(handle,OS.GWL_WNDPROC);\n  OS.SetWindowLong(handle,OS.GWL_WNDPROC,ListProc);\n  boolean redraw=drawCount == 0 && OS.IsWindowVisible(handle);\n  if (redraw) {\n    OS.SendMessage(handle,OS.WM_SETREDRAW,0,0);\n  }\n  RECT rect=null;\n  int hDC=0, oldFont=0, newFont=0, newWidth=0;\n  if ((style & SWT.H_SCROLL) != 0) {\n    rect=new RECT();\n    hDC=OS.GetDC(handle);\n    newFont=OS.SendMessage(handle,OS.WM_GETFONT,0,0);\n    if (newFont != 0) {\n      oldFont=OS.SelectObject(hDC,newFont);\n    }\n    OS.SendMessage(handle,OS.LB_SETHORIZONTALEXTENT,0,0);\n  }\n  int length=items.length;\n  OS.SendMessage(handle,OS.LB_RESETCONTENT,0,0);\n  OS.SendMessage(handle,OS.LB_INITSTORAGE,length,length * 32);\n  int index=0;\n  int cp=getCodePage();\n  while (index < length) {\n    String string=items[index];\n    if (string == null) {\n      break;\n    }\n    TCHAR buffer=new TCHAR(cp,string,true);\n    int result=OS.SendMessage(handle,OS.LB_ADDSTRING,0,buffer);\n    if (result == OS.LB_ERR || result == OS.LB_ERRSPACE) {\n      break;\n    }\n    if ((style & SWT.H_SCROLL) != 0) {\n      int flags=OS.DT_CALCRECT | OS.DT_SINGLELINE | OS.DT_NOPREFIX;\n      OS.DrawText(hDC,buffer,buffer.length(),rect,flags);\n      newWidth=Math.max(newWidth,rect.right - rect.left);\n    }\n    index++;\n  }\n  if ((style & SWT.H_SCROLL) != 0) {\n    if (newFont != 0) {\n      OS.SelectObject(hDC,oldFont);\n    }\n    OS.ReleaseDC(handle,hDC);\n    OS.SendMessage(handle,OS.LB_SETHORIZONTALEXTENT,newWidth + 3,0);\n  }\n  if (redraw) {\n    OS.SendMessage(handle,OS.WM_SETREDRAW,1,0);\n  }\n  OS.SetWindowLong(handle,OS.GWL_WNDPROC,oldProc);\n  if (index < items.length) {\n    error(SWT.ERROR_ITEM_NOT_ADDED);\n  }\n}\n",
        "accuracyTokens" : 0.9805825242718447,
        "accuracyCharacters" : 0.6563467492260062
      } ],
      "memberId" : "42a0282a3d4875ce3a2d0c455507943c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selected is first cleared, then the new items are\n * selected.\n * @param items the array of items\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setSelection(TabItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  if (items.length == 0) {\n    setSelection(-1,false);\n  }\n else {\n    for (int i=items.length - 1; i >= 0; --i) {\n      int index=indexOf(items[i]);\n      if (index != -1) {\n        setSelection(index,false);\n      }\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f9bded957dc1b6446661cc9d0425e4171068b116",
      "fileName" : "/src/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's list to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  OS.PtListDeleteAllItems(handle);\n  int[] itemsPtr=new int[items.length];\n  for (int i=0; i < itemsPtr.length; i++) {\n    byte[] buffer=Converter.wcsToMbcs(null,items[i],true);\n    int ptr=OS.malloc(buffer.length);\n    OS.memmove(ptr,buffer,buffer.length);\n    itemsPtr[i]=ptr;\n  }\n  OS.PtListAddItems(handle,itemsPtr,itemsPtr.length,0);\n  for (int i=0; i < itemsPtr.length; i++) {\n    OS.free(itemsPtr[i]);\n  }\n  OS.PtSetResource(handle,OS.Pt_ARG_TEXT_STRING,0,0);\n  sendEvent(SWT.Modify);\n}\n",
        "accuracyTokens" : 0.9881656804733728,
        "accuracyCharacters" : 0.8345323741007195
      } ],
      "memberId" : "60cd2c2d473c4149b06a0c920ca9e1a6"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see List#deselectAll()\n * @see List#select(int[])\n * @see List#setSelection(int[])\n */\npublic void setSelection(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    deselectAll();\n    return;\n  }\n  if ((style & SWT.MULTI) != 0) {\n    deselectAll();\n  }\n  for (int i=length - 1; i >= 0; --i) {\n    int index=0;\n    String string=items[i];\n    if (string != null) {\n      while ((index=indexOf(string,index)) != -1) {\n        select(index);\n        if ((style & SWT.SINGLE) != 0) {\n          return;\n        }\n        index++;\n      }\n    }\n  }\n  if ((style & SWT.SINGLE) != 0) {\n    deselectAll();\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "f9bded957dc1b6446661cc9d0425e4171068b116",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 41,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's items to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  OS.PtListDeleteAllItems(handle);\n  int[] itemsPtr=new int[items.length];\n  for (int i=0; i < itemsPtr.length; i++) {\n    byte[] buffer=Converter.wcsToMbcs(null,items[i],true);\n    int ptr=OS.malloc(buffer.length);\n    OS.memmove(ptr,buffer,buffer.length);\n    itemsPtr[i]=ptr;\n  }\n  OS.PtListAddItems(handle,itemsPtr,itemsPtr.length,0);\n  for (int i=0; i < itemsPtr.length; i++) {\n    OS.free(itemsPtr[i]);\n  }\n}\n",
        "accuracyTokens" : 0.987012987012987,
        "accuracyCharacters" : 0.827922077922078
      } ],
      "memberId" : "2f8ef6d6d1405000acb93fcb3ea4fe43"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selected is first cleared, then the new items are\n * selected.\n * @param items the array of items\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setSelection(TabItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  if (items.length == 0) {\n    setSelection(-1,false);\n  }\n else {\n    for (int i=items.length - 1; i >= 0; --i) {\n      int index=indexOf(items[i]);\n      if (index != -1) {\n        setSelection(index,false);\n      }\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/Table.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if one of the items has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see Table#deselectAll()\n * @see Table#select(int[])\n * @see Table#setSelection(int[])\n */\npublic void setSelection(TableItem[] items){\n  checkWidget();\n  checkItems(false);\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  int[] ids=new int[length];\n  int count=0;\n  for (int i=0; i < length; i++) {\n    int index=indexOf(items[length - i - 1]);\n    if (index != -1) {\n      ids[count++]=index + 1;\n    }\n  }\n  if (count > 0) {\n    select(ids,count,true);\n    showIndex(ids[0] - 1);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
      "fileName" : "/src/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's list to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  removeAll();\n  if (items.length == 0) {\n    return;\n  }\n  for (int i=0; i < items.length; i++) {\n    String string=items[i];\n    if (string == null) {\n      continue;\n    }\n    char[] buffer=new char[string.length()];\n    string.getChars(0,buffer.length,buffer,0);\n    int ptr=OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault,buffer,buffer.length);\n    if (ptr == 0) {\n      error(SWT.ERROR_ITEM_NOT_ADDED);\n    }\n    int result;\n    if ((style & SWT.READ_ONLY) != 0) {\n      result=OS.AppendMenuItemTextWithCFString(menuHandle,ptr,0,0,null);\n    }\n else {\n      int[] outIndex=new int[1];\n      result=OS.HIComboBoxAppendTextItem(handle,ptr,outIndex);\n    }\n    OS.CFRelease(ptr);\n    if (result != OS.noErr) {\n      error(SWT.ERROR_ITEM_NOT_ADDED);\n    }\n  }\n}\n",
        "accuracyTokens" : 0.9447236180904522,
        "accuracyCharacters" : 0.7602880658436214
      } ],
      "memberId" : "b789e73145cde035a1547f804b4c440b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/Tree.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if one of the items has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see Tree#deselectAll()\n */\npublic void setSelection(TreeItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  int[] ids=new int[length];\n  for (int i=0; i < length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    if (items[i].isDisposed()) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    ids[i]=items[i].id;\n    showItem(items[i],false);\n  }\n  ignoreSelect=true;\n  int[] selectionFlags=null;\n  if ((style & SWT.SINGLE) != 0) {\n    selectionFlags=new int[1];\n    OS.GetDataBrowserSelectionFlags(handle,selectionFlags);\n    OS.SetDataBrowserSelectionFlags(handle,selectionFlags[0] & ~OS.kDataBrowserNeverEmptySelectionSet);\n  }\n  OS.SetDataBrowserSelectedItems(handle,ids.length,ids,OS.kDataBrowserItemsAssign);\n  if ((style & SWT.SINGLE) != 0) {\n    OS.SetDataBrowserSelectionFlags(handle,selectionFlags[0]);\n  }\n  ignoreSelect=false;\n  if (length > 0) {\n    showItem(items[0],true);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see List#deselectAll()\n * @see List#select(int[])\n * @see List#setSelection(int[])\n */\npublic void setSelection(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  int count=0;\n  int[] ids=new int[length];\n  for (int i=0; i < length; i++) {\n    String string=items[length - i - 1];\n    if ((style & SWT.SINGLE) != 0) {\n      int index=indexOf(string,0);\n      if (index != -1) {\n        count=1;\n        ids=new int[]{index + 1};\n      }\n    }\n else {\n      int index=0;\n      while ((index=indexOf(string,index)) != -1) {\n        if (count == ids.length) {\n          int[] newIds=new int[ids.length + 4];\n          System.arraycopy(ids,0,newIds,0,ids.length);\n          ids=newIds;\n        }\n        ids[count++]=index + 1;\n        index++;\n      }\n    }\n  }\n  if (count > 0) {\n    select(ids,count,true);\n    showIndex(ids[0] - 1);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "void select(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  int length=items.length;\n  int[] ids=new int[length];\n  for (int i=0; i < length; i++) {\n    ids[i]=indexOf(items[length - i - 1]) + 1;\n  }\n  select(ids,length,false);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's items to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  OS.RemoveDataBrowserItems(handle,OS.kDataBrowserNoItem,0,null,0);\n  if (OS.AddDataBrowserItems(handle,OS.kDataBrowserNoItem,items.length,null,OS.kDataBrowserItemNoProperty) != OS.noErr) {\n    error(SWT.ERROR_ITEM_NOT_ADDED);\n  }\n  this.items=new String[items.length];\n  System.arraycopy(items,0,this.items,0,items.length);\n  itemCount=items.length;\n}\n",
        "accuracyTokens" : 0.9814814814814815,
        "accuracyCharacters" : 0.8592057761732852
      } ],
      "memberId" : "7bd8ddb4d7290d6640b7e213591eef0d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selected is first cleared, then the new items are\n * selected.\n * @param items the array of items\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setSelection(TabItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  if (items.length == 0) {\n    setSelection(-1,false);\n  }\n else {\n    for (int i=items.length - 1; i >= 0; --i) {\n      int index=indexOf(items[i]);\n      if (index != -1) {\n        setSelection(index,false);\n      }\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/Table.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if one of the items has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see Table#deselectAll()\n * @see Table#select(int[])\n * @see Table#setSelection(int[])\n */\npublic void setSelection(TableItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  boolean first=true;\n  for (int i=0; i < length; i++) {\n    int index=indexOf(items[i]);\n    if (index != -1) {\n      if (first) {\n        first=false;\n        selectFocusIndex(index);\n      }\n else {\n        select(index);\n      }\n    }\n  }\n  showSelection();\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
      "fileName" : "/src/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 61,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's list to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  lockText=ignoreSelect=true;\n  OS.gtk_list_clear_items(listHandle,0,-1);\n  int font=getFontDescription();\n  GdkColor color=getForegroundColor();\n  int i=0;\n  while (i < items.length) {\n    String string=items[i];\n    if (string == null) {\n      break;\n    }\n    byte[] buffer=Converter.wcsToMbcs(null,string,true);\n    int item=OS.gtk_list_item_new_with_label(buffer);\n    int label=OS.gtk_bin_get_child(item);\n    OS.gtk_widget_modify_fg(label,OS.GTK_STATE_NORMAL,color);\n    OS.gtk_widget_modify_font(label,font);\n    OS.gtk_container_add(listHandle,item);\n    OS.gtk_widget_show(item);\n    i++;\n  }\n  this.items=new String[items.length];\n  System.arraycopy(items,0,this.items,0,i);\n  lockText=ignoreSelect=false;\n  OS.gtk_entry_set_text(entryHandle,new byte[0]);\n}\n",
        "accuracyTokens" : 0.9603960396039604,
        "accuracyCharacters" : 0.7711340206185567
      } ],
      "memberId" : "e3ccf759fa2bbef053b6a20adca3083a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/Tree.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if one of the items has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see Tree#deselectAll()\n */\npublic void setSelection(TreeItem[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  int selection=OS.gtk_tree_view_get_selection(handle);\n  OS.g_signal_handlers_block_matched(selection,OS.G_SIGNAL_MATCH_DATA,0,0,0,0,CHANGED);\n  boolean first=true;\n  for (int i=0; i < length; i++) {\n    TreeItem item=items[i];\n    if (item == null) {\n      continue;\n    }\n    if (item.isDisposed()) {\n      break;\n    }\n    if (item.parent != this) {\n      continue;\n    }\n    int path=OS.gtk_tree_model_get_path(modelHandle,item.handle);\n    showItem(path,first);\n    if (first) {\n      OS.gtk_tree_view_set_cursor(handle,path,0,false);\n    }\n    OS.gtk_tree_selection_select_iter(selection,item.handle);\n    OS.gtk_tree_path_free(path);\n    first=false;\n  }\n  OS.g_signal_handlers_unblock_matched(selection,OS.G_SIGNAL_MATCH_DATA,0,0,0,0,CHANGED);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's selection to be the given array of items.\n * The current selection is cleared before the new items are selected.\n * <p>\n * Items that are not in the receiver are ignored.\n * If the receiver is single-select and multiple items are specified,\n * then all items are ignored.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the array of items is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @see List#deselectAll()\n * @see List#select(int[])\n * @see List#setSelection(int[])\n */\npublic void setSelection(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  deselectAll();\n  int length=items.length;\n  if (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n    return;\n  }\n  boolean first=true;\n  for (int i=0; i < length; i++) {\n    int index=0;\n    String string=items[i];\n    if (string != null) {\n      while ((index=indexOf(string,index)) != -1) {\n        if ((style & SWT.MULTI) != 0) {\n          if (first) {\n            first=false;\n            selectFocusIndex(index);\n          }\n else {\n            select(index);\n          }\n        }\n else {\n          selectFocusIndex(index);\n          break;\n        }\n        index++;\n      }\n    }\n  }\n  showSelection();\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
      "fileName" : "/src/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 50,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's items to be the given array of items.\n * @param items the array of items\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n * <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems(String[] items){\n  checkWidget();\n  if (items == null) {\n    error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  for (int i=0; i < items.length; i++) {\n    if (items[i] == null) {\n      error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n  }\n  int selection=OS.gtk_tree_view_get_selection(handle);\n  OS.g_signal_handlers_block_matched(selection,OS.G_SIGNAL_MATCH_DATA,0,0,0,0,CHANGED);\n  OS.gtk_list_store_clear(modelHandle);\n  OS.g_signal_handlers_unblock_matched(selection,OS.G_SIGNAL_MATCH_DATA,0,0,0,0,CHANGED);\n  int iter=OS.g_malloc(OS.GtkTreeIter_sizeof());\n  if (iter == 0) {\n    error(SWT.ERROR_ITEM_NOT_ADDED);\n  }\n  for (int i=0; i < items.length; i++) {\n    String string=items[i];\n    if (string == null) {\n      OS.g_free(iter);\n      error(SWT.ERROR_ITEM_NOT_ADDED);\n    }\n    byte[] buffer=Converter.wcsToMbcs(null,string,true);\n    OS.gtk_list_store_append(modelHandle,iter);\n    OS.gtk_list_store_set(modelHandle,iter,TEXT_COLUMN,buffer,-1);\n  }\n  OS.g_free(iter);\n}\n",
        "accuracyTokens" : 0.9027027027027027,
        "accuracyCharacters" : 0.7510593220338984
      } ],
      "memberId" : "a46ec5596b8618a6f9138da080feab71"
    } ],
    "foundMembers" : 10,
    "numberOfRecommendationSets" : 26,
    "precision" : 0.38461538461538464,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9598187699676851,
    "accuracyCharactersMin" : 0.7521608604497401,
    "accuracyTokensMax" : 0.9598187699676851,
    "accuracyCharactersMax" : 0.7521608604497401,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 1494763403,
    "patternUseTimeInNanoSec" : 6377302411
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "86079_2",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "\n\nLRESULT WM_ERASEBKGND (int wParam, int lParam)",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4f0d95964b4788e870d780c728cd8763",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 42,
          "methodNumber2" : 45
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "994f370afa6a3db9325028573466b41a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 47,
          "methodNumber2" : 50
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end)",
      "methodModified" : "",
      "diff" : "+\tif (OS.gtk_spin_button_get_digits (handle) > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "12c5a42fd4061ef7a4451f757e26b4ff",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e9b2a3f1566e55718bdac644a0b8c42a42baa7cb",
          "commitId2" : "109dd991548420f954abe996a5e2c0884a026ea5",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 47,
          "methodNumber2" : 50
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -2981, 27296, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "treeSize" : 10
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "\n\nLRESULT WM_ERASEBKGND (int wParam, int lParam)",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4f0d95964b4788e870d780c728cd8763",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 42,
          "methodNumber2" : 45
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "994f370afa6a3db9325028573466b41a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 47,
          "methodNumber2" : 50
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "treeSize" : 10
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
      "fileName" : "/src/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "String verifyText(String string,int start,int end,Event keyEvent){\n  Event event=new Event();\n  event.text=string;\n  event.start=start;\n  event.end=end;\n  if (keyEvent != null) {\n    event.character=keyEvent.character;\n    event.keyCode=keyEvent.keyCode;\n    event.stateMask=keyEvent.stateMask;\n  }\n  int index=0;\n  if (digits > 0) {\n    String decimalSeparator=getDecimalSeparator();\n    index=string.indexOf(decimalSeparator);\n    if (index != -1) {\n      string=string.substring(0,index) + string.substring(index + 1);\n    }\n    index=0;\n  }\n  while (index < string.length()) {\n    if (!Character.isDigit(string.charAt(index))) {\n      break;\n    }\n    index++;\n  }\n  event.doit=index == string.length();\n  sendEvent(SWT.Verify,event);\n  if (!event.doit || isDisposed()) {\n    return null;\n  }\n  return event.text;\n}\n",
        "accuracyTokens" : 0.9874213836477987,
        "accuracyCharacters" : 0.6535947712418301
      } ],
      "memberId" : "994f370afa6a3db9325028573466b41a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "/src/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "String verifyText(String string,int start,int end,Event keyEvent){\n  Event event=new Event();\n  event.text=string;\n  event.start=start;\n  event.end=end;\n  if (keyEvent != null) {\n    event.character=keyEvent.character;\n    event.keyCode=keyEvent.keyCode;\n    event.stateMask=keyEvent.stateMask;\n  }\n  int index=0;\n  if (digits > 0) {\n    String decimalSeparator=getDecimalSeparator();\n    index=string.indexOf(decimalSeparator);\n    if (index != -1) {\n      string=string.substring(0,index) + string.substring(index + 1);\n    }\n    index=0;\n  }\n  while (index < string.length()) {\n    if (!Character.isDigit(string.charAt(index))) {\n      break;\n    }\n    index++;\n  }\n  event.doit=index == string.length();\n  if (OS.IsDBLocale) {\n    event.start=mbcsToWcsPos(start);\n    event.end=mbcsToWcsPos(end);\n  }\n  sendEvent(SWT.Verify,event);\n  if (!event.doit || isDisposed()) {\n    return null;\n  }\n  return event.text;\n}\n",
        "accuracyTokens" : 0.9887640449438202,
        "accuracyCharacters" : 0.8143360752056404
      } ],
      "memberId" : "4f0d95964b4788e870d780c728cd8763"
    } ],
    "foundMembers" : 2,
    "numberOfRecommendationSets" : 2,
    "precision" : 1.0,
    "recall" : 0.6666666666666666,
    "accuracyTokensMin" : 0.9880927142958095,
    "accuracyCharactersMin" : 0.7339654232237353,
    "accuracyTokensMax" : 0.9880927142958095,
    "accuracyCharactersMax" : 0.7339654232237353,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 2158668061,
    "patternUseTimeInNanoSec" : 5116955028
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "95116",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "check for null, -1",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "bd0abdddbcf77c4a01d95aeb1645887f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
          "commitId2" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2df091ca67c7ea781d124da39cc5e370",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
          "commitId2" : "dfb5b97348dcb47d15a018bd61bd8926d1f2b725",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "be020405db6f10ef43a3f6a2e09e6fb5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "db8f2540c3006f1d6270ba3a897a8900f04bd0ad",
          "commitId2" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2e9fb8cef5eb2f04622e423de9a387cd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "db8f2540c3006f1d6270ba3a897a8900f04bd0ad",
          "commitId2" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "5e3b2715b021a2217a88cfec0df91d75",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "commitId2" : "c9a1a51b1a6fc91cbd073d165d9eedfc6dd71a4d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2df091ca67c7ea781d124da39cc5e370",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
          "commitId2" : "dfb5b97348dcb47d15a018bd61bd8926d1f2b725",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "5e3b2715b021a2217a88cfec0df91d75",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "commitId2" : "c9a1a51b1a6fc91cbd073d165d9eedfc6dd71a4d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
      "fileName" : "/src/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "Shell(Display display,Shell parent,int style,int handle){\n  super();\n  checkSubclass();\n  if (display == null) {\n    display=Display.getCurrent();\n  }\n  if (display == null) {\n    display=Display.getDefault();\n  }\n  if (!display.isValidThread()) {\n    error(SWT.ERROR_THREAD_INVALID_ACCESS);\n  }\n  if (parent != null && parent.isDisposed()) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  this.style=checkStyle(style);\n  this.parent=parent;\n  this.display=display;\n  this.handle=handle;\n  createWidget();\n}\n",
        "accuracyTokens" : 0.9743589743589743,
        "accuracyCharacters" : 0.8262806236080178
      } ],
      "memberId" : "bd0abdddbcf77c4a01d95aeb1645887f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "db8f2540c3006f1d6270ba3a897a8900f04bd0ad",
      "fileName" : "/src/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "Shell(Display display,Shell parent,int style,int handle){\n  super();\n  checkSubclass();\n  if (display == null) {\n    display=Display.getCurrent();\n  }\n  if (display == null) {\n    display=Display.getDefault();\n  }\n  if (!display.isValidThread()) {\n    error(SWT.ERROR_THREAD_INVALID_ACCESS);\n  }\n  if (parent != null && parent.isDisposed()) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  this.style=checkStyle(style);\n  this.parent=parent;\n  this.display=display;\n  this.handle=handle;\n  createWidget(0);\n}\n",
        "accuracyTokens" : 0.9746835443037974,
        "accuracyCharacters" : 0.8266666666666667
      } ],
      "memberId" : "be020405db6f10ef43a3f6a2e09e6fb5"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
      "fileName" : "/src/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "Shell(Display display,Shell parent,int style,int handle){\n  super();\n  checkSubclass();\n  if (display == null) {\n    display=Display.getCurrent();\n  }\n  if (display == null) {\n    display=Display.getDefault();\n  }\n  if (!display.isValidThread()) {\n    error(SWT.ERROR_THREAD_INVALID_ACCESS);\n  }\n  if (parent != null && parent.isDisposed()) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  this.style=checkStyle(style);\n  this.parent=parent;\n  this.display=display;\n  this.handle=handle;\n  createWidget(0);\n}\n",
        "accuracyTokens" : 0.9746835443037974,
        "accuracyCharacters" : 0.8266666666666667
      } ],
      "memberId" : "2df091ca67c7ea781d124da39cc5e370"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "73a5742f06398093d2dddcaa322139e840c55a5d",
      "fileName" : "/src/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "Shell(Display display,Shell parent,int style,int handle){\n  super();\n  checkSubclass();\n  if (display == null) {\n    display=Display.getCurrent();\n  }\n  if (display == null) {\n    display=Display.getDefault();\n  }\n  if (!display.isValidThread()) {\n    error(SWT.ERROR_THREAD_INVALID_ACCESS);\n  }\n  if (parent != null && parent.isDisposed()) {\n    error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  this.style=checkStyle(style);\n  this.parent=parent;\n  this.display=display;\n  this.handle=handle;\n  createWidget();\n}\n",
        "accuracyTokens" : 0.9743589743589743,
        "accuracyCharacters" : 0.8262806236080178
      } ],
      "memberId" : "5e3b2715b021a2217a88cfec0df91d75"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 0.8,
    "accuracyTokensMin" : 0.9745212593313859,
    "accuracyCharactersMin" : 0.8264736451373422,
    "accuracyTokensMax" : 0.9745212593313859,
    "accuracyCharactersMax" : 0.8264736451373422,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 2123963342,
    "patternUseTimeInNanoSec" : 7202005827
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "98198",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing for all\n * <em>non-text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setTextAntialias()\n * \n * @since 3.1\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * Sets the receiver's anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing for all\n * <em>non-text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setTextAntialias()\n * \n * @since 3.1\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.gdipGraphics == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "1594c47d340c9ce46b1f3707cdf3d9b7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 83,
          "methodNumber2" : 83
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the receiver's interpolation setting to the parameter, which\n * must be one of <code>SWT.DEFAULT</code>, <code>SWT.NONE</code>, \n * <code>SWT.LOW</code> or <code>SWT.HIGH</code>.\n *\n * @param interpolation the new interpolation setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.DEFAULT</code>, \n *                                 <code>SWT.NONE</code>, <code>SWT.LOW</code> or <code>SWT.HIGH</code>\n * </ul> \n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @since 3.1\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n\n/** \n * Sets the receiver's interpolation setting to the parameter, which\n * must be one of <code>SWT.DEFAULT</code>, <code>SWT.NONE</code>, \n * <code>SWT.LOW</code> or <code>SWT.HIGH</code>.\n *\n * @param interpolation the new interpolation setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.DEFAULT</code>, \n *                                 <code>SWT.NONE</code>, <code>SWT.LOW</code> or <code>SWT.HIGH</code>\n * </ul> \n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @since 3.1\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.gdipGraphics == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d575c0201ab41f98613eb841117799bd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 96,
          "methodNumber2" : 96
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2c712e6c916f981c4c3f91c6fc8318d4",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 75,
          "methodNumber2" : 75
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.cairo == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a09c6f29d1ae78bf6f362270ab8c5006",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 91,
          "methodNumber2" : 91
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d8a2ba24403db54b04ecc9f689655250",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 78,
          "methodNumber2" : 78
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.cairo == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "49885cfc0e72d45dedfd9565cdedc55f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 95,
          "methodNumber2" : 95
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias()\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias()\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.gdipGraphics == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8a7d1655e9cb5f1b42f5ca371de1769f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 104,
          "methodNumber2" : 104
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "59bfb550d3377219b9363ff6be8faf41",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 103,
          "methodNumber2" : 103
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "3138e6f9a55300d28a2c49e4243b61f2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 98,
          "methodNumber2" : 98
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "diff" : "+\tif (data.cairo == 0 && transform == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a942be0836709c71c5fad636ffc15bba",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 104,
          "methodNumber2" : 104
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 16062, 27500, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0fba188f6128f7bd8f6fd684dc2bf13e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 77,
          "methodNumber2" : 77
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "diff" : "+\tif (data.cairo == 0 && transform == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "674189c6a33feeef0ccc77ff4bdabb0e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 99,
          "methodNumber2" : 99
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 16062, 27500, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "87130bd669e96b2a276ee2680a9a6796",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 82,
          "methodNumber2" : 82
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "250098d8c1699e8fea54ff002bbc8b38",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 94,
          "methodNumber2" : 94
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e82be26b5083599db67cf513c561fdf0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 90,
          "methodNumber2" : 90
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "treeSize" : 9
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "59bfb550d3377219b9363ff6be8faf41",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 103,
          "methodNumber2" : 103
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "250098d8c1699e8fea54ff002bbc8b38",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 94,
          "methodNumber2" : 94
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "treeSize" : 9
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 77,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  data.backgroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.4897959183673469,
        "accuracyCharacters" : 0.48172757475083056
      } ],
      "memberId" : "0fba188f6128f7bd8f6fd684dc2bf13e"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line join style to the argument, which must be one\n * of the constants <code>SWT.JOIN_MITER</code>, <code>SWT.JOIN_ROUND</code>,\n * or <code>SWT.JOIN_BEVEL</code>.\n * @param join the join style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineJoin(int join){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int join_style=0, cairo_style=0;\nswitch (join) {\ncase SWT.JOIN_MITER:\n    join_style=OS.JoinMiter;\n  cairo_style=Cairo.CAIRO_LINE_JOIN_MITER;\nbreak;\ncase SWT.JOIN_ROUND:\njoin_style=OS.JoinRound;\ncairo_style=Cairo.CAIRO_LINE_JOIN_ROUND;\nbreak;\ncase SWT.JOIN_BEVEL:\njoin_style=OS.JoinBevel;\ncairo_style=Cairo.CAIRO_LINE_JOIN_BEVEL;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nint xDisplay=data.display;\nXGCValues values=new XGCValues();\nOS.XGetGCValues(xDisplay,handle,OS.GCLineWidth | OS.GCCapStyle,values);\nint line_style=data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\nOS.XSetLineAttributes(xDisplay,handle,values.line_width,line_style,values.cap_style,join_style);\nint cairo=data.cairo;\nif (cairo != 0) {\nCairo.cairo_set_line_join(cairo,cairo_style);\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the background color. The background color is used\n * for fill operations and as the background color when text\n * is drawn.\n * @param color the new background color for the receiver\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setBackground(Color color){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (color == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (color.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  OS.XSetBackground(data.display,handle,color.handle.pixel);\n  data.backgroundPattern=null;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 103,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\nswitch (antialias) {\ncase SWT.DEFAULT:\n    break;\ncase SWT.OFF:\n  break;\ncase SWT.ON:\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ndata.textAntialias=antialias;\n}\n",
        "accuracyTokens" : 0.9152542372881356,
        "accuracyCharacters" : 0.6484149855907781
      } ],
      "memberId" : "59bfb550d3377219b9363ff6be8faf41"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 94,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  if (pattern != null) {\n    Cairo.cairo_set_pattern(cairo,pattern.handle);\n  }\n else {\n    int display=data.display;\n    XGCValues values=new XGCValues();\n    OS.XGetGCValues(display,handle,OS.GCForeground,values);\n    XColor color=new XColor();\n    color.pixel=values.foreground;\n    OS.XQueryColor(display,data.colormap,color);\n    Cairo.cairo_set_rgb_color(cairo,(color.red & 0xFFFF) / (float)0xFFFF,(color.green & 0xFFFF) / (float)0xFFFF,(color.blue & 0xFFFF) / (float)0xFFFF);\n  }\n  data.foregroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.845679012345679,
        "accuracyCharacters" : 0.7204433497536946
      } ],
      "memberId" : "250098d8c1699e8fea54ff002bbc8b38"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public void setFillRule(int rule){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int mode=OS.EvenOddRule, cairo_mode=Cairo.CAIRO_FILL_RULE_EVEN_ODD;\nswitch (rule) {\ncase SWT.FILL_WINDING:\n    mode=OS.WindingRule;\n  cairo_mode=Cairo.CAIRO_FILL_RULE_WINDING;\nbreak;\ncase SWT.FILL_EVEN_ODD:\nmode=OS.EvenOddRule;\ncairo_mode=Cairo.CAIRO_FILL_RULE_EVEN_ODD;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nOS.XSetFillRule(data.display,handle,mode);\nint cairo=data.cairo;\nif (cairo != 0) {\nCairo.cairo_set_fill_rule(cairo,cairo_mode);\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the font which will be used by the receiver\n * to draw and measure text to the argument. If the\n * argument is null, then a default font appropriate\n * for the platform will be used instead.\n * @param font the new font for the receiver, or null to indicate a default font\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the font has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setFont(Font font){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (font == null) {\n    font=data.device.systemFont;\n  }\n  if (font.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  data.font=font;\n  if (data.renderTable != 0) {\n    OS.XmRenderTableFree(data.renderTable);\n  }\n  data.renderTable=0;\n  data.stringWidth=data.stringHeight=data.textWidth=data.textHeight=-1;\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    setCairoFont(cairo,font);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Copies a rectangular area of the receiver at the specified\n * position into the image, which must be of type <code>SWT.BITMAP</code>.\n * @param image the image to copy into\n * @param x the x coordinate in the receiver of the area to be copied\n * @param y the y coordinate in the receiver of the area to be copied\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image is not a bitmap or has been disposed</li> \n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void copyArea(Image image,int x,int y){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.type != SWT.BITMAP || image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  Rectangle rect=image.getBounds();\n  int xDisplay=data.display;\n  int xGC=OS.XCreateGC(xDisplay,image.pixmap,0,null);\n  if (xGC == 0) {\n    SWT.error(SWT.ERROR_NO_HANDLES);\n  }\n  OS.XSetSubwindowMode(xDisplay,xGC,OS.IncludeInferiors);\n  OS.XCopyArea(xDisplay,data.drawable,image.pixmap,xGC,x,y,rect.width,rect.height,0,0);\n  OS.XFreeGC(xDisplay,xGC);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 104,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (transform != null && transform.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  Cairo.cairo_concat_matrix(cairo,data.inverseMatrix);\n  if (transform != null) {\n    Cairo.cairo_concat_matrix(cairo,transform.handle);\n    Cairo.cairo_matrix_copy(data.matrix,transform.handle);\n    Cairo.cairo_matrix_copy(data.inverseMatrix,transform.handle);\n    Cairo.cairo_matrix_invert(data.inverseMatrix);\n  }\n else {\n    Cairo.cairo_matrix_set_identity(data.matrix);\n    Cairo.cairo_matrix_set_identity(data.inverseMatrix);\n  }\n  int clipRgn=data.clipRgn;\n  if (clipRgn != 0) {\n    int matrix=data.inverseMatrix;\n    int newRgn=OS.XCreateRegion();\n    XRectangle rect=new XRectangle();\n    OS.XClipBox(clipRgn,rect);\n    short[] pointArray=new short[8];\n    double[] x=new double[1], y=new double[1];\n    x[0]=rect.x;\n    y[0]=rect.y;\n    Cairo.cairo_matrix_transform_point(matrix,x,y);\n    pointArray[0]=(short)Math.round(x[0]);\n    pointArray[1]=(short)Math.round(y[0]);\n    x[0]=rect.x + rect.width;\n    y[0]=rect.y;\n    Cairo.cairo_matrix_transform_point(matrix,x,y);\n    pointArray[2]=(short)Math.round(x[0]);\n    pointArray[3]=(short)Math.round(y[0]);\n    x[0]=rect.x + rect.width;\n    y[0]=rect.y + rect.height;\n    Cairo.cairo_matrix_transform_point(matrix,x,y);\n    pointArray[4]=(short)Math.round(x[0]);\n    pointArray[5]=(short)Math.round(y[0]);\n    x[0]=rect.x;\n    y[0]=rect.y + rect.height;\n    Cairo.cairo_matrix_transform_point(matrix,x,y);\n    pointArray[6]=(short)Math.round(x[0]);\n    pointArray[7]=(short)Math.round(y[0]);\n    int polyRgn=OS.XPolygonRegion(pointArray,pointArray.length / 2,OS.EvenOddRule);\n    OS.XUnionRegion(handle,polyRgn,handle);\n    OS.XDestroyRegion(polyRgn);\n    OS.XDestroyRegion(clipRgn);\n    data.clipRgn=newRgn;\n  }\n}\n",
        "accuracyTokens" : 0.9430523917995444,
        "accuracyCharacters" : 0.7501232134056185
      } ],
      "memberId" : "a942be0836709c71c5fad636ffc15bba"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the area of the receiver which can be changed\n * by drawing operations to the region specified\n * by the argument.\n * @param region the clipping region.\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the region has been disposed</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setClipping(Region region){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (region != null && region.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  setClipping(region != null ? region.handle : 0);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Draws the given image in the receiver at the specified\n * coordinates.\n * @param image the image to draw\n * @param x the x coordinate of where to draw\n * @param y the y coordinate of where to draw\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * <li>ERROR_INVALID_ARGUMENT - if the given coordinates are outside the bounds of the image</li>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES - if no handles are available to perform the operation</li>\n * </ul>\n */\npublic void drawImage(Image image,int x,int y){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  drawImage(image,0,0,-1,-1,x,y,-1,-1,true);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void fillPath(Path path){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (path == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (path.handle == 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int display=data.display;\n  XGCValues values=new XGCValues();\n  OS.XGetGCValues(display,handle,OS.GCForeground | OS.GCBackground,values);\n  XColor color=new XColor();\n  color.pixel=values.background;\n  OS.XQueryColor(display,data.colormap,color);\n  int cairo=data.cairo;\n  Cairo.cairo_save(cairo);\n  if (data.backgroundPattern != null) {\n    Cairo.cairo_set_pattern(cairo,data.backgroundPattern.handle);\n  }\n else {\n    Cairo.cairo_set_rgb_color(cairo,(color.red & 0xFFFF) / (float)0xFFFF,(color.green & 0xFFFF) / (float)0xFFFF,(color.blue & 0xFFFF) / (float)0xFFFF);\n  }\n  Cairo.cairo_add_path(cairo,path.handle);\n  Cairo.cairo_fill(cairo);\n  Cairo.cairo_restore(cairo);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line cap style to the argument, which must be one\n * of the constants <code>SWT.CAP_FLAT</code>, <code>SWT.CAP_ROUND</code>,\n * or <code>SWT.CAP_SQUARE</code>.\n * @param cap the cap style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineCap(int cap){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int cap_style=0, cairo_style=0;\nswitch (cap) {\ncase SWT.CAP_ROUND:\n    cap_style=OS.CapRound;\n  cairo_style=Cairo.CAIRO_LINE_CAP_ROUND;\nbreak;\ncase SWT.CAP_FLAT:\ncap_style=OS.CapButt;\ncairo_style=Cairo.CAIRO_LINE_CAP_BUTT;\nbreak;\ncase SWT.CAP_SQUARE:\ncap_style=OS.CapProjecting;\ncairo_style=Cairo.CAIRO_LINE_CAP_SQUARE;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nint xDisplay=data.display;\nXGCValues values=new XGCValues();\nOS.XGetGCValues(xDisplay,handle,OS.GCLineWidth | OS.GCJoinStyle,values);\nint line_style=data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\nOS.XSetLineAttributes(xDisplay,handle,values.line_width,line_style,cap_style,values.join_style);\nint cairo=data.cairo;\nif (cairo != 0) {\nCairo.cairo_set_line_cap(cairo,cairo_style);\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Copies a rectangular area from the source image into a (potentially\n * different sized) rectangular area in the receiver. If the source\n * and destination areas are of differing sizes, then the source\n * area will be stretched or shrunk to fit the destination area\n * as it is copied. The copy fails if any part of the source rectangle\n * lies outside the bounds of the source image, or if any of the width\n * or height arguments are negative.\n * @param image the source image\n * @param srcX the x coordinate in the source image to copy from\n * @param srcY the y coordinate in the source image to copy from\n * @param srcWidth the width in pixels to copy from the source\n * @param srcHeight the height in pixels to copy from the source\n * @param destX the x coordinate in the destination to copy to\n * @param destY the y coordinate in the destination to copy to\n * @param destWidth the width in pixels of the destination rectangle\n * @param destHeight the height in pixels of the destination rectangle\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * <li>ERROR_INVALID_ARGUMENT - if any of the width or height arguments are negative.\n * <li>ERROR_INVALID_ARGUMENT - if the source rectangle is not contained within the bounds of the source image</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES - if no handles are available to perform the operation</li>\n * </ul>\n */\npublic void drawImage(Image image,int srcX,int srcY,int srcWidth,int srcHeight,int destX,int destY,int destWidth,int destHeight){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) {\n    return;\n  }\n  if (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  drawImage(image,srcX,srcY,srcWidth,srcHeight,destX,destY,destWidth,destHeight,false);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 91,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\nswitch (interpolation) {\ncase SWT.DEFAULT:\ncase SWT.NONE:\ncase SWT.LOW:\ncase SWT.HIGH:\n    break;\ndefault :\n  SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ninitCairo();\ndata.interpolation=interpolation;\n}\n",
        "accuracyTokens" : 0.9180327868852459,
        "accuracyCharacters" : 0.7570621468926554
      } ],
      "memberId" : "a09c6f29d1ae78bf6f362270ab8c5006"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void drawPath(Path path){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (path == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (path.handle == 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  Cairo.cairo_save(cairo);\n  float offset=data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n  Cairo.cairo_translate(cairo,offset,offset);\n  Cairo.cairo_add_path(cairo,path.handle);\n  Cairo.cairo_stroke(cairo);\n  Cairo.cairo_restore(cairo);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 75,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\nswitch (antialias) {\ncase SWT.DEFAULT:\n    break;\ncase SWT.OFF:\n  break;\ncase SWT.ON:\ninitCairo();\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ndata.antialias=antialias;\n}\n",
        "accuracyTokens" : 0.9180327868852459,
        "accuracyCharacters" : 0.6814159292035398
      } ],
      "memberId" : "2c712e6c916f981c4c3f91c6fc8318d4"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line style to the argument, which must be one\n * of the constants <code>SWT.LINE_SOLID</code>, <code>SWT.LINE_DASH</code>,\n * <code>SWT.LINE_DOT</code>, <code>SWT.LINE_DASHDOT</code> or\n * <code>SWT.LINE_DASHDOTDOT</code>.\n * @param lineStyle the style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineStyle(int lineStyle){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int xDisplay=data.display;\n  XGCValues values=new XGCValues();\n  OS.XGetGCValues(xDisplay,handle,OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle,values);\n  int[] dashes=null;\n  int width=values.line_width;\nswitch (lineStyle) {\ncase SWT.LINE_SOLID:\n    break;\ncase SWT.LINE_DASH:\n  dashes=width != 0 ? LINE_DASH : LINE_DASH_ZERO;\nbreak;\ncase SWT.LINE_DOT:\ndashes=width != 0 ? LINE_DOT : LINE_DOT_ZERO;\nbreak;\ncase SWT.LINE_DASHDOT:\ndashes=width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\nbreak;\ncase SWT.LINE_DASHDOTDOT:\ndashes=width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\nbreak;\ncase SWT.LINE_CUSTOM:\ndashes=data.dashes;\nif (dashes == null) {\nlineStyle=SWT.LINE_SOLID;\n}\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ndata.lineStyle=lineStyle;\nOS.XSetLineAttributes(xDisplay,handle,values.line_width,dashes != null ? OS.LineOnOffDash : OS.LineSolid,values.cap_style,values.join_style);\nif (dashes != null) {\nbyte[] dash_list=new byte[dashes.length];\nfor (int i=0; i < dash_list.length; i++) {\ndash_list[i]=(byte)(width == 0 ? dashes[i] : dashes[i] * width);\n}\nOS.XSetDashes(xDisplay,handle,0,dash_list,dash_list.length);\n}\nint cairo=data.cairo;\nif (cairo != 0) {\nif (dashes != null) {\ndouble[] cairoDashes=new double[dashes.length];\nfor (int i=0; i < cairoDashes.length; i++) {\ncairoDashes[i]=width == 0 ? dashes[i] : dashes[i] * width;\n}\nCairo.cairo_set_dash(cairo,cairoDashes,cairoDashes.length,0);\n}\n else {\nCairo.cairo_set_dash(cairo,null,0,0);\n}\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line dash style to the argument.\n * @param dashes the dash style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if any of the values in the array is less than or equal 0</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineDash(int[] dashes){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int xDisplay=data.display;\n  if (dashes != null && dashes.length != 0) {\n    byte[] dash_list=new byte[dashes.length];\n    for (int i=0; i < dashes.length; i++) {\n      int dash=dashes[i];\n      if (dash <= 0) {\n        SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n      }\n      dash_list[i]=(byte)dash;\n    }\n    OS.XSetDashes(xDisplay,handle,0,dash_list,dash_list.length);\n    data.dashes=new int[dashes.length];\n    System.arraycopy(dashes,0,data.dashes,0,dashes.length);\n    data.lineStyle=SWT.LINE_CUSTOM;\n  }\n else {\n    data.dashes=null;\n    data.lineStyle=SWT.LINE_SOLID;\n  }\n  XGCValues values=new XGCValues();\n  OS.XGetGCValues(xDisplay,handle,OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle,values);\n  int line_style=data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n  OS.XSetLineAttributes(xDisplay,handle,values.line_width,line_style,values.cap_style,values.join_style);\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    if (data.dashes != null) {\n      double[] cairoDashes=new double[data.dashes.length];\n      for (int i=0; i < dashes.length; i++) {\n        cairoDashes[i]=data.dashes[i];\n      }\n      Cairo.cairo_set_dash(cairo,cairoDashes,cairoDashes.length,0);\n    }\n else {\n      Cairo.cairo_set_dash(cairo,null,0,0);\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void getTransform(Transform transform){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (transform == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (transform.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    Cairo.cairo_matrix_copy(transform.handle,data.matrix);\n  }\n else {\n    transform.setElements(1,0,0,1,0,0);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n * @param color the new foreground color for the receiver\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (color == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (color.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  OS.XSetForeground(data.display,handle,color.handle.pixel);\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    XColor xColor=color.handle;\n    Cairo.cairo_set_rgb_color(cairo,(xColor.red & 0xFFFF) / (float)0xFFFF,(xColor.green & 0xFFFF) / (float)0xFFFF,(xColor.blue & 0xFFFF) / (float)0xFFFF);\n  }\n  data.foregroundPattern=null;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Invokes platform specific functionality to allocate a new GC handle.\n * <p>\n * <b>IMPORTANT:</b> This method is <em>not</em> part of the public\n * API for <code>Image</code>. It is marked public only so that it\n * can be shared within the packages provided by SWT. It is not\n * available on all platforms, and should never be called from\n * application code.\n * </p>\n * @param data the platform specific GC data \n * @return the platform specific GC handle\n */\npublic int internal_new_GC(GCData data){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (type != SWT.BITMAP || memGC != null) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int hDC=device.internal_new_GC(null);\n  int imageDC=OS.CreateCompatibleDC(hDC);\n  device.internal_dispose_GC(hDC,null);\n  if (imageDC == 0) {\n    SWT.error(SWT.ERROR_NO_HANDLES);\n  }\n  if (data != null) {\n    int mask=SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n    if ((data.style & mask) != 0) {\n      data.layout=(data.style & SWT.RIGHT_TO_LEFT) != 0 ? OS.LAYOUT_RTL : 0;\n    }\n else {\n      data.style|=SWT.LEFT_TO_RIGHT;\n    }\n    data.device=device;\n    data.image=this;\n    data.hFont=device.systemFont;\n  }\n  return imageDC;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 82,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the background pattern. The default value is <code>null</code>.\n * @param pattern the new background pattern\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Pattern\n * @since 3.1\n */\npublic void setBackgroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(false,false);\n  if (data.gdipBrush != 0) {\n    destroyGdipBrush(data.gdipBrush);\n  }\n  if (pattern != null) {\n    data.gdipBrush=Gdip.Brush_Clone(pattern.handle);\n  }\n else {\n    data.gdipBrush=0;\n  }\n  data.backgroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.4588235294117647,
        "accuracyCharacters" : 0.4357429718875502
      } ],
      "memberId" : "87130bd669e96b2a276ee2680a9a6796"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line join style to the argument, which must be one\n * of the constants <code>SWT.JOIN_MITER</code>, <code>SWT.JOIN_ROUND</code>,\n * or <code>SWT.JOIN_BEVEL</code>.\n * @param join the join style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineJoin(int join){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int joinStyle=0;\nswitch (join) {\ncase SWT.JOIN_MITER:\n    joinStyle=OS.PS_JOIN_MITER;\n  break;\ncase SWT.JOIN_ROUND:\njoinStyle=OS.PS_JOIN_ROUND;\nbreak;\ncase SWT.JOIN_BEVEL:\njoinStyle=OS.PS_JOIN_BEVEL;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nsetPen(-1,-1,-1,-1,joinStyle,data.dashes);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the background color. The background color is used\n * for fill operations and as the background color when text\n * is drawn.\n * @param color the new background color for the receiver\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setBackground(Color color){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (color == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (color.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  if (data.backgroundPattern != null) {\n    if (data.gdipBrush != 0) {\n      destroyGdipBrush(data.gdipBrush);\n      data.gdipBrush=0;\n    }\n    data.backgroundPattern=null;\n  }\n  if (OS.GetBkColor(handle) == color.handle) {\n    return;\n  }\n  data.background=color.handle;\n  OS.SetBkColor(handle,color.handle);\n  int newBrush=OS.CreateSolidBrush(color.handle);\n  OS.SelectObject(handle,newBrush);\n  if (data.hBrush != 0) {\n    OS.DeleteObject(data.hBrush);\n  }\n  data.hBrush=newBrush;\n  if (data.gdipBrush != 0) {\n    destroyGdipBrush(data.gdipBrush);\n    data.gdipBrush=0;\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 98,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n * @param antialias the anti-aliasing setting\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n * <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see #setAntialias()\n * @since 3.1\n */\npublic void setTextAntialias(int antialias){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int textMode=0;\nswitch (antialias) {\ncase SWT.DEFAULT:\n    textMode=Gdip.TextRenderingHintSystemDefault;\n  break;\ncase SWT.OFF:\ntextMode=Gdip.TextRenderingHintSingleBitPerPixelGridFit;\nbreak;\ncase SWT.ON:\nint[] type=new int[1];\nOS.SystemParametersInfo(OS.SPI_GETFONTSMOOTHINGTYPE,0,type,0);\nif (type[0] == OS.FE_FONTSMOOTHINGCLEARTYPE) {\ntextMode=Gdip.TextRenderingHintClearTypeGridFit;\n}\n else {\ntextMode=Gdip.TextRenderingHintAntiAliasGridFit;\n}\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ninitGdip(false,false);\nGdip.Graphics_SetTextRenderingHint(data.gdipGraphics,textMode);\n}\n",
        "accuracyTokens" : 0.4112903225806452,
        "accuracyCharacters" : 0.3155792276964048
      } ],
      "memberId" : "3138e6f9a55300d28a2c49e4243b61f2"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the foreground pattern. The default value is <code>null</code>.\n * @param pattern the new foreground pattern\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Pattern\n * @since 3.1\n */\npublic void setForegroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(false,false);\n  if (pattern != null) {\n    if (data.gdipPen != 0) {\n      Gdip.Pen_SetBrush(data.gdipPen,pattern.handle);\n    }\n  }\n else {\n    if (data.gdipPen != 0) {\n      Gdip.Pen_delete(data.gdipPen);\n      data.gdipPen=0;\n    }\n  }\n  data.foregroundPattern=pattern;\n}\n",
        "accuracyTokens" : 0.26282051282051283,
        "accuracyCharacters" : 0.29129886506935687
      } ],
      "memberId" : "e82be26b5083599db67cf513c561fdf0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's fill rule to the parameter, which must be one of\n * <code>SWT.FILL_EVEN_ODD</code> or <code>SWT.FILL_WINDING</code>.\n * @param rule the new fill rule\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.FILL_EVEN_ODD</code>\n * or <code>SWT.FILL_WINDING</code></li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1\n */\npublic void setFillRule(int rule){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (OS.IsWinCE) {\n    return;\n  }\n  int mode=OS.ALTERNATE;\nswitch (rule) {\ncase SWT.FILL_WINDING:\n    mode=OS.WINDING;\n  break;\ncase SWT.FILL_EVEN_ODD:\nmode=OS.ALTERNATE;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nOS.SetPolyFillMode(handle,mode);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the font which will be used by the receiver\n * to draw and measure text to the argument. If the\n * argument is null, then a default font appropriate\n * for the platform will be used instead.\n * @param font the new font for the receiver, or null to indicate a default font\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the font has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setFont(Font font){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (font == null) {\n    OS.SelectObject(handle,data.device.systemFont);\n  }\n else {\n    if (font.isDisposed()) {\n      SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    OS.SelectObject(handle,font.handle);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Copies a rectangular area of the receiver at the specified\n * position into the image, which must be of type <code>SWT.BITMAP</code>.\n * @param image the image to copy into\n * @param x the x coordinate in the receiver of the area to be copied\n * @param y the y coordinate in the receiver of the area to be copied\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image is not a bitmap or has been disposed</li> \n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void copyArea(Image image,int x,int y){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.type != SWT.BITMAP || image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  Device device=data.device;\n  int hDC=device.internal_new_GC(null);\n  Rectangle rect=image.getBounds();\n  int memHdc=OS.CreateCompatibleDC(hDC);\n  int hOldBitmap=OS.SelectObject(memHdc,image.handle);\n  OS.BitBlt(memHdc,0,0,rect.width,rect.height,handle,x,y,OS.SRCCOPY);\n  OS.SelectObject(memHdc,hOldBitmap);\n  OS.DeleteDC(memHdc);\n  device.internal_dispose_GC(hDC,null);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the area of the receiver which can be changed\n * by drawing operations to the path specified\n * by the argument.\n * @param path the clipping path.\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the path has been disposed</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Path\n * @since 3.1\n */\npublic void setClipping(Path path){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (path != null && path.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(false,false);\n  setClipping(0);\n  if (path != null) {\n    int mode=OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n    Gdip.GraphicsPath_SetFillMode(path.handle,mode);\n    Gdip.Graphics_SetClip(data.gdipGraphics,path.handle);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 99,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the transform that is currently being used by the receiver. If\n * the argument is <code>null</code>, the current transform is set to\n * the identity transform.\n * @param transform the transform to set\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Transform\n * @since 3.1\n */\npublic void setTransform(Transform transform){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (transform != null && transform.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(false,false);\n  if (transform != null) {\n    Gdip.Graphics_SetTransform(data.gdipGraphics,transform.handle);\n  }\n else {\n    int identity=Gdip.Matrix_new(1,0,0,1,0,0);\n    Gdip.Graphics_SetTransform(data.gdipGraphics,identity);\n    Gdip.Matrix_delete(identity);\n  }\n}\n",
        "accuracyTokens" : 0.10975609756097561,
        "accuracyCharacters" : 0.15447154471544716
      } ],
      "memberId" : "674189c6a33feeef0ccc77ff4bdabb0e"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the area of the receiver which can be changed\n * by drawing operations to the region specified\n * by the argument.\n * @param region the clipping region.\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the region has been disposed</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setClipping(Region region){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (region != null && region.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  setClipping(region != null ? region.handle : 0);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Draws the given image in the receiver at the specified\n * coordinates.\n * @param image the image to draw\n * @param x the x coordinate of where to draw\n * @param y the y coordinate of where to draw\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * <li>ERROR_INVALID_ARGUMENT - if the given coordinates are outside the bounds of the image</li>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES - if no handles are available to perform the operation</li>\n * </ul>\n */\npublic void drawImage(Image image,int x,int y){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  drawImage(image,0,0,-1,-1,x,y,-1,-1,true);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Fills the path described by the parameter.\n * @param path the path to fill\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Path\n * @since 3.1\n */\npublic void fillPath(Path path){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (path == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (path.handle == 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(false,true);\n  int mode=OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n  Gdip.GraphicsPath_SetFillMode(path.handle,mode);\n  Gdip.Graphics_FillPath(data.gdipGraphics,data.gdipBrush,path.handle);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the region managed by the argument to the current\n * clipping region of the receiver.\n * @param region the region to fill with the clipping region\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the region is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the region is disposed</li>\n * </ul>\t\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void getClipping(Region region){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (region == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (region.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  if (data.gdipGraphics != 0) {\n    int rgn=Gdip.Region_new();\n    Gdip.Graphics_GetClip(data.gdipGraphics,rgn);\n    int matrix=Gdip.Matrix_new(1,0,0,1,0,0);\n    int identity=Gdip.Matrix_new(1,0,0,1,0,0);\n    Gdip.Graphics_GetTransform(data.gdipGraphics,matrix);\n    Gdip.Graphics_SetTransform(data.gdipGraphics,identity);\n    int hRgn=Gdip.Region_GetHRGN(rgn,data.gdipGraphics);\n    Gdip.Graphics_SetTransform(data.gdipGraphics,matrix);\n    Gdip.Matrix_delete(identity);\n    Gdip.Matrix_delete(matrix);\n    OS.CombineRgn(region.handle,hRgn,0,OS.RGN_COPY);\n    Gdip.Region_delete(rgn);\n    return;\n  }\n  int result=OS.GetClipRgn(handle,region.handle);\n  if (result != 1) {\n    RECT rect=new RECT();\n    OS.GetClipBox(handle,rect);\n    OS.SetRectRgn(region.handle,rect.left,rect.top,rect.right,rect.bottom);\n  }\n  if (!OS.IsWinCE) {\n    int metaRgn=OS.CreateRectRgn(0,0,0,0);\n    if (OS.GetMetaRgn(handle,metaRgn) != 0) {\n      POINT pt=new POINT();\n      OS.GetWindowOrgEx(handle,pt);\n      OS.OffsetRgn(metaRgn,pt.x,pt.y);\n      OS.CombineRgn(region.handle,metaRgn,region.handle,OS.RGN_AND);\n    }\n    OS.DeleteObject(metaRgn);\n    int flags=0;\n    if (OS.WIN32_VERSION >= OS.VERSION(4,10)) {\n      flags=OS.GetLayout(handle);\n    }\n    int hwnd=data.hwnd;\n    if (hwnd != 0 && data.ps != null && (flags & OS.LAYOUT_RTL) == 0) {\n      int sysRgn=OS.CreateRectRgn(0,0,0,0);\n      if (OS.GetRandomRgn(handle,sysRgn,OS.SYSRGN) == 1) {\n        if (OS.IsWinNT) {\n          POINT pt=new POINT();\n          OS.MapWindowPoints(0,hwnd,pt,1);\n          OS.OffsetRgn(sysRgn,pt.x,pt.y);\n        }\n        OS.CombineRgn(region.handle,sysRgn,region.handle,OS.RGN_AND);\n      }\n      OS.DeleteObject(sysRgn);\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line cap style to the argument, which must be one\n * of the constants <code>SWT.CAP_FLAT</code>, <code>SWT.CAP_ROUND</code>,\n * or <code>SWT.CAP_SQUARE</code>.\n * @param cap the cap style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineCap(int cap){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int capStyle=0;\nswitch (cap) {\ncase SWT.CAP_ROUND:\n    capStyle=OS.PS_ENDCAP_ROUND;\n  break;\ncase SWT.CAP_FLAT:\ncapStyle=OS.PS_ENDCAP_FLAT;\nbreak;\ncase SWT.CAP_SQUARE:\ncapStyle=OS.PS_ENDCAP_SQUARE;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nsetPen(-1,-1,-1,capStyle,-1,data.dashes);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Copies a rectangular area from the source image into a (potentially\n * different sized) rectangular area in the receiver. If the source\n * and destination areas are of differing sizes, then the source\n * area will be stretched or shrunk to fit the destination area\n * as it is copied. The copy fails if any part of the source rectangle\n * lies outside the bounds of the source image, or if any of the width\n * or height arguments are negative.\n * @param image the source image\n * @param srcX the x coordinate in the source image to copy from\n * @param srcY the y coordinate in the source image to copy from\n * @param srcWidth the width in pixels to copy from the source\n * @param srcHeight the height in pixels to copy from the source\n * @param destX the x coordinate in the destination to copy to\n * @param destY the y coordinate in the destination to copy to\n * @param destWidth the width in pixels of the destination rectangle\n * @param destHeight the height in pixels of the destination rectangle\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * <li>ERROR_INVALID_ARGUMENT - if any of the width or height arguments are negative.\n * <li>ERROR_INVALID_ARGUMENT - if the source rectangle is not contained within the bounds of the source image</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES - if no handles are available to perform the operation</li>\n * </ul>\n */\npublic void drawImage(Image image,int srcX,int srcY,int srcWidth,int srcHeight,int destX,int destY,int destWidth,int destHeight){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) {\n    return;\n  }\n  if (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  drawImage(image,srcX,srcY,srcWidth,srcHeight,destX,destY,destWidth,destHeight,false);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 95,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's interpolation setting to the parameter, which\n * must be one of <code>SWT.DEFAULT</code>, <code>SWT.NONE</code>, \n * <code>SWT.LOW</code> or <code>SWT.HIGH</code>.\n * @param interpolation the new interpolation setting\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.DEFAULT</code>, \n * <code>SWT.NONE</code>, <code>SWT.LOW</code> or <code>SWT.HIGH</code>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1\n */\npublic void setInterpolation(int interpolation){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int mode=0;\nswitch (interpolation) {\ncase SWT.DEFAULT:\n    mode=Gdip.InterpolationModeDefault;\n  break;\ncase SWT.NONE:\nmode=Gdip.InterpolationModeNearestNeighbor;\nbreak;\ncase SWT.LOW:\nmode=Gdip.InterpolationModeLowQuality;\nbreak;\ncase SWT.HIGH:\nmode=Gdip.InterpolationModeHighQuality;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ninitGdip(false,false);\nGdip.Graphics_SetInterpolationMode(data.gdipGraphics,mode);\n}\n",
        "accuracyTokens" : 0.5252525252525253,
        "accuracyCharacters" : 0.4417808219178082
      } ],
      "memberId" : "49885cfc0e72d45dedfd9565cdedc55f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Draws the path described by the parameter.\n * @param path the path to draw\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Path\n * @since 3.1\n */\npublic void drawPath(Path path){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (path == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (path.handle == 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initGdip(true,false);\n  int gdipGraphics=data.gdipGraphics;\n  if (data.lineWidth == 0 || (data.lineWidth % 2) == 1) {\n    Gdip.Graphics_SetPixelOffsetMode(gdipGraphics,Gdip.PixelOffsetModeNone);\n  }\n  Gdip.Graphics_DrawPath(gdipGraphics,data.gdipPen,path.handle);\n  if (data.lineWidth == 0 || (data.lineWidth % 2) == 1) {\n    Gdip.Graphics_SetPixelOffsetMode(gdipGraphics,Gdip.PixelOffsetModeHalf);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 78,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing for all\n * <em>non-text drawing</em> operations.\n * @param antialias the anti-aliasing setting\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n * <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see #setTextAntialias()\n * @since 3.1\n */\npublic void setAntialias(int antialias){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int mode=0;\nswitch (antialias) {\ncase SWT.DEFAULT:\n    mode=Gdip.SmoothingModeDefault;\n  break;\ncase SWT.OFF:\nmode=Gdip.SmoothingModeNone;\nbreak;\ncase SWT.ON:\nmode=Gdip.SmoothingModeAntiAlias;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ninitGdip(false,false);\nGdip.Graphics_SetSmoothingMode(data.gdipGraphics,mode);\n}\n",
        "accuracyTokens" : 0.5795454545454546,
        "accuracyCharacters" : 0.4323770491803279
      } ],
      "memberId" : "d8a2ba24403db54b04ecc9f689655250"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line style to the argument, which must be one\n * of the constants <code>SWT.LINE_SOLID</code>, <code>SWT.LINE_DASH</code>,\n * <code>SWT.LINE_DOT</code>, <code>SWT.LINE_DASHDOT</code> or\n * <code>SWT.LINE_DASHDOTDOT</code>.\n * @param lineStyle the style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineStyle(int lineStyle){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int style=-1;\nswitch (lineStyle) {\ncase SWT.LINE_SOLID:\n    style=OS.PS_SOLID;\n  break;\ncase SWT.LINE_DASH:\nstyle=OS.PS_DASH;\nbreak;\ncase SWT.LINE_DOT:\nstyle=OS.PS_DOT;\nbreak;\ncase SWT.LINE_DASHDOT:\nstyle=OS.PS_DASHDOT;\nbreak;\ncase SWT.LINE_DASHDOTDOT:\nstyle=OS.PS_DASHDOTDOT;\nbreak;\ncase SWT.LINE_CUSTOM:\nstyle=data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nOS.SetBkMode(handle,style == OS.PS_SOLID ? OS.OPAQUE : OS.TRANSPARENT);\nsetPen(-1,-1,style,-1,-1,data.dashes);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line dash style to the argument.\n * @param dashes the dash style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if any of the values in the array is less than or equal 0</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineDash(int[] dashes){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (dashes != null && dashes.length > 0) {\n    data.dashes=new int[dashes.length];\n    for (int i=0; i < dashes.length; i++) {\n      int dash=dashes[i];\n      if (dash <= 0) {\n        SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n      }\n      data.dashes[i]=dash;\n    }\n  }\n else {\n    data.dashes=null;\n  }\n  setPen(-1,-1,data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE,-1,-1,data.dashes);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the parameter to the transform that is currently being\n * used by the receiver.\n * @param transform the destination to copy the transform into\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @see Transform\n * @since 3.1\n */\npublic void getTransform(Transform transform){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (transform == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (transform.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int gdipGraphics=data.gdipGraphics;\n  if (gdipGraphics != 0) {\n    Gdip.Graphics_GetTransform(gdipGraphics,transform.handle);\n  }\n else {\n    transform.setElements(1,0,0,1,0,0);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n * @param color the new foreground color for the receiver\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (color == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (color.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  if (data.foregroundPattern != null) {\n    if (data.gdipPen != 0) {\n      Gdip.Pen_delete(data.gdipPen);\n      data.gdipPen=0;\n    }\n    data.foregroundPattern=null;\n  }\n  if (OS.GetTextColor(handle) == color.handle) {\n    return;\n  }\n  data.foreground=color.handle;\n  OS.SetTextColor(handle,color.handle);\n  setPen(color.handle,-1,-1,-1,-1,data.dashes);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  data.backgroundPattern=pattern;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line join style to the argument, which must be one\n * of the constants <code>SWT.JOIN_MITER</code>, <code>SWT.JOIN_ROUND</code>,\n * or <code>SWT.JOIN_BEVEL</code>.\n * @param join the join style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineJoin(int join){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int join_style=0, cairo_style=0;\nswitch (join) {\ncase SWT.JOIN_MITER:\n    join_style=OS.GDK_JOIN_MITER;\n  cairo_style=Cairo.CAIRO_LINE_JOIN_MITER;\nbreak;\ncase SWT.JOIN_ROUND:\njoin_style=OS.GDK_JOIN_ROUND;\ncairo_style=Cairo.CAIRO_LINE_JOIN_ROUND;\nbreak;\ncase SWT.JOIN_BEVEL:\njoin_style=OS.GDK_JOIN_BEVEL;\ncairo_style=Cairo.CAIRO_LINE_JOIN_BEVEL;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nGdkGCValues values=new GdkGCValues();\nOS.gdk_gc_get_values(handle,values);\nint line_style=data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\nOS.gdk_gc_set_line_attributes(handle,values.line_width,line_style,values.cap_style,join_style);\nint cairo=data.cairo;\nif (cairo != 0) {\nCairo.cairo_set_line_join(cairo,cairo_style);\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the background color. The background color is used\n * for fill operations and as the background color when text\n * is drawn.\n * @param color the new background color for the receiver\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setBackground(Color color){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (color == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (color.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  OS.gdk_gc_set_background(handle,color.handle);\n  data.backgroundPattern=null;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\nswitch (antialias) {\ncase SWT.DEFAULT:\n    break;\ncase SWT.OFF:\n  break;\ncase SWT.ON:\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ndata.textAntialias=antialias;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (pattern != null && pattern.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  if (pattern != null) {\n    Cairo.cairo_set_pattern(cairo,pattern.handle);\n  }\n else {\n    GdkGCValues values=new GdkGCValues();\n    OS.gdk_gc_get_values(handle,values);\n    GdkColor color=new GdkColor();\n    color.pixel=values.foreground_pixel;\n    int colormap=OS.gdk_colormap_get_system();\n    OS.gdk_colormap_query_color(colormap,color.pixel,color);\n    Cairo.cairo_set_rgb_color(cairo,(color.red & 0xFFFF) / (float)0xFFFF,(color.green & 0xFFFF) / (float)0xFFFF,(color.blue & 0xFFFF) / (float)0xFFFF);\n  }\n  data.foregroundPattern=pattern;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "public void setFillRule(int rule){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int cairo_mode=Cairo.CAIRO_FILL_RULE_EVEN_ODD;\nswitch (rule) {\ncase SWT.FILL_WINDING:\n    cairo_mode=Cairo.CAIRO_FILL_RULE_WINDING;\n  break;\ncase SWT.FILL_EVEN_ODD:\ncairo_mode=Cairo.CAIRO_FILL_RULE_EVEN_ODD;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ninitCairo();\nint cairo=data.cairo;\nif (cairo != 0) {\nCairo.cairo_set_fill_rule(cairo,cairo_mode);\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the font which will be used by the receiver\n * to draw and measure text to the argument. If the\n * argument is null, then a default font appropriate\n * for the platform will be used instead.\n * @param font the new font for the receiver, or null to indicate a default font\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the font has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setFont(Font font){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (font == null) {\n    font=data.device.systemFont;\n  }\n  if (font.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int fontHandle=data.font=font.handle;\n  OS.pango_layout_set_font_description(data.layout,fontHandle);\n  data.stringWidth=data.stringHeight=-1;\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    setCairoFont(cairo,fontHandle);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Copies a rectangular area of the receiver at the specified\n * position into the image, which must be of type <code>SWT.BITMAP</code>.\n * @param image the image to copy into\n * @param x the x coordinate in the receiver of the area to be copied\n * @param y the y coordinate in the receiver of the area to be copied\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image is not a bitmap or has been disposed</li> \n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void copyArea(Image image,int x,int y){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.type != SWT.BITMAP || image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  Rectangle rect=image.getBounds();\n  int gdkGC=OS.gdk_gc_new(image.pixmap);\n  if (gdkGC == 0) {\n    SWT.error(SWT.ERROR_NO_HANDLES);\n  }\n  OS.gdk_gc_set_subwindow(gdkGC,OS.GDK_INCLUDE_INFERIORS);\n  OS.gdk_draw_drawable(image.pixmap,gdkGC,data.drawable,x,y,0,0,rect.width,rect.height);\n  OS.g_object_unref(gdkGC);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (transform != null && transform.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  Cairo.cairo_concat_matrix(cairo,data.inverseMatrix);\n  if (transform != null) {\n    Cairo.cairo_concat_matrix(cairo,transform.handle);\n    Cairo.cairo_matrix_copy(data.matrix,transform.handle);\n    Cairo.cairo_matrix_copy(data.inverseMatrix,transform.handle);\n    Cairo.cairo_matrix_invert(data.inverseMatrix);\n  }\n else {\n    Cairo.cairo_matrix_set_identity(data.matrix);\n    Cairo.cairo_matrix_set_identity(data.inverseMatrix);\n  }\n  int clipRgn=data.clipRgn;\n  if (clipRgn != 0) {\n    int matrix=data.inverseMatrix;\n    int newRgn=OS.gdk_region_new();\n    int[] nRects=new int[1];\n    int[] rects=new int[1];\n    OS.gdk_region_get_rectangles(clipRgn,rects,nRects);\n    GdkRectangle rect=new GdkRectangle();\n    int[] pointArray=new int[8];\n    double[] x=new double[1], y=new double[1];\n    for (int i=0; i < nRects[0]; i++) {\n      OS.memmove(rect,rects[0] + (i * GdkRectangle.sizeof),GdkRectangle.sizeof);\n      x[0]=rect.x;\n      y[0]=rect.y;\n      Cairo.cairo_matrix_transform_point(matrix,x,y);\n      pointArray[0]=(int)Math.round(x[0]);\n      pointArray[1]=(int)Math.round(y[0]);\n      x[0]=rect.x + rect.width;\n      y[0]=rect.y;\n      Cairo.cairo_matrix_transform_point(matrix,x,y);\n      pointArray[2]=(int)Math.round(x[0]);\n      pointArray[3]=(int)Math.round(y[0]);\n      x[0]=rect.x + rect.width;\n      y[0]=rect.y + rect.height;\n      Cairo.cairo_matrix_transform_point(matrix,x,y);\n      pointArray[4]=(int)Math.round(x[0]);\n      pointArray[5]=(int)Math.round(y[0]);\n      x[0]=rect.x;\n      y[0]=rect.y + rect.height;\n      Cairo.cairo_matrix_transform_point(matrix,x,y);\n      pointArray[6]=(int)Math.round(x[0]);\n      pointArray[7]=(int)Math.round(y[0]);\n      int polyRgn=OS.gdk_region_polygon(pointArray,pointArray.length / 2,OS.GDK_EVEN_ODD_RULE);\n      OS.gdk_region_union(newRgn,polyRgn);\n      OS.gdk_region_destroy(polyRgn);\n    }\n    OS.gdk_region_destroy(clipRgn);\n    data.clipRgn=newRgn;\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the area of the receiver which can be changed\n * by drawing operations to the region specified\n * by the argument.\n * @param region the clipping region.\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the region has been disposed</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setClipping(Region region){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (region != null && region.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  setClipping(region != null ? region.handle : 0);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Draws the given image in the receiver at the specified\n * coordinates.\n * @param image the image to draw\n * @param x the x coordinate of where to draw\n * @param y the y coordinate of where to draw\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * <li>ERROR_INVALID_ARGUMENT - if the given coordinates are outside the bounds of the image</li>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES - if no handles are available to perform the operation</li>\n * </ul>\n */\npublic void drawImage(Image image,int x,int y){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  drawImage(image,0,0,-1,-1,x,y,-1,-1,true);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void fillPath(Path path){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (path == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (path.handle == 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  GdkGCValues values=new GdkGCValues();\n  OS.gdk_gc_get_values(handle,values);\n  GdkColor color=new GdkColor();\n  color.pixel=values.background_pixel;\n  int cairo=data.cairo;\n  int colormap=OS.gdk_colormap_get_system();\n  OS.gdk_colormap_query_color(colormap,color.pixel,color);\n  Cairo.cairo_save(cairo);\n  if (data.backgroundPattern != null) {\n    Cairo.cairo_set_pattern(cairo,data.backgroundPattern.handle);\n  }\n else {\n    Cairo.cairo_set_rgb_color(cairo,(color.red & 0xFFFF) / (float)0xFFFF,(color.green & 0xFFFF) / (float)0xFFFF,(color.blue & 0xFFFF) / (float)0xFFFF);\n  }\n  Cairo.cairo_add_path(cairo,path.handle);\n  Cairo.cairo_fill(cairo);\n  Cairo.cairo_restore(cairo);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the region managed by the argument to the current\n * clipping region of the receiver.\n * @param region the region to fill with the clipping region\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the region is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the region is disposed</li>\n * </ul>\t\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void getClipping(Region region){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (region == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (region.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int hRegion=region.handle;\n  OS.gdk_region_subtract(hRegion,hRegion);\n  int clipRgn=data.clipRgn;\n  if (clipRgn == 0) {\n    int[] width=new int[1], height=new int[1];\n    OS.gdk_drawable_get_size(data.drawable,width,height);\n    GdkRectangle rect=new GdkRectangle();\n    rect.x=rect.y=0;\n    rect.width=width[0];\n    rect.height=height[0];\n    OS.gdk_region_union_with_rect(hRegion,rect);\n  }\n else {\n    OS.gdk_region_union(hRegion,clipRgn);\n    if (!isIdentity(data.matrix)) {\n      return;\n    }\n  }\n  if (data.damageRgn != 0) {\n    OS.gdk_region_intersect(hRegion,data.damageRgn);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line cap style to the argument, which must be one\n * of the constants <code>SWT.CAP_FLAT</code>, <code>SWT.CAP_ROUND</code>,\n * or <code>SWT.CAP_SQUARE</code>.\n * @param cap the cap style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineCap(int cap){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  int cap_style=0, cairo_style=0;\nswitch (cap) {\ncase SWT.CAP_ROUND:\n    cap_style=OS.GDK_CAP_ROUND;\n  cairo_style=Cairo.CAIRO_LINE_CAP_ROUND;\nbreak;\ncase SWT.CAP_FLAT:\ncap_style=OS.GDK_CAP_BUTT;\ncairo_style=Cairo.CAIRO_LINE_CAP_BUTT;\nbreak;\ncase SWT.CAP_SQUARE:\ncap_style=OS.GDK_CAP_PROJECTING;\ncairo_style=Cairo.CAIRO_LINE_CAP_SQUARE;\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\nGdkGCValues values=new GdkGCValues();\nOS.gdk_gc_get_values(handle,values);\nint line_style=data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\nOS.gdk_gc_set_line_attributes(handle,values.line_width,line_style,cap_style,values.join_style);\nint cairo=data.cairo;\nif (cairo != 0) {\nCairo.cairo_set_line_cap(cairo,cairo_style);\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Copies a rectangular area from the source image into a (potentially\n * different sized) rectangular area in the receiver. If the source\n * and destination areas are of differing sizes, then the source\n * area will be stretched or shrunk to fit the destination area\n * as it is copied. The copy fails if any part of the source rectangle\n * lies outside the bounds of the source image, or if any of the width\n * or height arguments are negative.\n * @param image the source image\n * @param srcX the x coordinate in the source image to copy from\n * @param srcY the y coordinate in the source image to copy from\n * @param srcWidth the width in pixels to copy from the source\n * @param srcHeight the height in pixels to copy from the source\n * @param destX the x coordinate in the destination to copy to\n * @param destY the y coordinate in the destination to copy to\n * @param destWidth the width in pixels of the destination rectangle\n * @param destHeight the height in pixels of the destination rectangle\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the image is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * <li>ERROR_INVALID_ARGUMENT - if any of the width or height arguments are negative.\n * <li>ERROR_INVALID_ARGUMENT - if the source rectangle is not contained within the bounds of the source image</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @exception SWTError <ul>\n * <li>ERROR_NO_HANDLES - if no handles are available to perform the operation</li>\n * </ul>\n */\npublic void drawImage(Image image,int srcX,int srcY,int srcWidth,int srcHeight,int destX,int destY,int destWidth,int destHeight){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) {\n    return;\n  }\n  if (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  if (image == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (image.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  drawImage(image,srcX,srcY,srcWidth,srcHeight,destX,destY,destWidth,destHeight,false);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\nswitch (interpolation) {\ncase SWT.DEFAULT:\ncase SWT.NONE:\ncase SWT.LOW:\ncase SWT.HIGH:\n    break;\ndefault :\n  SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ninitCairo();\ndata.interpolation=interpolation;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void drawPath(Path path){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (path == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (path.handle == 0) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  initCairo();\n  int cairo=data.cairo;\n  Cairo.cairo_save(cairo);\n  float offset=data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n  Cairo.cairo_translate(cairo,offset,offset);\n  Cairo.cairo_add_path(cairo,path.handle);\n  Cairo.cairo_stroke(cairo);\n  Cairo.cairo_restore(cairo);\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\nswitch (antialias) {\ncase SWT.DEFAULT:\n    break;\ncase SWT.OFF:\n  break;\ncase SWT.ON:\ninitCairo();\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ndata.antialias=antialias;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line style to the argument, which must be one\n * of the constants <code>SWT.LINE_SOLID</code>, <code>SWT.LINE_DASH</code>,\n * <code>SWT.LINE_DOT</code>, <code>SWT.LINE_DASHDOT</code> or\n * <code>SWT.LINE_DASHDOTDOT</code>.\n * @param lineStyle the style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if the style is not valid</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineStyle(int lineStyle){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  GdkGCValues values=new GdkGCValues();\n  OS.gdk_gc_get_values(handle,values);\n  int[] dashes=null;\n  int width=values.line_width;\nswitch (lineStyle) {\ncase SWT.LINE_SOLID:\n    break;\ncase SWT.LINE_DASH:\n  dashes=width != 0 ? LINE_DASH : LINE_DASH_ZERO;\nbreak;\ncase SWT.LINE_DOT:\ndashes=width != 0 ? LINE_DOT : LINE_DOT_ZERO;\nbreak;\ncase SWT.LINE_DASHDOT:\ndashes=width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\nbreak;\ncase SWT.LINE_DASHDOTDOT:\ndashes=width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\nbreak;\ncase SWT.LINE_CUSTOM:\ndashes=data.dashes;\nif (dashes == null) {\nlineStyle=SWT.LINE_SOLID;\n}\nbreak;\ndefault :\nSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}\ndata.lineStyle=lineStyle;\nOS.gdk_gc_set_line_attributes(handle,values.line_width,dashes != null ? OS.GDK_LINE_ON_OFF_DASH : OS.GDK_LINE_SOLID,values.cap_style,values.join_style);\nif (dashes != null) {\nbyte[] dash_list=new byte[dashes.length];\nfor (int i=0; i < dash_list.length; i++) {\ndash_list[i]=(byte)(width == 0 ? dashes[i] : dashes[i] * width);\n}\nOS.gdk_gc_set_dashes(handle,0,dash_list,dash_list.length);\n}\nint cairo=data.cairo;\nif (cairo != 0) {\nif (dashes != null) {\ndouble[] cairoDashes=new double[dashes.length];\nfor (int i=0; i < cairoDashes.length; i++) {\ncairoDashes[i]=width == 0 ? dashes[i] : dashes[i] * width;\n}\nCairo.cairo_set_dash(cairo,cairoDashes,cairoDashes.length,0);\n}\n else {\nCairo.cairo_set_dash(cairo,null,0,0);\n}\n}\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the receiver's line dash style to the argument.\n * @param dashes the dash style to be used for drawing lines\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_INVALID_ARGUMENT - if any of the values in the array is less than or equal 0</li>\n * </ul> \n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * @since 3.1 \n */\npublic void setLineDash(int[] dashes){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (dashes != null && dashes.length > 0) {\n    byte[] dash_list=new byte[dashes.length];\n    for (int i=0; i < dashes.length; i++) {\n      int dash=dashes[i];\n      if (dash <= 0) {\n        SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n      }\n      dash_list[i]=(byte)dash;\n    }\n    OS.gdk_gc_set_dashes(handle,0,dash_list,dash_list.length);\n    data.dashes=new int[dashes.length];\n    System.arraycopy(dashes,0,data.dashes,0,dashes.length);\n    data.lineStyle=SWT.LINE_CUSTOM;\n  }\n else {\n    data.dashes=null;\n    data.lineStyle=SWT.LINE_SOLID;\n  }\n  GdkGCValues values=new GdkGCValues();\n  OS.gdk_gc_get_values(handle,values);\n  int line_style=data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n  OS.gdk_gc_set_line_attributes(handle,values.line_width,line_style,values.cap_style,values.join_style);\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    if (data.dashes != null) {\n      double[] cairoDashes=new double[data.dashes.length];\n      for (int i=0; i < dashes.length; i++) {\n        cairoDashes[i]=data.dashes[i];\n      }\n      Cairo.cairo_set_dash(cairo,cairoDashes,cairoDashes.length,0);\n    }\n else {\n      Cairo.cairo_set_dash(cairo,null,0,0);\n    }\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void getTransform(Transform transform){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (transform == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (transform.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    Cairo.cairo_matrix_copy(transform.handle,data.matrix);\n  }\n else {\n    transform.setElements(1,0,0,1,0,0);\n  }\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "",
      "commitId" : "",
      "fileName" : "/src/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : -1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : "/** \n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n * @param color the new foreground color for the receiver\n * @exception IllegalArgumentException <ul>\n * <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n * <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n * <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color){\n  if (handle == 0) {\n    SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n  }\n  if (data.cairo == 0 && v$_0_ == u$_2_QualifiedName_NullLiteral_) {\n    return;\n  }\n  if (color == null) {\n    SWT.error(SWT.ERROR_NULL_ARGUMENT);\n  }\n  if (color.isDisposed()) {\n    SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n  }\n  OS.gdk_gc_set_foreground(handle,color.handle);\n  int cairo=data.cairo;\n  if (cairo != 0) {\n    GdkColor gdkColor=color.handle;\n    Cairo.cairo_set_rgb_color(cairo,(gdkColor.red & 0xFFFF) / (float)0xFFFF,(gdkColor.green & 0xFFFF) / (float)0xFFFF,(gdkColor.blue & 0xFFFF) / (float)0xFFFF);\n  }\n  data.foregroundPattern=null;\n}\n",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ],
      "memberId" : ""
    } ],
    "foundMembers" : 12,
    "numberOfRecommendationSets" : 67,
    "precision" : 0.1791044776119403,
    "recall" : 0.8,
    "accuracyTokensMin" : 0.6147779646452562,
    "accuracyCharactersMin" : 0.5092031400053343,
    "accuracyTokensMax" : 0.6147779646452562,
    "accuracyCharactersMax" : 0.5092031400053343,
    "patternOriginal" : "",
    "patternModified" : "",
    "patternCreationTimeInNanoSec" : 1058767895,
    "patternUseTimeInNanoSec" : 5114402216
  } ]
}
