{
  "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationFile",
  "results" : [ {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "77644",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2219be33a5e53110d26153b9b761bd7a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1004, 4017, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 1, -28842, 11866, -22204, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -19285, -19467, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 6,
          "inserts" : 30,
          "deletes" : 3,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Returns the extended start position of the given node. Unlike\n\t * {@link ASTNode#getStartPosition()} and {@link ASTNode#getLength()},\n\t * the extended source range may include comments and whitespace\n\t * immediately before or after the normal source range for the node.\n\t * \n\t * @param node the node\n\t * @return the 0-based character index, or <code>-1</code>\n\t *    if no source position information is recorded for this node\n\t * @see #getExtendedLength(ASTNode)\n\t * @since 3.0\n\t */\n\tpublic int getExtendedStartPosition(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Returns the extended start position of the given node. Unlike\n\t * {@link ASTNode#getStartPosition()} and {@link ASTNode#getLength()},\n\t * the extended source range may include comments and whitespace\n\t * immediately before or after the normal source range for the node.\n\t * \n\t * @param node the node\n\t * @return the 0-based character index, or <code>-1</code>\n\t *    if no source position information is recorded for this node\n\t * @see #getExtendedLength(ASTNode)\n\t * @since 3.0\n\t */\n\tpublic int getExtendedStartPosition(ASTNode node)",
      "diff" : "-\t\tif (this.leadingComments != null) {-\t\t\tint[] range = (int[]) this.leadingComments.get(node);+\t\tif (this.leadingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.leadingPtr; i++) {+\t\t\t\tif (this.leadingNodes[i] == node) range = this.leadingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "438070cdfb4af35597a933152c446e4e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1004, 4017, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, 1, -28842, 277, 8986, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -32186, -21685, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 6,
          "inserts" : 30,
          "deletes" : 3,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "methodModified" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}-\t\t\t\tif (range[0] == -1 && range[1] == -1) {-\t\t\t\t\tASTNode parent = node.getParent();-\t\t\t\t\tif (parent != null && ((parent.getFlags() & ASTNode.ORIGINAL) != 0)) {-\t\t\t\t\t\treturn getExtendedEnd(parent);-\t\t\t\t\t}-\t\t\t\t} else {-\t\t\t\t\tComment lastComment = this.comments[range[1]];-\t\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();-\t\t\t\t}+\t\t\t\tComment lastComment = this.comments[range[1]];+\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "88261d164b5728e03fcc1bfe9b1ead72",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1004, 4017, 1002, 4029, 2000, 2000, 3007, 1004, 4070, 29277, -31184, 5162, -10958, 1002, 4120, 2699, 2000, 2997, 1006, 1002, 4114, 1529, 2000, 3002, 1027, 4070, -15189, 2218, 0, 105, 1002, 4029, 2109, 2000, 3002, 1004, 4017, 1004, 4070, -15189, 2218, 0, 105, 1002, 4017, 2090, 2000, 3001, 1002, 4070, 1541, 2000, 3005, 1002, 4063, 2679, 2000, 3003, 1000, 4132, 4063, 1004, 4070, -32552, 31185, -19285, -19467, 1004, 4070, 29805, -27439, 11866, -22204, 1006, 1007, 4088, 4061, 1002, 4071, 2274, 2000, 3003, 1002, 4018, 2611, 2000, 3004, 1002, 4017, 1999, 2000, 3002, 1002, 4070, 1410, 2000, 3003, 1002, 4120, 2000, 2000, 3004, 1002, 4017, 2001, 2000, 3004, 1002, 4063, 1541, 2000, 3003, 1002, 4070, 2461, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1002, 4070, 2270, 2000, 3007, 1007, 4077, 4027, 1002, 4070, 2010, 2000, 3002, 1002, 4076, 2601, 2000, 3001, 1002, 4063, 2530, 2000, 3004, 1000, 4132, 4063, 1002, 4070, 2530, 2000, 3003, 1000, 4070, 0, 105, 4076, 1001, 4070, 29277, -31184, 1001, 4016, 1001, 4023, 1001, 4063, 1001, 4070, 1, -28842, 1001, 4070, 51, -20990, 1001, 4115, 954, 31289, 960, -9170, 1, -28594, 1001, 4118, 1001, 4029, 1001, 4029, 1001, 4118, 1001, 4029, 1001, 4018, 1001, 4828, 979, -20136, 220, 8068, 1001, 4023, 1001, 4063, 1001, 4070, 10690, 11168, 1001, 4070, 220, 8068, 1001, 4017, 1001, 4008, 1001, 4023, 1008, 4061, 1008, 4027, 1008, 4061, 1008, 4047, 1001, 4023, 1001, 4070, -20314, -19540 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 65,
          "moves" : 22,
          "inserts" : 8,
          "deletes" : 28,
          "updates" : 7,
          "aligns" : 0
        },
        "treeSize" : 14
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Return all leading comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no leading comment\n\t */\n\tComment[] getLeadingComments(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Return all leading comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no leading comment\n\t */\n\tComment[] getLeadingComments(ASTNode node)",
      "diff" : "-\t\tif (this.leadingComments != null) {-\t\t\tint[] range = (int[]) this.leadingComments.get(node);+\t\tif (this.leadingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.leadingPtr; i++) {+\t\t\t\tif (this.leadingNodes[i] == node) range = this.leadingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "34bdb6c29264026f056d746e4b513b9a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1004, 4017, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, 1, -28842, 277, 8986, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -32186, -21685, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 6,
          "inserts" : 30,
          "deletes" : 3,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Return all trailing comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no trailing comment\n\t */\n\tComment[] getTrailingComments(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2219be33a5e53110d26153b9b761bd7a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1004, 4017, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 29277, -31184, 5162, -10958, 1004, 4070, 1, -28842, 11866, -22204, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -19285, -19467, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 6,
          "inserts" : 30,
          "deletes" : 3,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Returns the extended start position of the given node. Unlike\n\t * {@link ASTNode#getStartPosition()} and {@link ASTNode#getLength()},\n\t * the extended source range may include comments and whitespace\n\t * immediately before or after the normal source range for the node.\n\t * \n\t * @param node the node\n\t * @return the 0-based character index, or <code>-1</code>\n\t *    if no source position information is recorded for this node\n\t * @see #getExtendedLength(ASTNode)\n\t * @since 3.0\n\t */\n\tpublic int getExtendedStartPosition(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Returns the extended start position of the given node. Unlike\n\t * {@link ASTNode#getStartPosition()} and {@link ASTNode#getLength()},\n\t * the extended source range may include comments and whitespace\n\t * immediately before or after the normal source range for the node.\n\t * \n\t * @param node the node\n\t * @return the 0-based character index, or <code>-1</code>\n\t *    if no source position information is recorded for this node\n\t * @see #getExtendedLength(ASTNode)\n\t * @since 3.0\n\t */\n\tpublic int getExtendedStartPosition(ASTNode node)",
      "diff" : "-\t\tif (this.leadingComments != null) {-\t\t\tint[] range = (int[]) this.leadingComments.get(node);+\t\tif (this.leadingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.leadingPtr; i++) {+\t\t\t\tif (this.leadingNodes[i] == node) range = this.leadingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "438070cdfb4af35597a933152c446e4e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1004, 4017, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, 1, -28842, 277, 8986, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -32186, -21685, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 6,
          "inserts" : 30,
          "deletes" : 3,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "methodModified" : "\n\n\t/*\n\t * Returns the extended end position of the given node.\n\t */\n\tpublic int getExtendedEnd(ASTNode node)",
      "diff" : "-\t\tif (this.trailingComments != null) {-\t\t\tint[] range = (int[]) this.trailingComments.get(node);+\t\tif (this.trailingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {+\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];+\t\t\t}-\t\t\t\tif (range[0] == -1 && range[1] == -1) {-\t\t\t\t\tASTNode parent = node.getParent();-\t\t\t\t\tif (parent != null && ((parent.getFlags() & ASTNode.ORIGINAL) != 0)) {-\t\t\t\t\t\treturn getExtendedEnd(parent);-\t\t\t\t\t}-\t\t\t\t} else {-\t\t\t\t\tComment lastComment = this.comments[range[1]];-\t\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();-\t\t\t\t}+\t\t\t\tComment lastComment = this.comments[range[1]];+\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "88261d164b5728e03fcc1bfe9b1ead72",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1004, 4017, 1002, 4029, 2000, 2000, 3007, 1004, 4070, 29277, -31184, 5162, -10958, 1002, 4120, 2699, 2000, 2997, 1006, 1002, 4114, 1529, 2000, 3002, 1027, 4070, -15189, 2218, 0, 105, 1002, 4029, 2109, 2000, 3002, 1004, 4017, 1004, 4070, -15189, 2218, 0, 105, 1002, 4017, 2090, 2000, 3001, 1002, 4070, 1541, 2000, 3005, 1002, 4063, 2679, 2000, 3003, 1000, 4132, 4063, 1004, 4070, -32552, 31185, -19285, -19467, 1004, 4070, 29805, -27439, 11866, -22204, 1006, 1007, 4088, 4061, 1002, 4071, 2274, 2000, 3003, 1002, 4018, 2611, 2000, 3004, 1002, 4017, 1999, 2000, 3002, 1002, 4070, 1410, 2000, 3003, 1002, 4120, 2000, 2000, 3004, 1002, 4017, 2001, 2000, 3004, 1002, 4063, 1541, 2000, 3003, 1002, 4070, 2461, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1002, 4070, 2270, 2000, 3007, 1007, 4077, 4027, 1002, 4070, 2010, 2000, 3002, 1002, 4076, 2601, 2000, 3001, 1002, 4063, 2530, 2000, 3004, 1000, 4132, 4063, 1002, 4070, 2530, 2000, 3003, 1000, 4070, 0, 105, 4076, 1001, 4070, 29277, -31184, 1001, 4016, 1001, 4023, 1001, 4063, 1001, 4070, 1, -28842, 1001, 4070, 51, -20990, 1001, 4115, 954, 31289, 960, -9170, 1, -28594, 1001, 4118, 1001, 4029, 1001, 4029, 1001, 4118, 1001, 4029, 1001, 4018, 1001, 4828, 979, -20136, 220, 8068, 1001, 4023, 1001, 4063, 1001, 4070, 10690, 11168, 1001, 4070, 220, 8068, 1001, 4017, 1001, 4008, 1001, 4023, 1008, 4061, 1008, 4027, 1008, 4061, 1008, 4047, 1001, 4023, 1001, 4070, -20314, -19540 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 65,
          "moves" : 22,
          "inserts" : 8,
          "deletes" : 28,
          "updates" : 7,
          "aligns" : 0
        },
        "treeSize" : 14
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n\t/**\n\t * Return all leading comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no leading comment\n\t */\n\tComment[] getLeadingComments(ASTNode node)",
      "methodModified" : "\n\n\t/**\n\t * Return all leading comments of a given node.\n\t * @param node\n\t * @return an array of Comment or null if there's no leading comment\n\t */\n\tComment[] getLeadingComments(ASTNode node)",
      "diff" : "-\t\tif (this.leadingComments != null) {-\t\t\tint[] range = (int[]) this.leadingComments.get(node);+\t\tif (this.leadingPtr >= 0) {+\t\t\tint[] range = null;+\t\t\tfor (int i=0; range==null && i<=this.leadingPtr; i++) {+\t\t\t\tif (this.leadingNodes[i] == node) range = this.leadingIndexes[i];+\t\t\t}",
      "commitMsg" : "77644, 737847378477644",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "34bdb6c29264026f056d746e4b513b9a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
          "commitId2" : "b43b2427c7b970b1fbbb18c36881f31743b7cd83",
          "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1004, 4017, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, -2318, 18202, 19879, -22008, 1004, 4070, 1, -28842, 277, 8986, 1000, 4029, 4017, 1007, 4088, 4061, 1000, 4071, 4088, 1002, 4114, 1529, 2000, 3002, 1000, 4029, 4087, 1000, 4070, 0, 105, 4067, 1000, 4018, 4088, 1000, 4017, 4018, 1002, 4120, 2000, 2000, 2997, 1000, 4070, 1652, 14653, 4017, 1000, 4017, 4018, 1002, 4063, 1541, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 1940, 2000, 3001, 1000, 4076, 4017, 1000, 4063, 4076, 1000, 4132, 4063, 1000, 4070, -32186, -21685, 4063, 1000, 4070, 0, 105, 4076, 1007, 4077, 4027, 1000, 4070, 1652, 14653, 4077, 1000, 4076, 4077, 1002, 4063, 2530, 2000, 3000, 1000, 4132, 4063, 1000, 4070, 0, 105, 4076, 1000, 4120, 4087, 1001, 4016, 1001, 4023, 1001, 4115, 954, 31289, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 6,
          "inserts" : 30,
          "deletes" : 3,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
      "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t\tif (this.trailingPtr >= 0) {\n\t\t\tint[] range = null;\n\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {\n\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];\n\t\t\t}\n\t\t\tif (range != null) {\n\t\t\t\tint length = range[1]-range[0]+1;\n\t\t\t\tComment[] leadComments = new Comment[length];\n\t\t\t\tSystem.arraycopy(this.comments, range[0], leadComments, 0, length);\n\t\t\t\treturn  leadComments;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}",
        "accuracyTokens" : 0.9607843137254902,
        "accuracyCharacters" : 0.9627906976744186
      } ],
      "memberId" : "34bdb6c29264026f056d746e4b513b9a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
      "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t\tif (this.trailingPtr >= 0) {\n\t\t\tint[] range = null;\n\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {\n\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];\n\t\t\t}\n\t\t\tif (range != null) {\n\t\t\t\tint length = range[1]-range[0]+1;\n\t\t\t\tComment[] trailComments = new Comment[length];\n\t\t\t\tSystem.arraycopy(this.comments, range[0], trailComments, 0, length);\n\t\t\t\treturn  trailComments;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "2219be33a5e53110d26153b9b761bd7a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
      "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t\tif (this.trailingPtr >= 0) {\n\t\t\tint[] range = null;\n\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {\n\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];\n\t\t\t}\n\t\t\tif (range != null) {\n\t\t\t\treturn  this.comments[range[0]].getStartPosition() ;\n\t\t\t}\n\t\t}\n\t\treturn node.getStartPosition();\n\t}",
        "accuracyTokens" : 0.9452054794520548,
        "accuracyCharacters" : 0.95
      } ],
      "memberId" : "438070cdfb4af35597a933152c446e4e"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "e178d64eb65916b8b54353dd9e6bcf5b085bf212",
      "fileName" : "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultCommentMapper.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t\tint end = node.getStartPosition() + node.getLength();\n\t\tif (this.trailingPtr >= 0) {\n\t\t\tint[] range = null;\n\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {\n\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];\n\t\t\t}\n\t\t\tif (range != null) {\n\t\t\t\tif (range[0] == -1 && range[1] == -1) {\n\t\t\t\t\tASTNode parent = node.getParent();\n\t\t\t\t\tif (parent != null && ((parent.getFlags() & ASTNode.ORIGINAL) != 0)) {\n\t\t\t\t\t\treturn getExtendedEnd(parent);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tComment lastComment = this.comments[range[1]];\n\t\t\t\t\tend = lastComment.getStartPosition() + lastComment.getLength();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn end-1;\n\t}",
        "accuracyTokens" : 0.6824324324324325,
        "accuracyCharacters" : 0.6511627906976745
      } ],
      "memberId" : "88261d164b5728e03fcc1bfe9b1ead72"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.8971055564024943,
    "accuracyCharactersMin" : 0.8909883720930234,
    "patternOriginal" : "\n\t\t//# match (original, (trailingComments)) {\n\t\tif (this.trailingComments != null) {\n\t\t\tint[] range = (int[]) this.trailingComments.get(node);\n\t\t\tif (range != null)\n\t\t\t\t//# wildcard stmt(ARES0);\n\t\t}\n\t\t//# wildcard expr(ARES1, null, 1)\n\t\treturn null;\n\t\t//# }",
    "patternModified" : "\n\t\t//# match (modified) {\n\t\tif (this.trailingPtr >= 0) {\n\t\t\tint[] range = null;\n\t\t\tfor (int i=0; range==null && i<=this.trailingPtr; i++) {\n\t\t\t\tif (this.trailingNodes[i] == node) range = this.trailingIndexes[i];\n\t\t\t}\n\t\t\tif (range != null)\n\t\t\t\t//# use (ARES0);\n\t\t}\n\t\t//# use (ARES1, null, 1)\n\t\treturn null;\n\t\t//# }",
    "patternCreationTimeInNanoSec" : 690459232,
    "patternUseTimeInNanoSec" : 16918313096,
    "accuracyTokensMax" : 0.8971055564024943,
    "accuracyCharactersMax" : 0.8909883720930234
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "82429",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar()",
      "methodModified" : "\npublic final int getNextChar()",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\treturn -1;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);--\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t\treturn this.currentCharacter;--\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t\t\tgetNextUnicodeChar();+\t\t} else {-\t\t\treturn this.currentCharacter;+\t\treturn this.currentCharacter;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6a0f1c695deb39b2bcec99a2ade86d73",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1006, 1006, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1027, 4070, -24471, 6270, 0, 101, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4061, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, 14640, -32345, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 183,
          "moves" : 6,
          "inserts" : 3,
          "deletes" : 173,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextChar(char testedChar)",
      "methodModified" : "\npublic final boolean getNextChar(char testedChar)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-+\t\tthis.unicodeAsBackSlash = false;+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "60fbb4d926ba94565f7e1e8b9a24ba27",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 17,
          "methodNumber2" : 18
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4063, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1000, 4119, 4077, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4017, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 178,
          "moves" : 10,
          "inserts" : 5,
          "deletes" : 162,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "methodModified" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "diff" : "-\t\t} else {-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t//need the unicode buffer+\t\tif (this.withoutUnicodePtr == 0) {+\t\t\t//buffer all the entries that have been left aside....+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);+\t\t}+\t\t//fill the buffer with the char+\t\tunicodeStoreAt(++this.withoutUnicodePtr);",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "aecc2344a786c1771ddbb7a9ef9ef667",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 24
        },
        "pattern" : [ 1006, 1006, 1006, 1008, 4061 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 4,
          "moves" : 3,
          "inserts" : 0,
          "deletes" : 1,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "methodModified" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "diff" : "-\t\tint c1, c2, c3, c4;-\t\tint unicodeSize = 6;-\t\tthis.currentPosition++;-\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\tthis.currentPosition++;-\t\t\tunicodeSize++;-\t\t}--\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t|| c1 < 0)-\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);-\t\t}--\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\tif (CharOperation.isWhitespace(this.currentCharacter))-\t\t\treturn true;--\t\t//buffer the new char which is not a white space-\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t//this.withoutUnicodePtr == 1 is true here-\t\treturn false;+\t\tgetNextUnicodeChar();+\t\treturn CharOperation.isWhitespace(this.currentCharacter);",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "975d644a692378a3469a9d5db5c4341d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 27,
          "methodNumber2" : 30
        },
        "pattern" : [ 1002, 4023, 1839, 2001, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1002, 4023, 2200, 2000, 3000, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -24471, 6270, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4061, 1008, 4130, 1001, 4112, 1001, 4828, 979, -20136, -8963, -29348, 1001, 4070, -28989, 29611, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4119, 1008, 4027, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 160,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 156,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "methodModified" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (this.currentCharacter == testedChar1) {+\t\t\t\tresult = 0;+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {-\t\t\t\treturn 2;+\t\t\t\tthis.withoutUnicodePtr--;+\t\t\t\tresult = -1;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (this.currentCharacter == testedChar1)-\t\t\t\tresult = 0;-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (this.currentCharacter == testedChar1)+\t\t} else {+\t\t\tif (this.currentCharacter == testedChar1) {-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {+\t\t\t\tthis.currentPosition = temp;+\t\t\t\treturn -1;+\t\t\t}+\t\tthis.currentPosition = temp;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "efedd176357ab18507c882a7b92b9551",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 18,
          "methodNumber2" : 19
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4077, 2440, 2002, 3003, 1002, 4118, 2540, 2000, 2997, 1002, 4029, 2710, 2000, 2998, 1004, 4070, 0, 3119, -14259, -14307, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1002, 4070, 2000, 2000, 3004, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3068, 2000, 3004, 1007, 4061, 4027, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2998, 1007, 4061, 4027, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4047, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 186,
          "moves" : 25,
          "inserts" : 6,
          "deletes" : 153,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "methodModified" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8a605201cefafc8f97c63ab0eb8c7020",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 19,
          "methodNumber2" : 20
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "methodModified" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "deda425938a202d1691dfc2661f9b00c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 20,
          "methodNumber2" : 21
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "methodModified" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "diff" : "+\tint temp2 = this.withoutUnicodePtr;-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {+\t\t} else {+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;+\t\tthis.withoutUnicodePtr = temp2;+\t\treturn false;+\t} catch(InvalidInputException e) {+\t\tthis.currentPosition = temp;+\t\tthis.withoutUnicodePtr = temp2;",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b7edf6bec1f8971949eec0ce9f13346",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 22
        },
        "pattern" : [ 1006, 1002, 4063, 2110, 2000, 3004, 1002, 4070, 1961, 2000, 3002, 1000, 4070, 1682, 14046, 4067, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3004, 1002, 4063, 1399, 2000, 3001, 1002, 4070, 1861, 2000, 3003, 1002, 4070, 2141, 2000, 3006, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3002, 1002, 4063, 2010, 2000, 3004, 1002, 4070, 2140, 2000, 3006, 1004, 4070, -13680, 26651, -30406, 31161, 1002, 4077, 2440, 2001, 3006, 1002, 4063, 2600, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3006, 1004, 4070, 0, 3120, 1682, 14046, 1027, 4070, -24471, 6270, 0, 101, 1004, 4070, 0, 3118, 1682, 14046, 1000, 4134, 4128, 1002, 4071, 2731, 2000, 3002, 1002, 4061, 3069, 2000, 3003, 1002, 4077, 2440, 2001, 3007, 1002, 4063, 1590, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3007, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3118, 1001, 4070, 0, 3120, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -13680, 26651, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4063, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4090, 1001, 4063, 1001, 4132, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4070, -11091, -9463 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 171,
          "moves" : 27,
          "inserts" : 4,
          "deletes" : 136,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar()",
      "methodModified" : "\npublic final int getNextChar()",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\treturn -1;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);--\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t\treturn this.currentCharacter;--\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t\t\tgetNextUnicodeChar();+\t\t} else {-\t\t\treturn this.currentCharacter;+\t\treturn this.currentCharacter;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a58b82d4fd42914a1ea773902a4c8801",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1006, 1006, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1027, 4070, -24471, 6270, 0, 101, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4061, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, 14640, -32345, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 183,
          "moves" : 6,
          "inserts" : 3,
          "deletes" : 173,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextChar(char testedChar)",
      "methodModified" : "\npublic final boolean getNextChar(char testedChar)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-+\t\tthis.unicodeAsBackSlash = false;+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "952c1a1303a96c20a49e162a53101d3c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 17,
          "methodNumber2" : 18
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4063, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1000, 4119, 4077, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4017, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 178,
          "moves" : 10,
          "inserts" : 5,
          "deletes" : 162,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "methodModified" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (this.currentCharacter == testedChar1) {+\t\t\t\tresult = 0;+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {-\t\t\t\treturn 2;+\t\t\t\tthis.withoutUnicodePtr--;+\t\t\t\tresult = -1;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (this.currentCharacter == testedChar1)-\t\t\t\tresult = 0;-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (this.currentCharacter == testedChar1)+\t\t} else {+\t\t\tif (this.currentCharacter == testedChar1) {-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {+\t\t\t\tthis.currentPosition = temp;+\t\t\t\treturn -1;+\t\t\t}+\t\tthis.currentPosition = temp;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8e04cccdb227cf7b8a142afb94e9bfe2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 18,
          "methodNumber2" : 19
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4077, 2440, 2002, 3003, 1002, 4118, 2540, 2000, 2997, 1002, 4029, 2710, 2000, 2998, 1004, 4070, 0, 3119, -14259, -14307, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1002, 4070, 2000, 2000, 3004, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3068, 2000, 3004, 1007, 4061, 4027, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2998, 1007, 4061, 4027, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4047, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 186,
          "moves" : 25,
          "inserts" : 6,
          "deletes" : 153,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "methodModified" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "43c48c3ccac8484345aa37c37d8ee2da",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 19,
          "methodNumber2" : 20
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "methodModified" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "23c40d354e8ee0bba244b05440982fe9",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 20,
          "methodNumber2" : 21
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "methodModified" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "diff" : "+\tint temp2 = this.withoutUnicodePtr;-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {+\t\t} else {+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;+\t\tthis.withoutUnicodePtr = temp2;+\t\treturn false;+\t} catch(InvalidInputException e) {+\t\tthis.currentPosition = temp;+\t\tthis.withoutUnicodePtr = temp2;",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6670177973121cc15529d1174fd6c29f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 22
        },
        "pattern" : [ 1006, 1002, 4063, 2110, 2000, 3004, 1002, 4070, 1961, 2000, 3002, 1000, 4070, 1682, 14046, 4067, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3004, 1002, 4063, 1399, 2000, 3001, 1002, 4070, 1861, 2000, 3003, 1002, 4070, 2141, 2000, 3006, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3002, 1002, 4063, 2010, 2000, 3004, 1002, 4070, 2140, 2000, 3006, 1004, 4070, -13680, 26651, -30406, 31161, 1002, 4077, 2440, 2001, 3006, 1002, 4063, 2600, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3006, 1004, 4070, 0, 3120, 1682, 14046, 1027, 4070, -24471, 6270, 0, 101, 1004, 4070, 0, 3118, 1682, 14046, 1000, 4134, 4128, 1002, 4071, 2731, 2000, 3002, 1002, 4061, 3069, 2000, 3003, 1002, 4077, 2440, 2001, 3007, 1002, 4063, 1590, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3007, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3118, 1001, 4070, 0, 3120, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -13680, 26651, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4063, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4090, 1001, 4063, 1001, 4132, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4070, -11091, -9463 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 171,
          "moves" : 27,
          "inserts" : 4,
          "deletes" : 136,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "methodModified" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "diff" : "-\t\t} else {-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t//need the unicode buffer+\t\tif (this.withoutUnicodePtr == 0) {+\t\t\t//buffer all the entries that have been left aside....+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);+\t\t}+\t\t//fill the buffer with the char+\t\tunicodeStoreAt(++this.withoutUnicodePtr);",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "54b4132bfcb1f628f5734c005678bfd3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 24
        },
        "pattern" : [ 1006, 1006, 1006, 1008, 4061 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 4,
          "moves" : 3,
          "inserts" : 0,
          "deletes" : 1,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "methodModified" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "diff" : "-\t\tint c1, c2, c3, c4;-\t\tint unicodeSize = 6;-\t\tthis.currentPosition++;-\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\tthis.currentPosition++;-\t\t\tunicodeSize++;-\t\t}--\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t|| c1 < 0)-\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);-\t\t}--\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\tif (CharOperation.isWhitespace(this.currentCharacter))-\t\t\treturn true;--\t\t//buffer the new char which is not a white space-\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t//this.withoutUnicodePtr == 1 is true here-\t\treturn false;+\t\tgetNextUnicodeChar();+\t\treturn CharOperation.isWhitespace(this.currentCharacter);",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e2cb7468f096ba0a730e7cb5bd3db98b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 27,
          "methodNumber2" : 30
        },
        "pattern" : [ 1002, 4023, 1839, 2001, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1002, 4023, 2200, 2000, 3000, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -24471, 6270, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4061, 1008, 4130, 1001, 4112, 1001, 4828, 979, -20136, -8963, -29348, 1001, 4070, -28989, 29611, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4119, 1008, 4027, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 160,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 156,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar()",
      "methodModified" : "\npublic final int getNextChar()",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\treturn -1;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);--\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t\treturn this.currentCharacter;--\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t\t\tgetNextUnicodeChar();+\t\t} else {-\t\t\treturn this.currentCharacter;+\t\treturn this.currentCharacter;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6a0f1c695deb39b2bcec99a2ade86d73",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1006, 1006, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1027, 4070, -24471, 6270, 0, 101, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4061, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, 14640, -32345, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 183,
          "moves" : 6,
          "inserts" : 3,
          "deletes" : 173,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextChar(char testedChar)",
      "methodModified" : "\npublic final boolean getNextChar(char testedChar)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-+\t\tthis.unicodeAsBackSlash = false;+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "60fbb4d926ba94565f7e1e8b9a24ba27",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 17,
          "methodNumber2" : 18
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4063, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1000, 4119, 4077, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4017, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 178,
          "moves" : 10,
          "inserts" : 5,
          "deletes" : 162,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "methodModified" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "diff" : "-\t\t} else {-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t//need the unicode buffer+\t\tif (this.withoutUnicodePtr == 0) {+\t\t\t//buffer all the entries that have been left aside....+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);+\t\t}+\t\t//fill the buffer with the char+\t\tunicodeStoreAt(++this.withoutUnicodePtr);",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "aecc2344a786c1771ddbb7a9ef9ef667",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 24
        },
        "pattern" : [ 1006, 1006, 1006, 1008, 4061 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 4,
          "moves" : 3,
          "inserts" : 0,
          "deletes" : 1,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "methodModified" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "diff" : "-\t\tint c1, c2, c3, c4;-\t\tint unicodeSize = 6;-\t\tthis.currentPosition++;-\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\tthis.currentPosition++;-\t\t\tunicodeSize++;-\t\t}--\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t|| c1 < 0)-\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);-\t\t}--\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\tif (CharOperation.isWhitespace(this.currentCharacter))-\t\t\treturn true;--\t\t//buffer the new char which is not a white space-\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t//this.withoutUnicodePtr == 1 is true here-\t\treturn false;+\t\tgetNextUnicodeChar();+\t\treturn CharOperation.isWhitespace(this.currentCharacter);",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "975d644a692378a3469a9d5db5c4341d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 27,
          "methodNumber2" : 30
        },
        "pattern" : [ 1002, 4023, 1839, 2001, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1002, 4023, 2200, 2000, 3000, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -24471, 6270, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4061, 1008, 4130, 1001, 4112, 1001, 4828, 979, -20136, -8963, -29348, 1001, 4070, -28989, 29611, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4119, 1008, 4027, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 160,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 156,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "methodModified" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (this.currentCharacter == testedChar1) {+\t\t\t\tresult = 0;+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {-\t\t\t\treturn 2;+\t\t\t\tthis.withoutUnicodePtr--;+\t\t\t\tresult = -1;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (this.currentCharacter == testedChar1)-\t\t\t\tresult = 0;-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (this.currentCharacter == testedChar1)+\t\t} else {+\t\t\tif (this.currentCharacter == testedChar1) {-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {+\t\t\t\tthis.currentPosition = temp;+\t\t\t\treturn -1;+\t\t\t}+\t\tthis.currentPosition = temp;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "efedd176357ab18507c882a7b92b9551",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 18,
          "methodNumber2" : 19
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4077, 2440, 2002, 3003, 1002, 4118, 2540, 2000, 2997, 1002, 4029, 2710, 2000, 2998, 1004, 4070, 0, 3119, -14259, -14307, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1002, 4070, 2000, 2000, 3004, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3068, 2000, 3004, 1007, 4061, 4027, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2998, 1007, 4061, 4027, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4047, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 186,
          "moves" : 25,
          "inserts" : 6,
          "deletes" : 153,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "methodModified" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8a605201cefafc8f97c63ab0eb8c7020",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 19,
          "methodNumber2" : 20
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "methodModified" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "deda425938a202d1691dfc2661f9b00c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 20,
          "methodNumber2" : 21
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "methodModified" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "diff" : "+\tint temp2 = this.withoutUnicodePtr;-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {+\t\t} else {+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;+\t\tthis.withoutUnicodePtr = temp2;+\t\treturn false;+\t} catch(InvalidInputException e) {+\t\tthis.currentPosition = temp;+\t\tthis.withoutUnicodePtr = temp2;",
      "commitMsg" : "HEAD - Fix for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b7edf6bec1f8971949eec0ce9f13346",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
          "commitId2" : "a387db32f06bcc44b6b47e5aa021853a1cfee33c",
          "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 22
        },
        "pattern" : [ 1006, 1002, 4063, 2110, 2000, 3004, 1002, 4070, 1961, 2000, 3002, 1000, 4070, 1682, 14046, 4067, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3004, 1002, 4063, 1399, 2000, 3001, 1002, 4070, 1861, 2000, 3003, 1002, 4070, 2141, 2000, 3006, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3002, 1002, 4063, 2010, 2000, 3004, 1002, 4070, 2140, 2000, 3006, 1004, 4070, -13680, 26651, -30406, 31161, 1002, 4077, 2440, 2001, 3006, 1002, 4063, 2600, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3006, 1004, 4070, 0, 3120, 1682, 14046, 1027, 4070, -24471, 6270, 0, 101, 1004, 4070, 0, 3118, 1682, 14046, 1000, 4134, 4128, 1002, 4071, 2731, 2000, 3002, 1002, 4061, 3069, 2000, 3003, 1002, 4077, 2440, 2001, 3007, 1002, 4063, 1590, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3007, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3118, 1001, 4070, 0, 3120, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -13680, 26651, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4063, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4090, 1001, 4063, 1001, 4132, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4070, -11091, -9463 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 171,
          "moves" : 27,
          "inserts" : 4,
          "deletes" : 136,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar()",
      "methodModified" : "\npublic final int getNextChar()",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\treturn -1;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);--\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t\treturn this.currentCharacter;--\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t\t\tgetNextUnicodeChar();+\t\t} else {-\t\t\treturn this.currentCharacter;+\t\treturn this.currentCharacter;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a58b82d4fd42914a1ea773902a4c8801",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1006, 1006, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1027, 4070, -24471, 6270, 0, 101, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4061, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, 14640, -32345, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 183,
          "moves" : 6,
          "inserts" : 3,
          "deletes" : 173,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextChar(char testedChar)",
      "methodModified" : "\npublic final boolean getNextChar(char testedChar)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;-\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-+\t\tthis.unicodeAsBackSlash = false;+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "952c1a1303a96c20a49e162a53101d3c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 17,
          "methodNumber2" : 18
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4063, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1000, 4119, 4077, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4017, 1001, 4066, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 178,
          "moves" : 10,
          "inserts" : 5,
          "deletes" : 162,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "methodModified" : "\npublic final int getNextChar(char testedChar1, char testedChar2)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (this.currentCharacter == testedChar1) {+\t\t\t\tresult = 0;+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {-\t\t\t\treturn 2;+\t\t\t\tthis.withoutUnicodePtr--;+\t\t\t\tresult = -1;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (this.currentCharacter == testedChar1)-\t\t\t\tresult = 0;-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (this.currentCharacter == testedChar1)+\t\t} else {+\t\t\tif (this.currentCharacter == testedChar1) {-\t\t\telse-\t\t\t\tif (this.currentCharacter == testedChar2)-\t\t\t\t\tresult = 1;-\t\t\t\telse {-\t\t\t\t\tthis.currentPosition = temp;-\t\t\t\t\treturn -1;-\t\t\t\t}+\t\t\t} else if (this.currentCharacter == testedChar2) {+\t\t\t\tresult = 1;+\t\t\t} else {+\t\t\t\tthis.currentPosition = temp;+\t\t\t\treturn -1;+\t\t\t}+\t\tthis.currentPosition = temp;+\t\treturn -1;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8e04cccdb227cf7b8a142afb94e9bfe2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 18,
          "methodNumber2" : 19
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4077, 2440, 2002, 3003, 1002, 4118, 2540, 2000, 2997, 1002, 4029, 2710, 2000, 2998, 1004, 4070, 0, 3119, -14259, -14307, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1006, 1002, 4070, 2000, 2000, 3000, 1006, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1002, 4070, 2000, 2000, 3004, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3068, 2000, 3004, 1007, 4061, 4027, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2998, 1007, 4061, 4027, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4047, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4023, 1001, 4070, 14410, -6313 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 186,
          "moves" : 25,
          "inserts" : 6,
          "deletes" : 153,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "methodModified" : "\npublic final boolean getNextCharAsDigit() throws InvalidInputException",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "43c48c3ccac8484345aa37c37d8ee2da",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 19,
          "methodNumber2" : 20
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "methodModified" : "\npublic final boolean getNextCharAsDigit(int radix)",
      "diff" : "-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t\tgetNextUnicodeChar();+\t\t\t\tthis.withoutUnicodePtr--;--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {+\t\t} else {+\t\tthis.currentPosition = temp;+\t\treturn false;+\t} catch(InvalidInputException e) {",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "23c40d354e8ee0bba244b05440982fe9",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 20,
          "methodNumber2" : 21
        },
        "pattern" : [ 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1006, 1002, 4070, 2000, 2000, 3000, 1002, 4132, 2000, 2000, 3000, 1027, 4070, -24471, 6270, 0, 101, 1006, 1002, 4070, 2000, 2000, 3003, 1002, 4132, 2000, 2000, 3003, 1000, 4134, 4128, 1002, 4071, 2731, 1999, 3002, 1002, 4061, 3069, 2000, 3003, 1007, 4084, 4061, 1002, 4063, 1660, 2000, 2999, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 1, -28594, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4132, 1001, 4070, 13350, 16299, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 12,
          "inserts" : 4,
          "deletes" : 157,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "methodModified" : "\npublic boolean getNextCharAsJavaIdentifierPart()",
      "diff" : "+\tint temp2 = this.withoutUnicodePtr;-\t\t\t//-------------unicode traitement -------------\t\t\tint c1, c2, c3, c4;-\t\t\tint unicodeSize = 6;-\t\t\tthis.currentPosition++;-\t\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\t\tthis.currentPosition++;-\t\t\t\tunicodeSize++;-\t\t\t}--\t\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t\t|| c1 < 0)-\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {+\t\t\tgetNextUnicodeChar();+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;--\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {-\t\t\t\tthis.currentPosition = temp;-\t\t\t\treturn false;-\t\t\t}--\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t    unicodeStoreAt(++this.withoutUnicodePtr);-\t\t} //-------------end unicode traitement---------------\t\telse {-\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {+\t\t} else {+\t\t\tif (!isJavaIdentifierPart(this.currentCharacter)) {+\t\t\t\tthis.withoutUnicodePtr = temp2;+\t\tthis.withoutUnicodePtr = temp2;+\t\treturn false;+\t} catch(InvalidInputException e) {+\t\tthis.currentPosition = temp;+\t\tthis.withoutUnicodePtr = temp2;",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6670177973121cc15529d1174fd6c29f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 22
        },
        "pattern" : [ 1006, 1002, 4063, 2110, 2000, 3004, 1002, 4070, 1961, 2000, 3002, 1000, 4070, 1682, 14046, 4067, 1002, 4023, 1839, 2000, 3007, 1002, 4070, 1560, 2000, 3001, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3004, 1002, 4063, 1399, 2000, 3001, 1002, 4070, 1861, 2000, 3003, 1002, 4070, 2141, 2000, 3006, 1002, 4070, 1599, 2000, 3001, 1002, 4077, 2440, 2001, 3002, 1002, 4063, 2010, 2000, 3004, 1002, 4070, 2140, 2000, 3006, 1004, 4070, -13680, 26651, -30406, 31161, 1002, 4077, 2440, 2001, 3006, 1002, 4063, 2600, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3006, 1004, 4070, 0, 3120, 1682, 14046, 1027, 4070, -24471, 6270, 0, 101, 1004, 4070, 0, 3118, 1682, 14046, 1000, 4134, 4128, 1002, 4071, 2731, 2000, 3002, 1002, 4061, 3069, 2000, 3003, 1002, 4077, 2440, 2001, 3007, 1002, 4063, 1590, 2000, 3002, 1002, 4070, 2000, 2000, 3002, 1002, 4070, 2001, 2000, 3007, 1000, 4828, 979, -20136, -8963, -29348, 4068, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3118, 1001, 4070, 0, 3120, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -13680, 26651, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4063, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4090, 1001, 4063, 1001, 4132, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, 13350, 16299, 1008, 4027, 1001, 4017, 1001, 4029, 1008, 4061, 1008, 4023, 1001, 4070, 11394, -15123, 1001, 4137, 1001, 4137, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4070, -24471, 6270, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4070, -11091, -9463 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 171,
          "moves" : 27,
          "inserts" : 4,
          "deletes" : 136,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 17
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "methodModified" : "\npublic final void getNextUnicodeChar()\n\tthrows InvalidInputException",
      "diff" : "-\t\t} else {-\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\t\t//need the unicode buffer-\t\t\tif (this.withoutUnicodePtr == 0) {-\t\t\t\t//buffer all the entries that have been left aside....-\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);-\t\t\t}-\t\t\t//fill the buffer with the char-\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);+\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);+\t\t//need the unicode buffer+\t\tif (this.withoutUnicodePtr == 0) {+\t\t\t//buffer all the entries that have been left aside....+\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);+\t\t}+\t\t//fill the buffer with the char+\t\tunicodeStoreAt(++this.withoutUnicodePtr);",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "54b4132bfcb1f628f5734c005678bfd3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 24
        },
        "pattern" : [ 1006, 1006, 1006, 1008, 4061 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 4,
          "moves" : 3,
          "inserts" : 0,
          "deletes" : 1,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "methodModified" : "\npublic final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException",
      "diff" : "-\t\tint c1, c2, c3, c4;-\t\tint unicodeSize = 6;-\t\tthis.currentPosition++;-\t\twhile (this.source[this.currentPosition] == 'u') {-\t\t\tthis.currentPosition++;-\t\t\tunicodeSize++;-\t\t}--\t\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15-\t\t\t|| c1 < 0)-\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)-\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)-\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0)) {-\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);-\t\t}--\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);-\t\tif (CharOperation.isWhitespace(this.currentCharacter))-\t\t\treturn true;--\t\t//buffer the new char which is not a white space-\t\tunicodeStoreAt(++this.withoutUnicodePtr);-\t\t//this.withoutUnicodePtr == 1 is true here-\t\treturn false;+\t\tgetNextUnicodeChar();+\t\treturn CharOperation.isWhitespace(this.currentCharacter);",
      "commitMsg" : "HEAD - Update PublicScanner for 82429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e2cb7468f096ba0a730e7cb5bd3db98b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
          "commitId1" : "c83f12517cdac51319ba031385bd9a380905c315",
          "commitId2" : "3230c94014e69f2e2750889e5eaac5c1e552ded1",
          "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
          "methodNumber1" : 27,
          "methodNumber2" : 30
        },
        "pattern" : [ 1002, 4023, 1839, 2001, 3007, 1002, 4070, 1560, 2000, 3001, 1006, 1002, 4023, 2200, 2000, 3000, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 3119, 1001, 4070, 0, 3120, 1001, 4070, 0, 3121, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -24471, 6270, 1001, 4029, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4109, 1001, 4017, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4066, 1008, 4061, 1008, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4090, 1001, 4070, -24471, 6270, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1008, 4027, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3118, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3120, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4020, 1001, 4017, 1001, 4077, 1001, 4070, 0, 3121, 1001, 4023, 1001, 4063, 1001, 4070, -11091, -9463, 1001, 4070, -8033, -1830, 1001, 4076, 1001, 4063, 1001, 4132, 1001, 4070, -13680, 26651, 1001, 4090, 1001, 4063, 1001, 4132, 1001, 4070, -19740, 12738, 1001, 4029, 1001, 4017, 1001, 4070, 0, 3121, 1001, 4029, 1008, 4061, 1008, 4130, 1001, 4112, 1001, 4828, 979, -20136, -8963, -29348, 1001, 4070, -28989, 29611, 1008, 4077, 1001, 4063, 1001, 4132, 1001, 4070, -24291, 13744, 1001, 4016, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4137, 1001, 4039, 1001, 4070, 0, 3118, 1001, 4029, 1001, 4070, 0, 3119, 1001, 4029, 1001, 4070, 0, 3120, 1001, 4029, 1001, 4070, 0, 3121, 1001, 4114, 960, -9170, 0, 3311, 1001, 4119, 1008, 4027, 1008, 4023, 1001, 4070, 14410, -6313, 1001, 4118, 1001, 4063, 1001, 4132, 1001, 4070, -30406, 31161, 1008, 4047, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 160,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 156,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\tif (temp < this.cursorLocation && this.cursorLocation < this.currentPosition-1){\n\t\t\t\tthrow new InvalidCursorLocation(InvalidCursorLocation.NO_COMPLETION_INSIDE_UNICODE);\n\t\t\t}\n\t\t\t// store the current unicode, only if we did not pass the cursor location\n\t\t\t// Note: this does not handle cases where the cursor is in the middle of a unicode\n\t\t\tif ((this.completionIdentifier != null)\n\t\t\t\t|| (this.startPosition <= this.cursorLocation+1 && this.cursorLocation >= this.currentPosition-1)){\n\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\t}\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.withoutUnicodePtr != 0){\n\t\t\t\t// store the current unicode, only if we did not pass the cursor location\n\t\t\t\t// Note: this does not handle cases where the cursor is in the middle of a unicode\n\t\t\t\tif ((this.completionIdentifier != null)\n\t\t\t\t\t\t|| (this.startPosition <= this.cursorLocation+1 && this.cursorLocation >= this.currentPosition-1)){\n\t\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\n\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn this.currentCharacter;\n\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tthis.unicodeAsBackSlash = false;\n\t\t\tif (this.withoutUnicodePtr != 0) {\n\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\t}\n\t\t\treturn this.currentCharacter;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\treturn -1;\n\t}\n}",
        "accuracyTokens" : 0.5126050420168067,
        "accuracyCharacters" : 0.42046718576195774
      } ],
      "memberId" : "6a0f1c695deb39b2bcec99a2ade86d73"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is == to the testedChar\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\n\tif (this.currentPosition >= this.source.length) { // handle the obvious case upfront\n\t\tthis.unicodeAsBackSlash = false;\n\t\treturn false;\n\t}\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (this.currentCharacter != testedChar) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (this.currentCharacter != testedChar) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.unicodeAsBackSlash = false;\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.unicodeAsBackSlash = false;\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.6404494382022472,
        "accuracyCharacters" : 0.6992437463641652
      } ],
      "memberId" : "60fbb4d926ba94565f7e1e8b9a24ba27"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//INT 0 : testChar1 \\\\\\\\///\\\\\\\\ 1 : testedChar2 \\\\\\\\///\\\\\\\\ -1 : others\n\t//test can be done with (x==0) for the first and (x>0) for the second\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is == to the testedChar1/2\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn -1;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tint result;\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (this.currentCharacter == testedChar1)\n\t\t\t\tresult = 0;\n\t\t\telse\n\t\t\t\tif (this.currentCharacter == testedChar2)\n\t\t\t\t\tresult = 1;\n\t\t\t\telse {\n\t\t\t\t\tthis.currentPosition = temp;\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn result;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (this.currentCharacter == testedChar1)\n\t\t\t\tresult = 0;\n\t\t\telse\n\t\t\t\tif (this.currentCharacter == testedChar2)\n\t\t\t\t\tresult = 1;\n\t\t\t\telse {\n\t\t\t\t\tthis.currentPosition = temp;\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn result;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn -1;\n\t}\n}",
        "accuracyTokens" : 0.6612903225806451,
        "accuracyCharacters" : 0.7343584305408272
      } ],
      "memberId" : "efedd176357ab18507c882a7b92b9551"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a digit\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (!isDigit(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (!isDigit(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.632258064516129,
        "accuracyCharacters" : 0.6898817345597897
      } ],
      "memberId" : "8a605201cefafc8f97c63ab0eb8c7020"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a digit base on radix\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (Character.digit(this.currentCharacter, radix) == -1) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (Character.digit(this.currentCharacter, radix) == -1) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.6545454545454545,
        "accuracyCharacters" : 0.700507614213198
      } ],
      "memberId" : "deda425938a202d1691dfc2661f9b00c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a JavaIdentifierPart\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.5220125786163522,
        "accuracyCharacters" : 0.6379093198992444
      } ],
      "memberId" : "8b7edf6bec1f8971949eec0ce9f13346"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//VOID\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\n\ttry {\n\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\t} catch (ArrayIndexOutOfBoundsException e) {\n\t\tthis.currentPosition--;\n\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);\n\t}\n}",
        "accuracyTokens" : 0.1407766990291262,
        "accuracyCharacters" : 0.3344549125168237
      } ],
      "memberId" : "aecc2344a786c1771ddbb7a9ef9ef667"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode. Jump over the next whiteSpace\n\t//making startPosition pointing on the next available char\n\t//On false, the currentCharacter is filled up with a potential\n\t//correct char\n\n\ttry {\n\t\tthis.wasAcr = false;\n\n\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\tif (CharOperation.isWhitespace(this.currentCharacter))\n\t\t\treturn true;\n\n\t\t//buffer the new char which is not a white space\n\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t//this.withoutUnicodePtr == 1 is true here\n\t\treturn false;\n\t} catch (IndexOutOfBoundsException e){\n\t\tthis.currentPosition--;\n\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);\n\t}\n}",
        "accuracyTokens" : 0.5161290322580645,
        "accuracyCharacters" : 0.6435935198821797
      } ],
      "memberId" : "975d644a692378a3469a9d5db5c4341d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 15,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\n\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn this.currentCharacter;\n\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tthis.unicodeAsBackSlash = false;\n\t\t\tif (this.withoutUnicodePtr != 0) {\n\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\t}\n\t\t\treturn this.currentCharacter;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\treturn -1;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is == to the testedChar\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\n\tif (this.currentPosition >= this.source.length) { // handle the obvious case upfront\n\t\tthis.unicodeAsBackSlash = false;\n\t\treturn false;\n\t}\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (this.currentCharacter != testedChar) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (this.currentCharacter != testedChar) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.unicodeAsBackSlash = false;\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.unicodeAsBackSlash = false;\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//INT 0 : testChar1 \\\\\\\\///\\\\\\\\ 1 : testedChar2 \\\\\\\\///\\\\\\\\ -1 : others\n\t//test can be done with (x==0) for the first and (x>0) for the second\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is == to the testedChar1/2\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn -1;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tint result;\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (this.currentCharacter == testedChar1)\n\t\t\t\tresult = 0;\n\t\t\telse\n\t\t\t\tif (this.currentCharacter == testedChar2)\n\t\t\t\t\tresult = 1;\n\t\t\t\telse {\n\t\t\t\t\tthis.currentPosition = temp;\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn result;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (this.currentCharacter == testedChar1)\n\t\t\t\tresult = 0;\n\t\t\telse\n\t\t\t\tif (this.currentCharacter == testedChar2)\n\t\t\t\t\tresult = 1;\n\t\t\t\telse {\n\t\t\t\t\tthis.currentPosition = temp;\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn result;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn -1;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a digit\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (!isDigit(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (!isDigit(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a digit base on radix\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (Character.digit(this.currentCharacter, radix) == -1) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (Character.digit(this.currentCharacter, radix) == -1) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a JavaIdentifierPart\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//VOID\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\n\ttry {\n\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\t} catch (ArrayIndexOutOfBoundsException e) {\n\t\tthis.currentPosition--;\n\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core.tests.model/workspace/Compiler/src/org/eclipse/jdt/internal/compiler/parser/Scanner.java",
      "methodNumber" : 26,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode. Jump over the next whiteSpace\n\t//making startPosition pointing on the next available char\n\t//On false, the currentCharacter is filled up with a potential\n\t//correct char\n\n\ttry {\n\t\tthis.wasAcr = false;\n\n\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\tif (CharOperation.isWhitespace(this.currentCharacter))\n\t\t\treturn true;\n\n\t\t//buffer the new char which is not a white space\n\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t//this.withoutUnicodePtr == 1 is true here\n\t\treturn false;\n\t} catch (IndexOutOfBoundsException e){\n\t\tthis.currentPosition--;\n\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\n\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn this.currentCharacter;\n\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tthis.unicodeAsBackSlash = false;\n\t\t\tif (this.withoutUnicodePtr != 0) {\n\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\t}\n\t\t\treturn this.currentCharacter;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\treturn -1;\n\t}\n}",
        "accuracyTokens" : 0.5126050420168067,
        "accuracyCharacters" : 0.42046718576195774
      } ],
      "memberId" : "a58b82d4fd42914a1ea773902a4c8801"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is == to the testedChar\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\n\tif (this.currentPosition >= this.source.length) { // handle the obvious case upfront\n\t\tthis.unicodeAsBackSlash = false;\n\t\treturn false;\n\t}\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (this.currentCharacter != testedChar) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t    unicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (this.currentCharacter != testedChar) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.unicodeAsBackSlash = false;\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.unicodeAsBackSlash = false;\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.6404494382022472,
        "accuracyCharacters" : 0.6992437463641652
      } ],
      "memberId" : "952c1a1303a96c20a49e162a53101d3c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//INT 0 : testChar1 \\\\\\\\///\\\\\\\\ 1 : testedChar2 \\\\\\\\///\\\\\\\\ -1 : others\n\t//test can be done with (x==0) for the first and (x>0) for the second\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is == to the testedChar1/2\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn -1;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tint result;\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (this.currentCharacter == testedChar1)\n\t\t\t\tresult = 0;\n\t\t\telse\n\t\t\t\tif (this.currentCharacter == testedChar2)\n\t\t\t\t\tresult = 1;\n\t\t\t\telse {\n\t\t\t\t\tthis.currentPosition = temp;\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn result;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (this.currentCharacter == testedChar1)\n\t\t\t\tresult = 0;\n\t\t\telse\n\t\t\t\tif (this.currentCharacter == testedChar2)\n\t\t\t\t\tresult = 1;\n\t\t\t\telse {\n\t\t\t\t\tthis.currentPosition = temp;\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn result;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn -1;\n\t}\n}",
        "accuracyTokens" : 0.6612903225806451,
        "accuracyCharacters" : 0.7343584305408272
      } ],
      "memberId" : "8e04cccdb227cf7b8a142afb94e9bfe2"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a digit\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (!isDigit(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (!isDigit(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.632258064516129,
        "accuracyCharacters" : 0.6898817345597897
      } ],
      "memberId" : "43c48c3ccac8484345aa37c37d8ee2da"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a digit base on radix\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (Character.digit(this.currentCharacter, radix) == -1) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (Character.digit(this.currentCharacter, radix) == -1) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.6545454545454545,
        "accuracyCharacters" : 0.700507614213198
      } ],
      "memberId" : "23c40d354e8ee0bba244b05440982fe9"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\t//Both previous lines are true if the currentCharacter is a JavaIdentifierPart\n\t//On false, no side effect has occured.\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\tif (this.currentPosition >= this.source.length) // handle the obvious case upfront\n\t\treturn false;\n\n\tint temp = this.currentPosition;\n\ttry {\n\t\tif (((this.currentCharacter = this.source[this.currentPosition++]) == '\\\\')\n\t\t\t&& (this.source[this.currentPosition] == 'u')) {\n\n\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//need the unicode buffer\n\t\t\tif (this.withoutUnicodePtr == 0) {\n\t\t\t\t//buffer all the entries that have been left aside....\n\t\t\t\tunicodeInitializeBuffer(this.currentPosition - unicodeSize - this.startPosition);\n\t\t\t}\n\t\t\t//fill the buffer with the char\n\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t} //-------------end unicode traitement--------------\n\t\telse {\n\t\t\tif (!Character.isJavaIdentifierPart(this.currentCharacter)) {\n\t\t\t\tthis.currentPosition = temp;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.withoutUnicodePtr != 0)\n\t\t\t    unicodeStoreAt(++this.withoutUnicodePtr);\n\t\t\treturn true;\n\t\t}\n\t} catch (IndexOutOfBoundsException e) {\n\t\tthis.currentPosition = temp;\n\t\treturn false;\n\t}\n}",
        "accuracyTokens" : 0.5220125786163522,
        "accuracyCharacters" : 0.6379093198992444
      } ],
      "memberId" : "6670177973121cc15529d1174fd6c29f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//VOID\n\t//handle the case of unicode.\n\t//when a unicode appears then we must use a buffer that holds char internal values\n\t//At the end of this method currentCharacter holds the new visited char\n\t//and currentPosition points right next after it\n\n\t//ALL getNextChar.... ARE OPTIMIZED COPIES \n\n\ttry {\n\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';\n\t} catch (ArrayIndexOutOfBoundsException e) {\n\t\tthis.currentPosition--;\n\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);\n\t}\n}",
        "accuracyTokens" : 0.1407766990291262,
        "accuracyCharacters" : 0.3344549125168237
      } ],
      "memberId" : "54b4132bfcb1f628f5734c005678bfd3"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git",
      "commitId" : "6bbe631c4aee5403134035d5558f68ceeb91c520",
      "fileName" : "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t//BOOLEAN\n\t//handle the case of unicode. Jump over the next whiteSpace\n\t//making startPosition pointing on the next available char\n\t//On false, the currentCharacter is filled up with a potential\n\t//correct char\n\n\ttry {\n\t\tthis.wasAcr = false;\n\n\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);\n\t\tif (CharOperation.isWhitespace(this.currentCharacter))\n\t\t\treturn true;\n\n\t\t//buffer the new char which is not a white space\n\t\tunicodeStoreAt(++this.withoutUnicodePtr);\n\t\t//this.withoutUnicodePtr == 1 is true here\n\t\treturn false;\n\t} catch (IndexOutOfBoundsException e){\n\t\tthis.currentPosition--;\n\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);\n\t}\n}",
        "accuracyTokens" : 0.5161290322580645,
        "accuracyCharacters" : 0.6435935198821797
      } ],
      "memberId" : "e2cb7468f096ba0a730e7cb5bd3db98b"
    } ],
    "foundMembers" : 16,
    "numberOfRecommendationSets" : 25,
    "precision" : 0.64,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.5350083289706031,
    "accuracyCharactersMin" : 0.6075520579672732,
    "patternOriginal" : "\n\t\t\t\n\t\n\t\t\t\n\t//# match (original) {\n\t\t\t\n\t\n\t\t\t\n\t//# wildcard expr(ARES0, unicodeSize = 6, 1)\n\t\t\t\n\t\n\t\t\t\n\t//# wildcard expr(ARES1, 0, 1)\n\t\t\t\n\t\n\t\t\t\n\t//# wildcard expr(ARES2, 0, 2)\n\t\t\t\n\t\n\t\t\t\n\t//# wildcard expr(ARES3, 0, 3)\n\t\t\t\n\t\n\t\t\t\n\t//# wildcard expr(ARES4, 0, 4)\n\t\t\t\n\t//-------------unicode traitement ------------\n\t\t\t\n\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;\n\t//# wildcard stmt(ARES5);\n\tthis.currentPosition++;\n\twhile (this.source[this.currentPosition] == 'u') {\n\t\tthis.currentPosition++;\n\t\tunicodeSize++;\n\t}\n\n\tif (((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15\n\t\t\t\t|| c1 < 0)\n\t\t\t\t|| ((c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c2 < 0)\n\t\t\t\t|| ((c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c3 < 0)\n\t\t\t\t|| ((c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15 || c4 < 0))\n\t\t//# wildcard stmt(ARES6);\n\t\t\t\n\t\n\t\t\t\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\t//# }",
    "patternCreationTimeInNanoSec" : 61142753335,
    "patternUseTimeInNanoSec" : 4634641828,
    "accuracyTokensMax" : 0.5350083289706031,
    "accuracyCharactersMax" : 0.6075520579672732
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "114007",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\nvoid setText(String string, int flags)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8881ed01156d220a6231d68fa02dd324",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e1a728a768eb01ea5cb0d1b9a5a90d1bf5f21ca2",
          "commitId2" : "8f81b79ff5e07c725cebde15a31f883d8f49f7d0",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 105,
          "methodNumber2" : 107
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/** \n * If the argument is <code>true</code>, puts the receiver\n * in a drawing mode where the resulting color in the destination\n * is the <em>exclusive or</em> of the color values in the source\n * and the destination, and if the argument is <code>false</code>,\n * puts the receiver in a drawing mode where the destination color\n * is replaced with the source color value.\n * <p>\n * Note that this mode in fundamentally unsupportable on certain\n * platforms, notably Carbon (Mac OS X). Clients that want their\n * code to run on all platforms need to avoid this method.\n * </p>\n *\n * @param xor if <code>true</code>, then <em>xor</em> mode is used, otherwise <em>source copy</em> mode is used\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @deprecated this functionality is not supported on some platforms\n */\npublic void setXORMode(boolean xor)",
      "diff" : "-\tdata.state &= ~LINE_WIDTH;-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}+\tdata.state &= ~LINE_WIDTH;\t",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "3d4c2e11159fb027786dd40d52e0e259",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "915aaff2edbff5a7ca1ccadd3ba2c8b24cab8d4b",
          "commitId2" : "bfd4e25b25ada55deaded6f49ea94bad3c2c1d5f",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 97,
          "methodNumber2" : 99
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "Use uppercase for constant names",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b9d0f0bc1407a5805780ddc7a36624c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
          "commitId2" : "32cbedc945c7249fe03a0ee60ec5832b06643cb1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 103,
          "methodNumber2" : 105
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "Use uppercase for constant names",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a9e871b4750f719d769d864a81e24d39",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
          "commitId2" : "32cbedc945c7249fe03a0ee60ec5832b06643cb1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 102,
          "methodNumber2" : 104
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\nvoid setText(String string, int flags)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8881ed01156d220a6231d68fa02dd324",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e1a728a768eb01ea5cb0d1b9a5a90d1bf5f21ca2",
          "commitId2" : "8f81b79ff5e07c725cebde15a31f883d8f49f7d0",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 105,
          "methodNumber2" : 107
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/** \n * If the argument is <code>true</code>, puts the receiver\n * in a drawing mode where the resulting color in the destination\n * is the <em>exclusive or</em> of the color values in the source\n * and the destination, and if the argument is <code>false</code>,\n * puts the receiver in a drawing mode where the destination color\n * is replaced with the source color value.\n * <p>\n * Note that this mode in fundamentally unsupportable on certain\n * platforms, notably Carbon (Mac OS X). Clients that want their\n * code to run on all platforms need to avoid this method.\n * </p>\n *\n * @param xor if <code>true</code>, then <em>xor</em> mode is used, otherwise <em>source copy</em> mode is used\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @deprecated this functionality is not supported on some platforms\n */\npublic void setXORMode(boolean xor)",
      "diff" : "-\tdata.state &= ~LINE_WIDTH;-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}+\tdata.state &= ~LINE_WIDTH;\t",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "3d4c2e11159fb027786dd40d52e0e259",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "915aaff2edbff5a7ca1ccadd3ba2c8b24cab8d4b",
          "commitId2" : "bfd4e25b25ada55deaded6f49ea94bad3c2c1d5f",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 97,
          "methodNumber2" : 99
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "Use uppercase for constant names",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b9d0f0bc1407a5805780ddc7a36624c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
          "commitId2" : "32cbedc945c7249fe03a0ee60ec5832b06643cb1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 103,
          "methodNumber2" : 105
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the width that will be used when drawing lines\n * for all of the figure drawing operations (that is,\n * <code>drawLine</code>, <code>drawRectangle</code>, \n * <code>drawPolyline</code>, and so forth.\n * <p>\n * Note that line width of zero is used as a hint to\n * indicate that the fastest possible line drawing\n * algorithms should be used. This means that the\n * output may be different from line width one.\n * </p>\n *\n * @param lineWidth the width of a line\n *\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setLineWidth(int lineWidth)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "-\tswitch (data.lineStyle) {-\t\tcase SWT.LINE_DOT:-\t\tcase SWT.LINE_DASH:-\t\tcase SWT.LINE_DASHDOT:-\t\tcase SWT.LINE_DASHDOTDOT:-\t\t\tdata.state &= ~LINE_STYLE;-\t}",
      "commitMsg" : "Use uppercase for constant names",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a9e871b4750f719d769d864a81e24d39",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
          "commitId2" : "32cbedc945c7249fe03a0ee60ec5832b06643cb1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 102,
          "methodNumber2" : 104
        },
        "pattern" : [ 1008, 4057, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, -27575, 22045, 1001, 4141, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 30098, -14754, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 15557, -12035, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 12316, 15116, 1001, 4081, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, -23236, 25245, 1008, 4077, 1001, 4063, 1001, 4070, 46, -4182, 1001, 4070, 1674, -15215, 1001, 4118, 1001, 4070, 23760, 27014 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 27,
          "moves" : 0,
          "inserts" : 0,
          "deletes" : 27,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 97,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.lineWidth == lineWidth) return;\n\tdata.lineWidth = lineWidth;\n\tdata.state &= ~LINE_WIDTH;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 0.9937888198757764
      } ],
      "memberId" : "3d4c2e11159fb027786dd40d52e0e259"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 103,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.lineWidth == lineWidth) return;\n\tdata.lineWidth = lineWidth;\n\tdata.state &= ~LINE_WIDTH;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "8b9d0f0bc1407a5805780ddc7a36624c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 102,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.lineWidth == lineWidth) return;\n\tdata.lineWidth = lineWidth;\n\tdata.state &= ~LINE_WIDTH;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "a9e871b4750f719d769d864a81e24d39"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2379baa8afd8f663d18cca6bfe8f9f123522269d",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 105,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.lineWidth == lineWidth) return;\n\tdata.lineWidth = lineWidth;\n\tdata.state &= ~LINE_WIDTH;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "8881ed01156d220a6231d68fa02dd324"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 1.0,
    "accuracyCharactersMin" : 0.9984472049689441,
    "patternOriginal" : "\n\t//# match (original) {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.lineWidth == lineWidth) return;\n\tdata.lineWidth = lineWidth;\n\tdata.state &= ~LINE_WIDTH;\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdata.state &= ~LINE_STYLE;\n\t}\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.lineWidth == lineWidth) return;\n\tdata.lineWidth = lineWidth;\n\tdata.state &= ~LINE_WIDTH;\n\t//# }",
    "patternCreationTimeInNanoSec" : 110945682,
    "patternUseTimeInNanoSec" : 13928301385,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 0.9984472049689441
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "139329_1",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nLRESULT WM_KEYDOWN (int wParam, int lParam)",
      "methodModified" : "\n\nLRESULT WM_KEYDOWN (int wParam, int lParam)",
      "diff" : "-\tif (focusIndex == -1) return result;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return result;-\t\t\tevent.item = item;-\t\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);-\t\t\titem.expanded = !item.expanded;-\t\t\tshowItem (focusIndex);+\t\t\tevent.item = focusItem;+\t\t\tsendEvent (focusItem.expanded ? SWT.Collapse : SWT.Expand, event);+\t\t\tfocusItem.expanded = !focusItem.expanded;+\t\t\tshowItem (focusItem);-\t\tcase OS.VK_UP:+\t\tcase OS.VK_UP: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw (true);-\t\t\t\tfocusIndex--;-\t\t\t\titems [focusIndex].redraw (true);+\t\t\t\tfocusItem.redraw (true);+\t\t\t\tfocusItem = items [focusIndex - 1];+\t\t\t\tfocusItem.redraw (true);-\t\tcase OS.VK_DOWN:+\t\t}+\t\tcase OS.VK_DOWN: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw (true);-\t\t\t\tfocusIndex++;-\t\t\t\titems [focusIndex].redraw (true);+\t\t\t\tfocusItem.redraw (true);+\t\t\t\tfocusItem = items [focusIndex + 1];+\t\t\t\tfocusItem.redraw (true);+\t\t}",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "b1ed75a2f77bb03a8805ce07268cc8b5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 32,
          "methodNumber2" : 32
        },
        "pattern" : [ 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1006, 1006, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2997, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, 1533, -6208, 24846, 6155, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1000, 4070, 24846, 6155, 4017, 1000, 4120, 4017, 1007, 4061, 4141, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 24846, 6155, 4023, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1471, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2995, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4076, 1001, 4070, -16206, 10970, 1008, 4084, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 56,
          "moves" : 14,
          "inserts" : 23,
          "deletes" : 8,
          "updates" : 9,
          "aligns" : 2
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "methodModified" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "diff" : "-\tif (focusIndex == -1) return result;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return result;-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight()); +\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight()); -\t\tevent.item = item;-\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tevent.item = focusItem;+\t\tsendEvent (focusItem.expanded ? SWT.Collapse : SWT.Expand, event);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d8393f7d77e8e39197011a14efa8e325",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 35,
          "methodNumber2" : 35
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 1,
          "deletes" : 12,
          "updates" : 11,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid onKeyDown (Event event)",
      "methodModified" : "\n\nvoid onKeyDown (Event event)",
      "diff" : "-\tif (focusIndex == -1) return;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return;-\t\t\tev.item = item;-\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);-\t\t\titem.expanded = !item.expanded;-\t\t\tshowItem (focusIndex);+\t\t\tev.item = focusItem;+\t\t\tsendEvent (focusItem.expanded ? SWT.Collapse :SWT.Expand, ev);+\t\t\tfocusItem.expanded = !focusItem.expanded;+\t\t\tshowItem (focusItem);-\t\tcase SWT.ARROW_UP:+\t\tcase SWT.ARROW_UP: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw ();-\t\t\t\tfocusIndex--;-\t\t\t\titems [focusIndex].redraw ();+\t\t\t\tfocusItem.redraw ();+\t\t\t\tfocusItem = items [focusIndex - 1];+\t\t\t\tfocusItem.redraw ();-\t\tcase SWT.ARROW_DOWN:+\t\t}+\t\tcase SWT.ARROW_DOWN: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw ();-\t\t\t\tfocusIndex++;-\t\t\t\titems [focusIndex].redraw ();+\t\t\t\tfocusItem.redraw ();+\t\t\t\tfocusItem = items [focusIndex + 1];+\t\t\t\tfocusItem.redraw ();+\t\t}",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d88ce30b3961d85fa632fd87a8c7a112",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 24,
          "methodNumber2" : 24
        },
        "pattern" : [ 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1870, 2000, 3000, 1004, 4070, 49, 31507, 24846, 6155, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2997, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, -16206, 10970, 24846, 6155, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1000, 4070, 24846, 6155, 4017, 1000, 4120, 4017, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 24846, 6155, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2995, 1000, 4070, 24846, 6155, 4077, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1470, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 1901, 2000, 2997, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1008, 4084, 1001, 4076, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 18,
          "inserts" : 22,
          "deletes" : 7,
          "updates" : 9,
          "aligns" : 1
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid onMouseUp (Event event)",
      "methodModified" : "\n\nvoid onMouseUp (Event event)",
      "diff" : "-\tif (focusIndex == -1) return;-\tExpandItem item = items [focusIndex];-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); +\tif (focusItem == null) return;+\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight ()); -\t\tev.item = item;-\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tev.item = focusItem;+\t\tnotifyListeners (focusItem.expanded ? SWT.Collapse : SWT.Expand, ev);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "435c6c2e8b18e8e12c86d4241d393f67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 26,
          "methodNumber2" : 26
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 1,
          "deletes" : 12,
          "updates" : 11,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint /*long*/ gtk_button_release_event (int /*long*/ widget, int /*long*/ event)",
      "methodModified" : "\n\nint /*long*/ gtk_button_release_event (int /*long*/ widget, int /*long*/ event)",
      "diff" : "-\t\tif (focusIndex != -1) {+\t\tif (lastFocus != null) {-\t\t\tExpandItem item = items [focusIndex];-\t\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); +\t\t\tboolean hover = lastFocus.x <= x && x < (lastFocus.x + lastFocus.width) && lastFocus.y <= y && y < (lastFocus.y + getBandHeight ()); -\t\t\t\tev.item = item;-\t\t\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);-\t\t\t\titem.expanded = !item.expanded;-\t\t\t\tshowItem (focusIndex);+\t\t\t\tev.item = lastFocus;+\t\t\t\tnotifyListeners (lastFocus.expanded ? SWT.Collapse : SWT.Expand, ev);+\t\t\t\tlastFocus.expanded = !lastFocus.expanded;+\t\t\t\tshowItem (lastFocus);",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5ae357ef75aa8c1996626a32399df57",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 18,
          "methodNumber2" : 18
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, -16206, 10970, 30365, -30, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 1,
          "deletes" : 12,
          "updates" : 11,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event)",
      "methodModified" : "\n\nint /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event)",
      "diff" : "-\t\tif (focusIndex != -1) {-\t\t\tExpandItem item = items [focusIndex];+\t\tif (lastFocus != null) {-\t\t\t\t\tev.item = item;-\t\t\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);-\t\t\t\t\titem.expanded = !item.expanded;-\t\t\t\t\tshowItem (focusIndex);+\t\t\t\t\tev.item = lastFocus;+\t\t\t\t\tsendEvent (lastFocus.expanded ? SWT.Collapse :SWT.Expand, ev);+\t\t\t\t\tlastFocus.expanded = !lastFocus.expanded;+\t\t\t\t\tshowItem (lastFocus);-\t\t\t\tcase OS.GDK_KP_Up:+\t\t\t\tcase OS.GDK_KP_Up: {+\t\t\t\t\tint focusIndex = indexOf (lastFocus);-\t\t\t\t\t\titem.redraw ();-\t\t\t\t\t\tfocusIndex--;-\t\t\t\t\t\titems [focusIndex].redraw ();+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t\t\tlastFocus = items [focusIndex - 1];+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t}-\t\t\t\tcase OS.GDK_KP_Down:+\t\t\t\tcase OS.GDK_KP_Down: {+\t\t\t\t\tint focusIndex = indexOf (lastFocus);-\t\t\t\t\t\titem.redraw ();-\t\t\t\t\t\tfocusIndex++;-\t\t\t\t\t\titems [focusIndex].redraw ();+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t\t\tlastFocus = items [focusIndex + 1];+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t}",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "ca56b2a6a7bb5f37734272891112f0bb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 22,
          "methodNumber2" : 22
        },
        "pattern" : [ 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, -16206, 10970, 30365, -30, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1870, 2000, 3000, 1004, 4070, 49, 31507, 30365, -30, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2995, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, -16206, 10970, 30365, -30, 1005, 1004, 4070, 49, 31507, 30365, -30, 1000, 4070, 30365, -30, 4017, 1000, 4120, 4017, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 30365, -30, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 30365, -30, 4077, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1470, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 1901, 2000, 2997, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2993, 1000, 4070, 30365, -30, 4077, 1000, 4070, 30365, -30, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1008, 4084, 1001, 4076, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 18,
          "inserts" : 22,
          "deletes" : 7,
          "updates" : 9,
          "aligns" : 1
        },
        "treeSize" : 14
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nLRESULT WM_KEYDOWN (int wParam, int lParam)",
      "methodModified" : "\n\nLRESULT WM_KEYDOWN (int wParam, int lParam)",
      "diff" : "-\tif (focusIndex == -1) return result;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return result;-\t\t\tevent.item = item;-\t\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);-\t\t\titem.expanded = !item.expanded;-\t\t\tshowItem (focusIndex);+\t\t\tevent.item = focusItem;+\t\t\tsendEvent (focusItem.expanded ? SWT.Collapse : SWT.Expand, event);+\t\t\tfocusItem.expanded = !focusItem.expanded;+\t\t\tshowItem (focusItem);-\t\tcase OS.VK_UP:+\t\tcase OS.VK_UP: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw (true);-\t\t\t\tfocusIndex--;-\t\t\t\titems [focusIndex].redraw (true);+\t\t\t\tfocusItem.redraw (true);+\t\t\t\tfocusItem = items [focusIndex - 1];+\t\t\t\tfocusItem.redraw (true);-\t\tcase OS.VK_DOWN:+\t\t}+\t\tcase OS.VK_DOWN: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw (true);-\t\t\t\tfocusIndex++;-\t\t\t\titems [focusIndex].redraw (true);+\t\t\t\tfocusItem.redraw (true);+\t\t\t\tfocusItem = items [focusIndex + 1];+\t\t\t\tfocusItem.redraw (true);+\t\t}",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "b1ed75a2f77bb03a8805ce07268cc8b5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 32,
          "methodNumber2" : 32
        },
        "pattern" : [ 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1006, 1006, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2997, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, 1533, -6208, 24846, 6155, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1000, 4070, 24846, 6155, 4017, 1000, 4120, 4017, 1007, 4061, 4141, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 24846, 6155, 4023, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1471, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2995, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4076, 1001, 4070, -16206, 10970, 1008, 4084, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 56,
          "moves" : 14,
          "inserts" : 23,
          "deletes" : 8,
          "updates" : 9,
          "aligns" : 2
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "methodModified" : "\n\nLRESULT WM_LBUTTONUP (int wParam, int lParam)",
      "diff" : "-\tif (focusIndex == -1) return result;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return result;-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight()); +\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight()); -\t\tevent.item = item;-\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tevent.item = focusItem;+\t\tsendEvent (focusItem.expanded ? SWT.Collapse : SWT.Expand, event);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d8393f7d77e8e39197011a14efa8e325",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 35,
          "methodNumber2" : 35
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 1,
          "deletes" : 12,
          "updates" : 11,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid onKeyDown (Event event)",
      "methodModified" : "\n\nvoid onKeyDown (Event event)",
      "diff" : "-\tif (focusIndex == -1) return;-\tExpandItem item = items [focusIndex];+\tif (focusItem == null) return;-\t\t\tev.item = item;-\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);-\t\t\titem.expanded = !item.expanded;-\t\t\tshowItem (focusIndex);+\t\t\tev.item = focusItem;+\t\t\tsendEvent (focusItem.expanded ? SWT.Collapse :SWT.Expand, ev);+\t\t\tfocusItem.expanded = !focusItem.expanded;+\t\t\tshowItem (focusItem);-\t\tcase SWT.ARROW_UP:+\t\tcase SWT.ARROW_UP: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw ();-\t\t\t\tfocusIndex--;-\t\t\t\titems [focusIndex].redraw ();+\t\t\t\tfocusItem.redraw ();+\t\t\t\tfocusItem = items [focusIndex - 1];+\t\t\t\tfocusItem.redraw ();-\t\tcase SWT.ARROW_DOWN:+\t\t}+\t\tcase SWT.ARROW_DOWN: {+\t\t\tint focusIndex = indexOf (focusItem);-\t\t\t\titem.redraw ();-\t\t\t\tfocusIndex++;-\t\t\t\titems [focusIndex].redraw ();+\t\t\t\tfocusItem.redraw ();+\t\t\t\tfocusItem = items [focusIndex + 1];+\t\t\t\tfocusItem.redraw ();+\t\t}",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d88ce30b3961d85fa632fd87a8c7a112",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 24,
          "methodNumber2" : 24
        },
        "pattern" : [ 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1870, 2000, 3000, 1004, 4070, 49, 31507, 24846, 6155, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2997, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, -16206, 10970, 24846, 6155, 1005, 1004, 4070, 49, 31507, 24846, 6155, 1000, 4070, 24846, 6155, 4017, 1000, 4120, 4017, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 24846, 6155, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2995, 1000, 4070, 24846, 6155, 4077, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1470, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 1901, 2000, 2997, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 24846, 6155, 4077, 1000, 4070, 24846, 6155, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1008, 4084, 1001, 4076, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 18,
          "inserts" : 22,
          "deletes" : 7,
          "updates" : 9,
          "aligns" : 1
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid onMouseUp (Event event)",
      "methodModified" : "\n\nvoid onMouseUp (Event event)",
      "diff" : "-\tif (focusIndex == -1) return;-\tExpandItem item = items [focusIndex];-\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); +\tif (focusItem == null) return;+\tboolean hover = focusItem.x <= x && x < (focusItem.x + focusItem.width) && focusItem.y <= y && y < (focusItem.y + getBandHeight ()); -\t\tev.item = item;-\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);-\t\titem.expanded = !item.expanded;-\t\tshowItem (focusIndex);+\t\tev.item = focusItem;+\t\tnotifyListeners (focusItem.expanded ? SWT.Collapse : SWT.Expand, ev);+\t\tfocusItem.expanded = !focusItem.expanded;+\t\tshowItem (focusItem);",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "435c6c2e8b18e8e12c86d4241d393f67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 26,
          "methodNumber2" : 26
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, 49, 31507, 24846, 6155, 1004, 4070, -16206, 10970, 24846, 6155, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 1,
          "deletes" : 12,
          "updates" : 11,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint /*long*/ gtk_button_release_event (int /*long*/ widget, int /*long*/ event)",
      "methodModified" : "\n\nint /*long*/ gtk_button_release_event (int /*long*/ widget, int /*long*/ event)",
      "diff" : "-\t\tif (focusIndex != -1) {+\t\tif (lastFocus != null) {-\t\t\tExpandItem item = items [focusIndex];-\t\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); +\t\t\tboolean hover = lastFocus.x <= x && x < (lastFocus.x + lastFocus.width) && lastFocus.y <= y && y < (lastFocus.y + getBandHeight ()); -\t\t\t\tev.item = item;-\t\t\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);-\t\t\t\titem.expanded = !item.expanded;-\t\t\t\tshowItem (focusIndex);+\t\t\t\tev.item = lastFocus;+\t\t\t\tnotifyListeners (lastFocus.expanded ? SWT.Collapse : SWT.Expand, ev);+\t\t\t\tlastFocus.expanded = !lastFocus.expanded;+\t\t\t\tshowItem (lastFocus);",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5ae357ef75aa8c1996626a32399df57",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 18,
          "methodNumber2" : 18
        },
        "pattern" : [ 1004, 4070, -16206, 10970, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, -16206, 10970, 30365, -30, 1000, 4120, 4017, 1001, 4118, 1001, 4029, 1008, 4071, 1001, 4828, 979, -20136, -26888, -13075, 1001, 4070, 49, 31507, 1001, 4076, 1001, 4070, 1533, -6208, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 1,
          "deletes" : 12,
          "updates" : 11,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event)",
      "methodModified" : "\n\nint /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event)",
      "diff" : "-\t\tif (focusIndex != -1) {-\t\t\tExpandItem item = items [focusIndex];+\t\tif (lastFocus != null) {-\t\t\t\t\tev.item = item;-\t\t\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);-\t\t\t\t\titem.expanded = !item.expanded;-\t\t\t\t\tshowItem (focusIndex);+\t\t\t\t\tev.item = lastFocus;+\t\t\t\t\tsendEvent (lastFocus.expanded ? SWT.Collapse :SWT.Expand, ev);+\t\t\t\t\tlastFocus.expanded = !lastFocus.expanded;+\t\t\t\t\tshowItem (lastFocus);-\t\t\t\tcase OS.GDK_KP_Up:+\t\t\t\tcase OS.GDK_KP_Up: {+\t\t\t\t\tint focusIndex = indexOf (lastFocus);-\t\t\t\t\t\titem.redraw ();-\t\t\t\t\t\tfocusIndex--;-\t\t\t\t\t\titems [focusIndex].redraw ();+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t\t\tlastFocus = items [focusIndex - 1];+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t}-\t\t\t\tcase OS.GDK_KP_Down:+\t\t\t\tcase OS.GDK_KP_Down: {+\t\t\t\t\tint focusIndex = indexOf (lastFocus);-\t\t\t\t\t\titem.redraw ();-\t\t\t\t\t\tfocusIndex++;-\t\t\t\t\t\titems [focusIndex].redraw ();+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t\t\tlastFocus = items [focusIndex + 1];+\t\t\t\t\t\tlastFocus.redraw ();+\t\t\t\t}",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "ca56b2a6a7bb5f37734272891112f0bb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 22,
          "methodNumber2" : 22
        },
        "pattern" : [ 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, 49, 31507, 30365, -30, 1004, 4070, -16206, 10970, 30365, -30, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1870, 2000, 3000, 1004, 4070, 49, 31507, 30365, -30, 1006, 1006, 1006, 1002, 4070, 2500, 2000, 2995, 1027, 4070, 49, 31507, 29652, 17993, 1004, 4070, -16206, 10970, 30365, -30, 1005, 1004, 4070, 49, 31507, 30365, -30, 1000, 4070, 30365, -30, 4017, 1000, 4120, 4017, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1830, 2000, 3000, 1000, 4023, 4087, 1000, 4070, 29652, 17993, 4023, 1000, 4070, 30365, -30, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4076, 2141, 2000, 3000, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1000, 4029, 4137, 1000, 4070, 30365, -30, 4077, 1007, 4061, 4141, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4023, 4087, 1002, 4070, 1560, 2000, 2995, 1002, 4070, 1470, 2000, 2997, 1007, 4077, 4061, 1002, 4076, 1901, 2000, 2997, 1000, 4137, 4076, 1002, 4070, 2609, 2000, 2999, 1002, 4029, 2191, 2000, 2993, 1000, 4070, 30365, -30, 4077, 1000, 4070, 30365, -30, 4063, 1001, 4118, 1001, 4828, 979, -20136, -26888, -13075, 1008, 4084, 1001, 4076, 1008, 4090, 1001, 4070, -16206, 10970 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 18,
          "inserts" : 22,
          "deletes" : 7,
          "updates" : 9,
          "aligns" : 1
        },
        "treeSize" : 14
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tint height = 0, width = 0;\n\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {\n\t\tif (itemCount > 0) {\n\t\t\theight += spacing;\n\t\t\tGC gc = new GC (this);\n\t\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\t\theight += item.getHeaderHeight ();\n\t\t\t\tif (item.expanded) height += item.height;\n\t\t\t\theight += spacing;\n\t\t\t\twidth = Math.max (width, item.getPreferredWidth (gc));\t\t\t\n\t\t\t}\n\t\t\tgc.dispose ();\n\t\t}\n\t}\n\tif (width == 0) width = DEFAULT_WIDTH;\n\tif (height == 0) height = DEFAULT_HEIGHT;\n\tif (wHint != SWT.DEFAULT) width = wHint;\n\tif (hHint != SWT.DEFAULT) height = hHint;\n\tRectangle trim = computeTrim (0, 0, width, height);\n\treturn new Point (trim.width, trim.height);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 15,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (index < itemCount) {\n\t\tint y = spacing - yCurrentScroll;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t}\n\t\tfor (int i = index; i < itemCount; i++) {\n\t\t\tExpandItem item = items [i];\n\t\t\titem.setBounds (spacing, y, 0, 0, true, false);\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t}\n\t}\n\tif (setScrollbar) setScrollbar ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 15,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (index < itemCount) {\n\t\tint y = spacing - yCurrentScroll;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tExpandItem item = items [i];\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t}\n\t\tfor (int i = index; i < itemCount; i++) {\n\t\t\titem.setBounds (spacing, y, 0, 0, true, false);\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t}\n\t}\n\tif (setScrollbar) setScrollbar ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (spacing < 0) return;\n\tif (spacing == this.spacing) return;\n\tthis.spacing = spacing;\n\tint width = Math.max (0, getClientArea ().width - spacing * 2);\n\tfor (int i = 0; i < itemCount; i++) {\n\t\tif (item.width != width) item.setBounds (0, 0, width, item.height, false, true);\n\t}\n\tlayoutItems (0, true);\n\tredraw ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\titem.redraw ();\n\tlayoutItems (index + 1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 24,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (focusIndex == -1) return;\n\tswitch (event.keyCode) {\n\t\tcase 13: /* Return */\n\t\tcase 32: /* Space */\n\t\t\tEvent ev = new Event ();\n\t\t\tev.item = item;\n\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);\n\t\t\titem.expanded = !item.expanded;\n\t\t\tshowItem (focusIndex);\n\t\t\tbreak;\n\t\tcase SWT.ARROW_UP:\n\t\t\tif (focusIndex > 0) {\n\t\t\t\titem.redraw ();\n\t\t\t\tfocusIndex--;\n\t\t\t\titems [focusIndex].redraw ();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase SWT.ARROW_DOWN:\n\t\t\tif (focusIndex < itemCount - 1) {\n\t\t\t\titem.redraw ();\n\t\t\t\tfocusIndex++;\n\t\t\t\titems [focusIndex].redraw ();\n\t\t\t}\n\t\t\tbreak;\n\t}\n}",
        "accuracyTokens" : 0.627906976744186,
        "accuracyCharacters" : 0.7222222222222222
      } ],
      "memberId" : "d88ce30b3961d85fa632fd87a8c7a112"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint x = event.x;\n\tint y = event.y;\n\tfor (int i = 0; i < itemCount; i++) {\n\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); \n\t\tif (hover) {\n\t\t\titems [focusIndex].redraw ();\n\t\t\tfocusIndex = i;\n\t\t\titems [focusIndex].redraw ();\n\t\t\tforceFocus ();\n\t\t\tbreak;\n\t\t}\n\t}\t\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 26,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint x = event.x;\n\tint y = event.y;\n\tif (focusIndex == -1) return;\n\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); \n\tif (hover) {\n\t\tEvent ev = new Event ();\n\t\tev.item = item;\n\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);\n\t\titem.expanded = !item.expanded;\n\t\tshowItem (focusIndex);\n\t}\n}",
        "accuracyTokens" : 0.8737864077669902,
        "accuracyCharacters" : 0.8454106280193237
      } ],
      "memberId" : "435c6c2e8b18e8e12c86d4241d393f67"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tboolean hasFocus = isFocusControl ();\n\tfor (int i = 0; i < itemCount; i++) {\n\t\titem.drawItem (event.gc, hasFocus && i == focusIndex);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 28,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tRectangle rect = getClientArea ();\t\n\tint width = Math.max (0, rect.width - spacing * 2);\n\tfor (int i = 0; i < itemCount; i++) {\n\t\titem.setBounds (0, 0, width, item.height, false, true);\n\t}\n\tsetScrollbar ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tint height = 0, width = 0;\n\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {\n\t\tif (itemCount > 0) {\n\t\t\tint hDC = OS.GetDC (handle);\n\t\t\tint hTheme = 0;\n\t\t\tif (isAppThemed ()) {\n\t\t\t\thTheme = OS.OpenThemeData (handle, EXPLORERBAR);\n\t\t\t}\n\t\t\tint hCurrentFont = 0, oldFont = 0;\n\t\t\tif (hTheme == 0) {\n\t\t\t\tif (hFont != 0) {\n\t\t\t\t\thCurrentFont = hFont;\n\t\t\t\t} else {\n\t\t\t\t\tif (!OS.IsWinCE) {\n\t\t\t\t\t\tNONCLIENTMETRICS info = OS.IsUnicode ? (NONCLIENTMETRICS) new NONCLIENTMETRICSW () : new NONCLIENTMETRICSA ();\n\t\t\t\t\t\tinfo.cbSize = NONCLIENTMETRICS.sizeof;\n\t\t\t\t\t\tif (OS.SystemParametersInfo (OS.SPI_GETNONCLIENTMETRICS, 0, info, 0)) {\n\t\t\t\t\t\t\tLOGFONT logFont = OS.IsUnicode ? (LOGFONT) ((NONCLIENTMETRICSW)info).lfCaptionFont : ((NONCLIENTMETRICSA)info).lfCaptionFont;\n\t\t\t\t\t\t\thCurrentFont = OS.CreateFontIndirect (logFont);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hCurrentFont != 0) {\n\t\t\t\t\toldFont = OS.SelectObject (hDC, hCurrentFont);\n\t\t\t\t}\n\t\t\t}\n\t\t\theight += spacing;\n\t\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\t\theight += item.getHeaderHeight ();\n\t\t\t\tif (item.expanded) height += item.height;\n\t\t\t\theight += spacing;\n\t\t\t\twidth = Math.max (width, item.getPreferredWidth (hTheme, hDC));\n\t\t\t}\n\t\t\tif (hCurrentFont != 0) {\n\t\t\t\tOS.SelectObject (hDC, oldFont);\n\t\t\t\tif (hCurrentFont != hFont) OS.DeleteObject (hCurrentFont);\n\t\t\t}\n\t\t\tOS.ReleaseDC (handle, hDC);\n\t\t\tif (hTheme != 0) OS.CloseThemeData (hTheme);\n\t\t}\n\t}\n\tif (width == 0) width = DEFAULT_WIDTH;\n\tif (height == 0) height = DEFAULT_HEIGHT;\n\tif (wHint != SWT.DEFAULT) width = wHint;\n\tif (hHint != SWT.DEFAULT) height = hHint;\n\tRectangle trim = computeTrim (0, 0, width, height);\n\treturn new Point (trim.width, trim.height);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 12,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint hTheme = 0;\n\tif (isAppThemed ()) {\n\t\thTheme = OS.OpenThemeData (handle, EXPLORERBAR); \n\t}\n\tif (hTheme != 0) {\n\t\tRECT rect = new RECT ();\n\t\tOS.GetClientRect (handle, rect);\n\t\tOS.DrawThemeBackground (hTheme, gc.handle, OS.EBP_HEADERBACKGROUND, 0, rect, clipRect);\n\t} else {\n\t\tdrawBackground (gc.handle);\n\t}\n\tboolean drawFocus = false;\n\tif (handle == OS.GetFocus ()) {\n\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);\n\t\tdrawFocus = (uiState & OS.UISF_HIDEFOCUS) == 0;\n\t}\n\tint hCaptionFont = 0, oldFont = 0;\t\n\tif (hTheme == 0) {\n\t\tif (!OS.IsWinCE && hFont == 0) {\n\t\t\tNONCLIENTMETRICS info = OS.IsUnicode ? (NONCLIENTMETRICS) new NONCLIENTMETRICSW () : new NONCLIENTMETRICSA ();\n\t\t\tinfo.cbSize = NONCLIENTMETRICS.sizeof;\n\t\t\tif (OS.SystemParametersInfo (OS.SPI_GETNONCLIENTMETRICS, 0, info, 0)) {\n\t\t\t\tLOGFONT logFont = OS.IsUnicode ? (LOGFONT) ((NONCLIENTMETRICSW)info).lfCaptionFont : ((NONCLIENTMETRICSA)info).lfCaptionFont;\n\t\t\t\thCaptionFont = OS.CreateFontIndirect (logFont);\n\t\t\t\toldFont = OS.SelectObject (gc.handle, hCaptionFont);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < itemCount; i++) {\n\t\titem.drawItem (gc, hTheme, clipRect, i == focusIndex && drawFocus);\n\t}\n\tif (hCaptionFont != 0) {\n\t\tOS.SelectObject (gc.handle, oldFont);\n\t\tOS.DeleteObject (hCaptionFont);\n\t}\n\tif (hTheme != 0) OS.CloseThemeData (hTheme);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (index < itemCount) {\n\t\tint y = spacing - yCurrentScroll;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight () + spacing;\n\t\t}\n\t\tfor (int i = index; i < itemCount; i++) {\n\t\t\tExpandItem item = items [i];\n\t\t\titem.setBounds (spacing, y, 0, 0, true, false);\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight () + spacing;\n\t\t}\n\t}\n\tif (setScrollbar) setScrollbar ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (index < itemCount) {\n\t\tint y = spacing - yCurrentScroll;\n\t\tfor (int i = 0; i < index; i++) {\n\t\t\tExpandItem item = items [i];\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight () + spacing;\n\t\t}\n\t\tfor (int i = index; i < itemCount; i++) {\n\t\t\titem.setBounds (spacing, y, 0, 0, true, false);\n\t\t\tif (item.expanded) y += item.height;\n\t\t\ty += item.getHeaderHeight () + spacing;\n\t\t}\n\t}\n\tif (setScrollbar) setScrollbar ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (items != null) {\n\t\tfor (int i=0; i<items.length; i++) {\n\t\t\tif (item != null && !item.isDisposed ()) {\n\t\t\t\titem.release (false);\n\t\t\t}\n\t\t}\n\t\titems = null;\n\t}\n\tsuper.releaseChildren (destroy);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 28,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (spacing < 0) return;\n\tif (spacing == this.spacing) return;\n\tthis.spacing = spacing;\n\tRECT rect = new RECT ();\n\tOS.GetClientRect (handle, rect);\t\t\n\tint width = Math.max (0,rect.right - rect.left - spacing * 2);\n\tfor (int i = 0; i < itemCount; i++) {\n\t\tif (item.width != width) item.setBounds (0, 0, width, item.height, false, true);\n\t}\n\tlayoutItems (0, true);\n\tOS.InvalidateRect (handle, null, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 29,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\titem.redraw (true);\n\tlayoutItems (index + 1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tLRESULT result = super.WM_KEYDOWN (wParam, lParam);\n\tif (result != null) return result;\n\tif (focusIndex == -1) return result;\n\tswitch (wParam) {\n\t\tcase OS.VK_SPACE:\n\t\tcase OS.VK_RETURN:\n\t\t\tEvent event = new Event ();\n\t\t\tevent.item = item;\n\t\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);\n\t\t\titem.expanded = !item.expanded;\n\t\t\tshowItem (focusIndex);\n\t\t\treturn LRESULT.ZERO;\n\t\tcase OS.VK_UP:\n\t\t\tif (focusIndex > 0) {\n\t\t\t\titem.redraw (true);\n\t\t\t\tfocusIndex--;\n\t\t\t\titems [focusIndex].redraw (true);\n\t\t\t\treturn LRESULT.ZERO;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase OS.VK_DOWN:\n\t\t\tif (focusIndex < itemCount - 1) {\n\t\t\t\titem.redraw (true);\n\t\t\t\tfocusIndex++;\n\t\t\t\titems [focusIndex].redraw (true);\n\t\t\t\treturn LRESULT.ZERO;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn result;\n}",
        "accuracyTokens" : 0.7142857142857143,
        "accuracyCharacters" : 0.7780244173140954
      } ],
      "memberId" : "b1ed75a2f77bb03a8805ce07268cc8b5"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 34,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tLRESULT result = super.WM_LBUTTONDOWN (wParam, lParam);\n\tif (result == LRESULT.ZERO) return result;\n\tint x = (short) (lParam & 0xFFFF);\n\tint y = (short) (lParam >> 16);\n\tfor (int i = 0; i < itemCount; i++) {\n\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight()); \n\t\tif (hover && focusIndex != i) {\n\t\t\titems [focusIndex].redraw (true);\n\t\t\tfocusIndex = i;\n\t\t\titems [focusIndex].redraw (true);\n\t\t\tforceFocus ();\n\t\t\tbreak;\n\t\t}\n\t} \n\treturn result;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tLRESULT result = super.WM_LBUTTONUP (wParam, lParam);\n\tif (result == LRESULT.ZERO) return result;\n\tif (focusIndex == -1) return result;\n\tint x = (short) (lParam & 0xFFFF);\n\tint y = (short) (lParam >> 16);\n\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight()); \n\tif (hover) {\n\t\tEvent event = new Event ();\n\t\tevent.item = item;\n\t\tsendEvent (item.expanded ? SWT.Collapse : SWT.Expand, event);\n\t\titem.expanded = !item.expanded;\n\t\tshowItem (focusIndex);\n\t}\n\treturn result;\n}",
        "accuracyTokens" : 0.9007633587786259,
        "accuracyCharacters" : 0.8879159369527145
      } ],
      "memberId" : "d8393f7d77e8e39197011a14efa8e325"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 36,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tLRESULT result = super.WM_MOUSEMOVE (wParam, lParam);\n\tif (result == LRESULT.ZERO) return result;\n\tint x = (short) (lParam & 0xFFFF);\n\tint y = (short) (lParam >> 16);\n\tfor (int i = 0; i < itemCount; i++) {\n\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight()); \n\t\tif (item.hover != hover) {\n\t\t\titem.hover = hover;\n\t\t\titem.redraw (false);\n\t\t}\n\t}\n\treturn result;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 40,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tLRESULT result = super.WM_SIZE (wParam, lParam);\n\tRECT rect = new RECT ();\n\tOS.GetClientRect (handle, rect);\n\tint width = Math.max (0,rect.right - rect.left - spacing * 2);\n\tfor (int i = 0; i < itemCount; i++) {\n\t\tif (item.width != width) item.setBounds (0, 0, width, item.height, false, true);\n\t}\n\tsetScrollbar ();\n\treturn result;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tif (wHint != SWT.DEFAULT && wHint < 0) wHint = 0;\n\t\tif (hHint != SWT.DEFAULT && hHint < 0) hHint = 0;\n\t\tPoint size = computeNativeSize (handle, wHint, hHint, changed);\n\t\tint border = OS.gtk_container_get_border_width (handle);\n\t\tsize.x += 2 * border;\n\t\tsize.y += 2 * border;\n\t\treturn size;\n\t} else {\n\t\tint height = 0, width = 0;\n\t\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {\n\t\t\tif (itemCount > 0) {\n\t\t\t\theight += spacing;\n\t\t\t\tGC gc = new GC (this);\n\t\t\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\t\t\theight += item.getHeaderHeight ();\n\t\t\t\t\tif (item.expanded) height += item.height;\n\t\t\t\t\theight += spacing;\n\t\t\t\t\twidth = Math.max (width, item.getPreferredWidth (gc));\n\t\t\t\t}\n\t\t\t\tgc.dispose ();\n\t\t\t}\n\t\t}\n\t\tif (width == 0) width = DEFAULT_WIDTH;\n\t\tif (height == 0) height = DEFAULT_HEIGHT;\n\t\tif (wHint != SWT.DEFAULT) width = wHint;\n\t\tif (hHint != SWT.DEFAULT) height = hHint;\n\t\treturn new Point (width, height);\t\n\t} \n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 9,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tif (lastFocus != null && lastFocus.setFocus ()) return true;\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tif (item.setFocus ()) return true;\n\t\t}\n\t}\n\treturn super.forceFocus (focusHandle);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tfor (int i=0; i<itemCount; i++) {\n\t\t\tif (item.hasFocus ()) return true;\n\t\t}\n\t}\n\treturn super.hasFocus();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {\n\t\tGdkEventButton gdkEvent = new GdkEventButton ();\n\t\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);\n\t\tint x = (int)gdkEvent.x;\n\t\tint y = (int)gdkEvent.y;\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ());\n\t\t\tif (hover) {\n\t\t\t\titems [focusIndex].redraw ();\n\t\t\t\tfocusIndex = i;\n\t\t\t\titems [focusIndex].redraw ();\n\t\t\t\tforceFocus ();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn super.gtk_button_press_event (widget, event);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {\n\t\tif (focusIndex != -1) {\n\t\t\tGdkEventButton gdkEvent = new GdkEventButton ();\n\t\t\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);\n\t\t\tint x = (int)gdkEvent.x;\n\t\t\tint y = (int)gdkEvent.y;\n\t\t\tboolean hover = item.x <= x && x < (item.x + item.width) && item.y <= y && y < (item.y + getBandHeight ()); \n\t\t\tif (hover) {\n\t\t\t\tEvent ev = new Event ();\n\t\t\t\tev.item = item;\n\t\t\t\tnotifyListeners (item.expanded ? SWT.Collapse : SWT.Expand, ev);\n\t\t\t\titem.expanded = !item.expanded;\n\t\t\t\tshowItem (focusIndex);\n\t\t\t}\n\t\t}\n\t}\n\treturn super.gtk_button_release_event (widget, event);\n}",
        "accuracyTokens" : 0.910958904109589,
        "accuracyCharacters" : 0.8549848942598187
      } ],
      "memberId" : "f5ae357ef75aa8c1996626a32399df57"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {\n\t\tGdkEventExpose gdkEvent = new GdkEventExpose ();\n\t\tOS.memmove(gdkEvent, eventPtr, GdkEventExpose.sizeof);\n\t\tGCData data = new GCData ();\n\t\tdata.damageRgn = gdkEvent.region;\n\t\tGC gc = GC.gtk_new (this, data);\n\t\tOS.gdk_gc_set_clip_region (gc.handle, gdkEvent.region);\n\t\tboolean hasFocus = isFocusControl ();\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\titem.drawItem (gc, hasFocus && i == focusIndex);\n\t\t}\n\t\tgc.dispose ();\n\t}\n\treturn super.gtk_expose_event (widget, eventPtr);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tif (!hasFocus ()) return 0;\n\t\tint /*long*/ result = super.gtk_key_press_event (widget, event);\n\t\tif (result != 0) return result;\n\t\tint index = 0;\n\t\twhile (index < itemCount) {\n\t\t\tif (items [index].hasFocus ()) break;\n\t\t\tindex++;\n\t\t}\n\t\tGdkEventKey gdkEvent = new GdkEventKey ();\n\t\tOS.memmove (gdkEvent, event, GdkEventKey.sizeof);\n\t\tboolean next = false;\n\t\tswitch (gdkEvent.keyval) {\n\t\t\tcase OS.GDK_Up:\n\t\t\tcase OS.GDK_Left: next = false; break;\n\t\t\tcase OS.GDK_Down: \n\t\t\tcase OS.GDK_Right: next = true; break;\n\t\t\tdefault: return result;\n\t\t}\n\t\tint start = index, offset = next ? 1 : -1;\n\t\twhile ((index = (index + offset + itemCount) % itemCount) != start) {\n\t\t\tif (item.setFocus ()) return result;\n\t\t}\n\t\treturn result;\n\t} else {\n\t\tif (focusIndex != -1) {\n\t\t\tExpandItem item = items [focusIndex];\n\t\t\tGdkEventKey keyEvent = new GdkEventKey ();\n\t\t\tOS.memmove (keyEvent, event, GdkEventKey.sizeof);\n\t\t\tswitch (keyEvent.keyval) {\n\t\t\t\tcase OS.GDK_Return:\n\t\t\t\tcase OS.GDK_space:\n\t\t\t\t\tEvent ev = new Event ();\n\t\t\t\t\tev.item = item;\n\t\t\t\t\tsendEvent (item.expanded ? SWT.Collapse :SWT.Expand, ev);\n\t\t\t\t\titem.expanded = !item.expanded;\n\t\t\t\t\tshowItem (focusIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OS.GDK_Up:\n\t\t\t\tcase OS.GDK_KP_Up:\n\t\t\t\t\tif (focusIndex > 0) {\n\t\t\t\t\t\titem.redraw ();\n\t\t\t\t\t\tfocusIndex--;\n\t\t\t\t\t\titems [focusIndex].redraw ();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase OS.GDK_Down:\n\t\t\t\tcase OS.GDK_KP_Down:\n\t\t\t\t\tif (focusIndex < itemCount - 1) {\n\t\t\t\t\t\titem.redraw ();\n\t\t\t\t\t\tfocusIndex++;\n\t\t\t\t\t\titems [focusIndex].redraw ();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn super.gtk_key_press_event (widget, event);\n}",
        "accuracyTokens" : 0.7964071856287425,
        "accuracyCharacters" : 0.8191011235955056
      } ],
      "memberId" : "ca56b2a6a7bb5f37734272891112f0bb"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 24,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tif (item != null) item.resizeControl (yCurrentScroll);\n\t\t}\n\t} else {\n\t\tif (index < itemCount) {\n\t\t\tint y = spacing - yCurrentScroll;\n\t\t\tfor (int i = 0; i < index; i++) {\n\t\t\t\tExpandItem item = items [i];\n\t\t\t\tif (item.expanded) y += item.height;\n\t\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t\t}\n\t\t\tfor (int i = index; i < itemCount; i++) {\n\t\t\t\tExpandItem item = items [i];\n\t\t\t\titem.setBounds (spacing, y, 0, 0, true, false);\n\t\t\t\tif (item.expanded) y += item.height;\n\t\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t\t}\n\t\t}\n\t\tif (setScrollbar) setScrollbar ();\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 24,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tExpandItem item = items [i];\n\t\t\tif (item != null) item.resizeControl (yCurrentScroll);\n\t\t}\n\t} else {\n\t\tif (index < itemCount) {\n\t\t\tint y = spacing - yCurrentScroll;\n\t\t\tfor (int i = 0; i < index; i++) {\n\t\t\t\tif (item.expanded) y += item.height;\n\t\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t\t}\n\t\t\tfor (int i = index; i < itemCount; i++) {\n\t\t\t\tExpandItem item = items [i];\n\t\t\t\titem.setBounds (spacing, y, 0, 0, true, false);\n\t\t\t\tif (item.expanded) y += item.height;\n\t\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t\t}\n\t\t}\n\t\tif (setScrollbar) setScrollbar ();\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 24,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tExpandItem item = items [i];\n\t\t\tif (item != null) item.resizeControl (yCurrentScroll);\n\t\t}\n\t} else {\n\t\tif (index < itemCount) {\n\t\t\tint y = spacing - yCurrentScroll;\n\t\t\tfor (int i = 0; i < index; i++) {\n\t\t\t\tExpandItem item = items [i];\n\t\t\t\tif (item.expanded) y += item.height;\n\t\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t\t}\n\t\t\tfor (int i = index; i < itemCount; i++) {\n\t\t\t\titem.setBounds (spacing, y, 0, 0, true, false);\n\t\t\t\tif (item.expanded) y += item.height;\n\t\t\t\ty += item.getHeaderHeight() + spacing;\n\t\t\t}\n\t\t}\n\t\tif (setScrollbar) setScrollbar ();\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 26,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tfor (int i = 0; i < itemCount; i++) {\n\t\tif (item != null && !item.isDisposed ()) {\n\t\t\titem.release (false);\n\t\t}\n\t}\n\tsuper.releaseChildren (destroy);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (spacing < 0) return;\n\tif (spacing == this.spacing) return;\n\tthis.spacing = spacing;\n\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {\n\t\tOS.gtk_box_set_spacing (handle, spacing);\n\t\tOS.gtk_container_set_border_width (handle, spacing);\n\t} else {\n\t\tint width = Math.max (0, getClientArea ().width - spacing * 2);\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tif (item.width != width) item.setBounds (0, 0, width, item.height, false, true);\n\t\t}\n\t\tlayoutItems (0, true);\n\t\tredraw ();\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\titem.redraw ();\n\tlayoutItems (index + 1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    } ],
    "foundMembers" : 6,
    "numberOfRecommendationSets" : 35,
    "precision" : 0.17142857142857143,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.8040180912189747,
    "accuracyCharactersMin" : 0.81794320372728,
    "patternOriginal" : "\n\t//# match (original, (focusIndex)) {\n\tExpandItem item = items [focusIndex];\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\t//# }",
    "patternCreationTimeInNanoSec" : 4914703537,
    "patternUseTimeInNanoSec" : 26039495745,
    "accuracyTokensMax" : 0.8040180912189747,
    "accuracyCharactersMax" : 0.81794320372728
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "142947_1",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "dfc2eee3d6d48dfb38c80bf8620b8186",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "798e99004c4ad01e07d724f432241247",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 9,
          "methodNumber2" : 9
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7eb53af82f64e58ba35ffb2a8add70c2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "37c24460183ba36c56c2fbe01b9923be",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "363021511578ea5cea2788580e0cdd99",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "ecc76b597fe211fa399f77ce2bbe3af7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "988d76606d463c1fa83b1c5ab0665e5c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a87bd6b44e911a0cea2c18434386e5a9",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "42cf0dc1b09d8dcb50e47d27ba6d4e5d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a25d568fa25c71b48b71751799deb3a8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "01237c42a6dc00ec1988b6e4df08bc73",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "01b5052a73c82f892dafc4981a6998fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "dfc2eee3d6d48dfb38c80bf8620b8186",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "798e99004c4ad01e07d724f432241247",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 9,
          "methodNumber2" : 9
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7eb53af82f64e58ba35ffb2a8add70c2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "37c24460183ba36c56c2fbe01b9923be",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "363021511578ea5cea2788580e0cdd99",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "ecc76b597fe211fa399f77ce2bbe3af7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "988d76606d463c1fa83b1c5ab0665e5c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a87bd6b44e911a0cea2c18434386e5a9",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "42cf0dc1b09d8dcb50e47d27ba6d4e5d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a25d568fa25c71b48b71751799deb3a8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DropTargetListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragEnter</code> is called when the cursor has entered the drop target boundaries\n * <li><code>dragLeave</code> is called when the cursor has left the drop target boundaries and just before\n * the drop occurs or is cancelled.\n * <li><code>dragOperationChanged</code> is called when the operation being performed has changed \n * (usually due to the user changing the selected modifier key(s) while dragging)\n * <li><code>dragOver</code> is called when the cursor is moving over the drop target\n * <li><code>dropAccept</code> is called just before the drop is performed.  The drop target is given \n * the chance to change the nature of the drop or veto the drop by setting the <code>event.detail</code> field\n * <li><code>drop</code> is called when the data is being dropped\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DropTargetListener\n * @see #removeDropListener\n * @see DropTargetEvent\n */\npublic void addDropListener(DropTargetListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "01237c42a6dc00ec1988b6e4df08bc73",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "methodModified" : "\n\n/**\n * Adds the listener to the collection of listeners who will\n * be notified when a drag and drop operation is in progress, by sending\n * it one of the messages defined in the <code>DragSourceListener</code>\n * interface.\n * \n * <p><ul>\n * <li><code>dragStart</code> is called when the user has begun the actions required to drag the widget. \n * This event gives the application the chance to decide if a drag should be started.\n * <li><code>dragSetData</code> is called when the data is required from the drag source.\n * <li><code>dragFinished</code> is called when the drop has successfully completed (mouse up \n * over a valid target) or has been terminated (such as hitting the ESC key). Perform cleanup \n * such as removing data from the source side on a successful move operation.\n * </ul></p>\n *\n * @param listener the listener which should be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see DragSourceListener\n * @see #removeDragListener\n * @see DragSourceEvent\n */\npublic void addDragListener(DragSourceListener listener)",
      "diff" : "+\ttypedListener.dndWidget = this;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "01b5052a73c82f892dafc4981a6998fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 3,
          "methodNumber2" : 3
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 31280, 30526, 4063, 1000, 4070, -11816, 4094, 4063, 1000, 4132, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 5,
          "moves" : 0,
          "inserts" : 5,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragEnter, typedListener);\n\taddListener (DND.DragLeave, typedListener);\n\taddListener (DND.DragOver, typedListener);\n\taddListener (DND.DragOperationChanged, typedListener);\n\taddListener (DND.Drop, typedListener);\n\taddListener (DND.DropAccept, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "a87bd6b44e911a0cea2c18434386e5a9"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragStart, typedListener);\n\taddListener (DND.DragSetData, typedListener);\n\taddListener (DND.DragEnd, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "01b5052a73c82f892dafc4981a6998fd"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragEnter, typedListener);\n\taddListener (DND.DragLeave, typedListener);\n\taddListener (DND.DragOver, typedListener);\n\taddListener (DND.DragOperationChanged, typedListener);\n\taddListener (DND.Drop, typedListener);\n\taddListener (DND.DropAccept, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "01237c42a6dc00ec1988b6e4df08bc73"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragStart, typedListener);\n\taddListener (DND.DragSetData, typedListener);\n\taddListener (DND.DragEnd, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "42cf0dc1b09d8dcb50e47d27ba6d4e5d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 3,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragEnter, typedListener);\n\taddListener (DND.DragLeave, typedListener);\n\taddListener (DND.DragOver, typedListener);\n\taddListener (DND.DragOperationChanged, typedListener);\n\taddListener (DND.Drop, typedListener);\n\taddListener (DND.DropAccept, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "a25d568fa25c71b48b71751799deb3a8"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 9,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragEnter, typedListener);\n\taddListener (DND.DragLeave, typedListener);\n\taddListener (DND.DragOver, typedListener);\n\taddListener (DND.DragOperationChanged, typedListener);\n\taddListener (DND.Drop, typedListener);\n\taddListener (DND.DropAccept, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "798e99004c4ad01e07d724f432241247"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error(SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener(listener);\n\ttypedListener.dndWidget = this;\n\taddListener(DND.DragStart, typedListener);\n\taddListener(DND.DragSetData, typedListener);\n\taddListener(DND.DragEnd, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "363021511578ea5cea2788580e0cdd99"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragStart, typedListener);\n\taddListener (DND.DragSetData, typedListener);\n\taddListener (DND.DragEnd, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "dfc2eee3d6d48dfb38c80bf8620b8186"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragStart, typedListener);\n\taddListener (DND.DragSetData, typedListener);\n\taddListener (DND.DragEnd, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "7eb53af82f64e58ba35ffb2a8add70c2"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragEnter, typedListener);\n\taddListener (DND.DragLeave, typedListener);\n\taddListener (DND.DragOver, typedListener);\n\taddListener (DND.DragOperationChanged, typedListener);\n\taddListener (DND.Drop, typedListener);\n\taddListener (DND.DropAccept, typedListener);\t\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "37c24460183ba36c56c2fbe01b9923be"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragEnter, typedListener);\n\taddListener (DND.DragLeave, typedListener);\n\taddListener (DND.DragOver, typedListener);\n\taddListener (DND.DragOperationChanged, typedListener);\n\taddListener (DND.Drop, typedListener);\n\taddListener (DND.DropAccept, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "ecc76b597fe211fa399f77ce2bbe3af7"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragStart, typedListener);\n\taddListener (DND.DragSetData, typedListener);\n\taddListener (DND.DragEnd, typedListener);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "988d76606d463c1fa83b1c5ab0665e5c"
    } ],
    "foundMembers" : 12,
    "numberOfRecommendationSets" : 12,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 1.0,
    "accuracyCharactersMin" : 1.0,
    "patternOriginal" : "\n\t//# match (original, (DragStart,DragSetData,DragEnd)) {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\taddListener (DND.DragStart, typedListener);\n\taddListener (DND.DragSetData, typedListener);\n\taddListener (DND.DragEnd, typedListener);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tif (listener == null) DND.error (SWT.ERROR_NULL_ARGUMENT);\n\tDNDListener typedListener = new DNDListener (listener);\n\ttypedListener.dndWidget = this;\n\taddListener (DND.DragStart, typedListener);\n\taddListener (DND.DragSetData, typedListener);\n\taddListener (DND.DragEnd, typedListener);\n\t//# }",
    "patternCreationTimeInNanoSec" : 3793031219,
    "patternUseTimeInNanoSec" : 14878931492,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 1.0
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "91937",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4d17d67894099caffe78f6bebdcf9240",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 11,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 23
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a26d756e4fdba750a38ac1d9fb95d44f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 11,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 23
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "96525 + 77149 + 77249",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c27fe3a4ec65787980ae9f0766c84151",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1c70972bfbe39a9f87e858e5e97e923ee244c636",
          "commitId2" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 11,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 24
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4d17d67894099caffe78f6bebdcf9240",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 11,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 23
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "97914",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a26d756e4fdba750a38ac1d9fb95d44f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "commitId2" : "0af5301714bc567b5d1f32e120d3e948c7761172",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 11,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 23
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "methodModified" : "\n\n/**\n * Constructs a new instance of this class based on the\n * provided image, with an appearance that varies depending\n * on the value of the flag. The possible flag values are:\n * <dl>\n * <dt><b>IMAGE_COPY</b></dt>\n * <dd>the result is an identical copy of srcImage</dd>\n * <dt><b>IMAGE_DISABLE</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>disabled</em> look</dd>\n * <dt><b>IMAGE_GRAY</b></dt>\n * <dd>the result is a copy of srcImage which has a <em>gray scale</em> look</dd>\n * </dl>\n *\n * @param device the device on which to create the image\n * @param srcImage the image to use as the source\n * @param flag the style, either <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code>\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if device is null and there is no current device</li>\n *    <li>ERROR_NULL_ARGUMENT - if srcImage is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the flag is not one of <code>IMAGE_COPY</code>, <code>IMAGE_DISABLE</code> or <code>IMAGE_GRAY</code></li>\n *    <li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_INVALID_IMAGE - if the image is not a bitmap or an icon, or\n *          is otherwise in an invalid state</li>\n *    <li>ERROR_UNSUPPORTED_DEPTH - if the depth of the Image is not supported</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_NO_HANDLES if a handle could not be obtained for image creation</li>\n * </ul>\n */\npublic Image(Device device, Image srcImage, int flag)",
      "diff" : "+\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; -\t\t\t\t\t\tint red = pixel & redMask;-\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;-\t\t\t\t\t\tint green = pixel & greenMask;-\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;-\t\t\t\t\t\tint blue = pixel & blueMask;-\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;-\t\t\t\t\t\tnewData.data[offset++] =-\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);+\t\t\t\t\t\tif (pixel != data.transparentPixel) {+\t\t\t\t\t\t\tint red = pixel & redMask;+\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;+\t\t\t\t\t\t\tint green = pixel & greenMask;+\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;+\t\t\t\t\t\t\tint blue = pixel & blueMask;+\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;+\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;+\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;+\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;+\t\t\t\t\t\t} else {+\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;+\t\t\t\t\t\t}+\t\t\t\t\t\toffset++;",
      "commitMsg" : "96525 + 77149 + 77249",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c27fe3a4ec65787980ae9f0766c84151",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1c70972bfbe39a9f87e858e5e97e923ee244c636",
          "commitId2" : "a38f7cefdcba7861bbe897896baf442767eeceaf",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1002, 4090, 1849, 2002, 3002, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1002, 4070, 1999, 2000, 2997, 1002, 4070, 2001, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4077, 4027, 1000, 4063, 4077, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4029, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1627, -11642, 4017, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1124, 2132, 4063, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 7619, 6195, 4067, 1002, 4048, 2709, 2000, 2997, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 28148, 15722, 4063, 1000, 4070, -1124, 2132, 4063, 1000, 4070, 7619, 6195, 4017, 1007, 4077, 4027, 1000, 4070, 7619, 6195, 4077, 1000, 4029, 4077, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4076, 4077, 1000, 4063, 4076, 1000, 4070, 28148, 15722, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -15561, 25747, 4076, 1000, 4016, 4077, 1000, 4029, 4016, 1000, 4114, 960, -9170, 0, 3683, 4016, 1000, 4070, -15561, 25747, 4076, 1000, 4070, 7619, 6195, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 11,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 24
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1c70972bfbe39a9f87e858e5e97e923ee244c636",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (device == null) device = Device.getDevice();\n\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tthis.device = device;\n\tif (srcImage == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (srcImage.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tswitch (flag) {\n\t\tcase SWT.IMAGE_COPY:\n\t\tcase SWT.IMAGE_DISABLE:\n\t\t\tthis.type = srcImage.type;\n\t\t\tint srcHandle = srcImage.handle;\n\t\t\tint newHandle = OS.PiDuplicateImage (srcHandle, 0);\n\t\t\tif (newHandle == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tif (flag == SWT.IMAGE_COPY) {\n\t\t\t\t/*\n\t\t\t\t* Bug in Photon.  The image returned by PiDuplicateImage might\n\t\t\t\t* have the same mask_bm/alpha as the original image.  The fix\n\t\t\t\t* is to detect this case and copy mask_bm/alpha if necessary.\n\t\t\t\t*/\n\t\t\t\tPhImage_t phImage = new PhImage_t();\n\t\t\t\tOS.memmove (phImage, srcHandle, PhImage_t.sizeof);\n\t\t\t\tPhImage_t newPhImage = new PhImage_t();\n\t\t\t\tOS.memmove(newPhImage, newHandle, PhImage_t.sizeof);\n\t\t\t\tif (newPhImage.mask_bm != 0 && phImage.mask_bm == newPhImage.mask_bm) {\n\t\t\t\t\tint length = newPhImage.mask_bpl * newPhImage.size_h;\n\t\t\t\t\tint ptr = OS.malloc(length);\n\t\t\t\t\tOS.memmove(ptr, newPhImage.mask_bm, length);\n\t\t\t\t\tnewPhImage.mask_bm = ptr;\n\t\t\t\t}\n\t\t\t\tif (newPhImage.alpha != 0 && phImage.alpha == newPhImage.alpha) {\n\t\t\t\t\tPgAlpha_t alpha = new PgAlpha_t();\n\t\t\t\t\tOS.memmove(alpha, phImage.alpha, PgAlpha_t.sizeof);\n\t\t\t\t\tif (alpha.src_alpha_map_map != 0) {\n\t\t\t\t\t\tint length = alpha.src_alpha_map_bpl * alpha.src_alpha_map_dim_h;\n\t\t\t\t\t\tint ptr = OS.malloc(length);\n\t\t\t\t\t\tOS.memmove(ptr, alpha.src_alpha_map_map, length);\n\t\t\t\t\t\talpha.src_alpha_map_map = ptr;\n\t\t\t\t\t}\n\t\t\t\t\tint ptr = OS.malloc(PgAlpha_t.sizeof);\n\t\t\t\t\tOS.memmove(ptr, alpha, PgAlpha_t.sizeof);\n\t\t\t\t\tnewPhImage.alpha = ptr;\n\t\t\t\t}\n\t\t\t\tOS.memmove(newHandle, newPhImage, PhImage_t.sizeof);\n\t\t\t\ttransparentPixel = srcImage.transparentPixel;\n\t\t\t} else {\n\t\t\t\tPhImage_t phImage = new PhImage_t();\n\t\t\t\tOS.PhMakeGhostBitmap(newHandle);\n\t\t\t\tOS.memmove (phImage, newHandle, PhImage_t.sizeof);\n\t\t\t\tphImage.mask_bm = phImage.ghost_bitmap;\n\t\t\t\tphImage.mask_bpl = phImage.ghost_bpl;\n\t\t\t\tphImage.ghost_bitmap = 0;\n\t\t\t\tphImage.ghost_bpl = 0;\n\t\t\t\tphImage.alpha = 0;\n\t\t\t\tOS.memmove (newHandle, phImage, PhImage_t.sizeof);\n\t\t\t}\n\t\t\thandle = newHandle;\n\t\t\tif (device.tracking) device.new_Object(this);\t\n\t\t\treturn;\n\t\tcase SWT.IMAGE_GRAY:\n\t\t\tRectangle r = srcImage.getBounds();\n\t\t\tImageData data = srcImage.getImageData();\n\t\t\tPaletteData palette = data.palette;\n\t\t\tImageData newData = data;\n\t\t\tif (!palette.isDirect) {\n\t\t\t\t/* Convert the palette entries to gray. */\n\t\t\t\tRGB [] rgbs = palette.getRGBs();\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\tif (data.transparentPixel != i) {\n\t\t\t\t\t\tRGB color = rgbs [i];\n\t\t\t\t\t\tint red = color.red;\n\t\t\t\t\t\tint green = color.green;\n\t\t\t\t\t\tint blue = color.blue;\n\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\tcolor.red = color.green = color.blue = intensity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewData.palette = new PaletteData(rgbs);\n\t\t\t} else {\n\t\t\t\t/* Create a 8 bit depth image data with a gray palette. */\n\t\t\t\tRGB[] rgbs = new RGB[256];\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\trgbs[i] = new RGB(i, i, i);\n\t\t\t\t}\n\t\t\t\tnewData = new ImageData(r.width, r.height, 8, new PaletteData(rgbs));\n\t\t\t\tnewData.maskData = data.maskData;\n\t\t\t\tnewData.maskPad = data.maskPad;\n\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254;\n\n\t\t\t\t/* Convert the pixels. */\n\t\t\t\tint[] scanline = new int[r.width];\n\t\t\t\tint redMask = palette.redMask;\n\t\t\t\tint greenMask = palette.greenMask;\n\t\t\t\tint blueMask = palette.blueMask;\n\t\t\t\tint redShift = palette.redShift;\n\t\t\t\tint greenShift = palette.greenShift;\n\t\t\t\tint blueShift = palette.blueShift;\n\t\t\t\tfor (int y=0; y<r.height; y++) {\n\t\t\t\t\tint offset = y * newData.bytesPerLine;\n\t\t\t\t\tdata.getPixels(0, y, r.width, scanline, 0);\n\t\t\t\t\tfor (int x=0; x<r.width; x++) {\n\t\t\t\t\t\tint pixel = scanline[x];\n\t\t\t\t\t\tif (pixel != data.transparentPixel) {\n\t\t\t\t\t\t\tint red = pixel & redMask;\n\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;\n\t\t\t\t\t\t\tint green = pixel & greenMask;\n\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;\n\t\t\t\t\t\t\tint blue = pixel & blueMask;\n\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\n\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tinit (device, newData);\n\t\t\tif (device.tracking) device.new_Object(this);\t\n\t\t\treturn;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n}",
        "accuracyTokens" : 0.9978494623655914,
        "accuracyCharacters" : 0.9997860047078965
      } ],
      "memberId" : "a26d756e4fdba750a38ac1d9fb95d44f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1c70972bfbe39a9f87e858e5e97e923ee244c636",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (device == null) device = Device.getDevice();\n\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tthis.device = device;\n\tif (srcImage == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (srcImage.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tswitch (flag) {\n\t\tcase SWT.IMAGE_COPY: {\n\t\t\tRectangle r = srcImage.getBounds();\n\t\t\tthis.type = srcImage.type;\n\t\t\tswitch (type) {\n\t\t\t\tcase SWT.BITMAP:\n\t\t\t\t\t/* Get the HDC for the device */\n\t\t\t\t\tint hDC = device.internal_new_GC(null);\n\t\t\t\t\t\n\t\t\t\t\t/* Copy the bitmap */\n\t\t\t\t\tint hdcSource = OS.CreateCompatibleDC(hDC);\n\t\t\t\t\tint hdcDest = OS.CreateCompatibleDC(hDC);\n\t\t\t\t\tint hOldSrc = OS.SelectObject(hdcSource, srcImage.handle);\n\t\t\t\t\thandle = OS.CreateCompatibleBitmap(hdcSource, r.width, r.height);\n\t\t\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\t\tint hOldDest = OS.SelectObject(hdcDest, handle);\n\t\t\t\t\tOS.BitBlt(hdcDest, 0, 0, r.width, r.height, hdcSource, 0, 0, OS.SRCCOPY);\n\t\t\t\t\tOS.SelectObject(hdcSource, hOldSrc);\n\t\t\t\t\tOS.SelectObject(hdcDest, hOldDest);\n\t\t\t\t\tOS.DeleteDC(hdcSource);\n\t\t\t\t\tOS.DeleteDC(hdcDest);\n\n\t\t\t\t\t/* Release the HDC for the device */\n\t\t\t\t\tdevice.internal_dispose_GC(hDC, null);\n\n\t\t\t\t\ttransparentPixel = srcImage.transparentPixel;\n\t\t\t\t\talpha = srcImage.alpha;\n\t\t\t\t\tif (srcImage.alphaData != null) {\n\t\t\t\t\t\talphaData = new byte[srcImage.alphaData.length];\n\t\t\t\t\t\tSystem.arraycopy(srcImage.alphaData, 0, alphaData, 0, alphaData.length);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SWT.ICON:\n\t\t\t\t\tif (OS.IsWinCE) {\n\t\t\t\t\t\tinit(device, srcImage.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandle = OS.CopyImage(srcImage.handle, OS.IMAGE_ICON, r.width, r.height, 0);\n\t\t\t\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSWT.error(SWT.ERROR_UNSUPPORTED_FORMAT);\n\t\t\t}\n\t\t\tif (device.tracking) device.new_Object(this);\n\t\t\treturn;\n\t\t}\n\t\tcase SWT.IMAGE_DISABLE: {\n\t\t\tRectangle r = srcImage.getBounds();\n\t\t\tthis.type = srcImage.type;\n\t\t\tbyte[] rgbBwBitmapInfo = {\n\t\t\t\t40,0,0,0, /* biSize */\n\t\t\t\t(byte)(r.width & 0xFF), /* biWidth */\n\t\t\t\t(byte)((r.width & 0xFF00) >> 8),\n\t\t\t\t(byte)((r.width & 0xFF0000) >> 16),\n\t\t\t\t(byte)((r.width & 0xFF000000) >> 24),\n\t\t\t\t(byte)(r.height & 0xFF), /* biHeight */\n\t\t\t\t(byte)((r.height & 0xFF00) >> 8),\n\t\t\t\t(byte)((r.height & 0xFF0000) >> 16),\n\t\t\t\t(byte)((r.height & 0xFF000000) >> 24),\n\t\t\t\t1,0, /* biPlanes */\n\t\t\t\t1,0, /* biBitCount */\n\t\t\t\t0,0,0,0, /* biCompression */\n\t\t\t\t0,0,0,0, /* biSizeImage */\n\t\t\t\t0,0,0,0, /* biXPelsPerMeter */\n\t\t\t\t0,0,0,0, /* biYPelsPerMeter */\n\t\t\t\t0,0,0,0, /* biClrUsed */\n\t\t\t\t0,0,0,0, /* biClrImportant */\n\t\t\t\t0,0,0,0, /* First color: black */\n\t\t\t\t(byte)0xFF,(byte)0xFF,(byte)0xFF,0 /* Second color: white */\n\t\t\t};\n\n\t\t\t/* Get the HDC for the device */\n\t\t\tint hDC = device.internal_new_GC(null);\n\n\t\t\t/* Source DC */\n\t\t\tint hdcSource = OS.CreateCompatibleDC(hDC);\n\t\t\tif (hdcSource == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t/* Monochrome (Intermediate) DC */\n\t\t\tint bwDC = OS.CreateCompatibleDC(hdcSource);\n\t\t\tif (bwDC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t/* Destination DC */\n\t\t\tint hdcBmp = OS.CreateCompatibleDC(hDC);\n\t\t\tif (hdcBmp == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t/* Monochrome (Intermediate) DIB section */\n\t\t\tint[] pbitsBW = new int[1];\n\t\t\tint hbmBW = OS.CreateDIBSection(bwDC, rgbBwBitmapInfo, OS.DIB_RGB_COLORS, pbitsBW, 0, 0);\n\t\t\tif (hbmBW == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tswitch (type) {\n\t\t\t\tcase SWT.BITMAP:\n\t\t\t\t\t/* Attach the bitmap to the source DC */\n\t\t\t\t\tint hOldSrc = OS.SelectObject(hdcSource, srcImage.handle);\n\t\t\t\t\t/* Create the destination bitmap */\n\t\t\t\t\thandle = OS.CreateCompatibleBitmap(hDC, r.width, r.height);\n\t\t\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\t\t/* Attach the DIB section and the new bitmap to the DCs */\n\t\t\t\t\tint hOldBw = OS.SelectObject(bwDC, hbmBW);\n\t\t\t\t\tint hOldBmp = OS.SelectObject(hdcBmp, handle);\n\t\t\t\t\t/* BitBlt the bitmap into the monochrome DIB section */\n\t\t\t\t\tOS.BitBlt(bwDC, 0, 0, r.width, r.height, hdcSource, 0, 0, OS.SRCCOPY);\n\t\t\t\t\t/* Paint the destination rectangle in gray */\n\t\t\t\t\tRECT rect = new RECT();\n\t\t\t\t\trect.left = 0;\n\t\t\t\t\trect.top = 0;\n\t\t\t\t\trect.right = r.width;\n\t\t\t\t\trect.bottom = r.height;\n\t\t\t\t\tOS.FillRect(hdcBmp, rect, OS.GetSysColorBrush(OS.COLOR_3DFACE));\n\t\t\t\t\t/*\n\t\t\t\t\t * BitBlt the black bits in the monochrome bitmap into\n\t\t\t\t\t * COLOR_3DHILIGHT bits in the destination DC.\n\t\t\t\t\t * The magic ROP comes from Charles Petzold's book\n\t\t\t\t\t */\n\t\t\t\t\tint hb = OS.CreateSolidBrush(OS.GetSysColor(OS.COLOR_3DHILIGHT));\n\t\t\t\t\tint oldBrush = OS.SelectObject(hdcBmp, hb);\n\t\t\t\t\tOS.BitBlt(hdcBmp, 1, 1, r.width, r.height, bwDC, 0, 0, 0xB8074A);\n\t\t\t\t\t/*\n\t\t\t\t\t * BitBlt the black bits in the monochrome bitmap into \n\t\t\t\t\t * COLOR_3DSHADOW bits in the destination DC.\n\t\t\t\t\t */\n\t\t\t\t\thb = OS.CreateSolidBrush(OS.GetSysColor(OS.COLOR_3DSHADOW));\n\t\t\t\t\tOS.DeleteObject(OS.SelectObject(hdcBmp, hb));\n\t\t\t\t\tOS.BitBlt(hdcBmp, 0, 0, r.width, r.height, bwDC, 0, 0, 0xB8074A);\n\t\t\t\t\tOS.DeleteObject(OS.SelectObject(hdcBmp, oldBrush));\n\t\t\t\t\t/* Free resources */\n\t\t\t\t\tOS.SelectObject(hdcSource, hOldSrc);\n\t\t\t\t\tOS.SelectObject(hdcBmp, hOldBmp);\n\t\t\t\t\tOS.SelectObject(bwDC, hOldBw);\n\t\t\t\t\tOS.DeleteDC(hdcSource);\n\t\t\t\t\tOS.DeleteDC(bwDC);\n\t\t\t\t\tOS.DeleteDC(hdcBmp);\n\t\t\t\t\tOS.DeleteObject(hbmBW);\n\t\t\t\t\t\n\t\t\t\t\t/* Release the HDC for the device */\n\t\t\t\t\tdevice.internal_dispose_GC(hDC, null);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SWT.ICON:\n\t\t\t\t\t/* Get icon information */\n\t\t\t\t\tICONINFO iconInfo = new ICONINFO();\n\t\t\t\t\tif (OS.IsWinCE) {\n\t\t\t\t\t\tGetIconInfo(srcImage, iconInfo);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!OS.GetIconInfo(srcImage.handle, iconInfo))\n\t\t\t\t\t\t\tSWT.error(SWT.ERROR_INVALID_IMAGE);\n\t\t\t\t\t}\n\t\t\t\t\tint hdcMask = OS.CreateCompatibleDC(hDC);\n\t\t\t\t\t/* Create the destination bitmaps */\n\t\t\t\t\tif (iconInfo.hbmColor == 0)\n\t\t\t\t\t\thOldSrc = OS.SelectObject(hdcSource, iconInfo.hbmMask);\n\t\t\t\t\telse\n\t\t\t\t\t\thOldSrc = OS.SelectObject(hdcSource, iconInfo.hbmColor);\n\t\t\t\t\tint newHbmp = OS.CreateCompatibleBitmap(hdcSource, r.width, r.height);\n\t\t\t\t\tif (newHbmp == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\t\tint newHmask = OS.CreateBitmap(r.width, r.height, 1, 1, null);\n\t\t\t\t\tif (newHmask == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\t\t/* BitBlt the source mask into the destination mask */\n\t\t\t\t\tint hOldMask = OS.SelectObject(hdcMask, newHmask);\n\t\t\t\t\tif (iconInfo.hbmColor != 0)\n\t\t\t\t\t\tOS.SelectObject(hdcSource, iconInfo.hbmMask);\n\t\t\t\t\tOS.SelectObject(hdcSource, iconInfo.hbmMask);\n\t\t\t\t\tOS.BitBlt(hdcMask, 0, 0, r.width, r.height, hdcSource, 0, 0, OS.SRCCOPY);\n\t\t\t\t\t/* Attach the monochrome DIB section and the destination bitmap to the DCs */\n\t\t\t\t\thOldBw = OS.SelectObject(bwDC, hbmBW);\n\t\t\t\t\t/* BitBlt the bitmap into the monochrome DIB section */\n\t\t\t\t\tif (iconInfo.hbmColor == 0) {\n\t\t\t\t\t\tOS.SelectObject(hdcSource, iconInfo.hbmMask);\n\t\t\t\t\t\tOS.BitBlt(bwDC, 0, 0, r.width, r.height, hdcSource, 0, r.height, OS.SRCCOPY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOS.SelectObject(hdcSource, iconInfo.hbmColor);\n\t\t\t\t\t\tOS.BitBlt(bwDC, 0, 0, r.width, r.height, hdcSource, 0, 0, OS.SRCCOPY);\n\t\t\t\t\t}\n\t\t\t\t\t/* Paint the destination rectangle in grey */\n\t\t\t\t\trect = new RECT();\n\t\t\t\t\trect.left = 0;\n\t\t\t\t\trect.top = 0;\n\t\t\t\t\trect.right = r.width;\n\t\t\t\t\trect.bottom = r.height;\n\t\t\t\t\thOldBmp = OS.SelectObject(hdcBmp, newHbmp);\n\t\t\t\t\tOS.FillRect(hdcBmp, rect, OS.GetSysColorBrush(OS.COLOR_3DFACE));\n\t\t\t\t\t/*\n\t\t\t\t\t * BitBlt the black bits in the monochrome bitmap into\n\t\t\t\t\t * COLOR_3DHILIGHT bits in the destination DC.\n\t\t\t\t\t * The magic ROP comes from Charles Petzold's book\n\t\t\t\t\t */\n\t\t\t\t\thb = OS.CreateSolidBrush(OS.GetSysColor(OS.COLOR_3DSHADOW));\n\t\t\t\t\toldBrush = OS.SelectObject(hdcBmp, hb);\n\t\t\t\t\tOS.BitBlt(hdcBmp, 0, 0, r.width, r.height, bwDC, 0, 0, 0xB8074A);\n\t\t\t\t\t/* Invert mask into hdcBw */\n\t\t\t\t\tOS.BitBlt(bwDC, 0, 0, r.width, r.height, hdcMask, 0, 0, OS.NOTSRCCOPY);\n\t\t\t\t\t/* Select black brush into destination */\n\t\t\t\t\thb = OS.CreateSolidBrush(0);\n\t\t\t\t\tOS.DeleteObject(OS.SelectObject(hdcBmp, hb));\n\t\t\t\t\t/*\n\t\t\t\t\t * Copy black bits from monochrome bitmap into black bits in the\n\t\t\t\t\t * destination DC.\n\t\t\t\t\t */\n\t\t\t\t\tOS.BitBlt(hdcBmp, 0, 0, r.width, r.height, bwDC, 0, 0, 0xB8074A);\n\t\t\t\t\tOS.DeleteObject(OS.SelectObject(hdcBmp, oldBrush));\n\t\t\t\t\t/* Free resources */\n\t\t\t\t\tOS.SelectObject(hdcSource, hOldSrc);\n\t\t\t\t\tOS.DeleteDC(hdcSource);\n\t\t\t\t\tOS.SelectObject(bwDC, hOldBw);\n\t\t\t\t\tOS.DeleteDC(bwDC);\n\t\t\t\t\tOS.SelectObject(hdcBmp, hOldBmp);\n\t\t\t\t\tOS.DeleteDC(hdcBmp);\n\t\t\t\t\tOS.SelectObject(hdcMask, hOldMask);\n\t\t\t\t\tOS.DeleteDC(hdcMask);\n\t\t\t\t\tOS.DeleteObject(hbmBW);\n\t\t\t\t\t\n\t\t\t\t\t/* Release the HDC for the device */\n\t\t\t\t\tdevice.internal_dispose_GC(hDC, null);\n\t\t\t\n\t\t\t\t\t/* Create the new iconinfo */\n\t\t\t\t\tICONINFO newIconInfo = new ICONINFO();\n\t\t\t\t\tnewIconInfo.fIcon = iconInfo.fIcon;\n\t\t\t\t\tnewIconInfo.hbmMask = newHmask;\n\t\t\t\t\tnewIconInfo.hbmColor = newHbmp;\n\t\t\t\t\t/* Create the new icon */\n\t\t\t\t\thandle = OS.CreateIconIndirect(newIconInfo);\n\t\t\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\t\t/* Free bitmaps */\n\t\t\t\t\tOS.DeleteObject(newHbmp);\n\t\t\t\t\tOS.DeleteObject(newHmask);\n\t\t\t\t\tif (iconInfo.hbmColor != 0)\n\t\t\t\t\t\tOS.DeleteObject(iconInfo.hbmColor);\n\t\t\t\t\tOS.DeleteObject(iconInfo.hbmMask);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSWT.error(SWT.ERROR_UNSUPPORTED_FORMAT);\n\t\t\t}\n\t\t\tif (device.tracking) device.new_Object(this);\n\t\t\treturn;\n\t\t}\n\t\tcase SWT.IMAGE_GRAY: {\n\t\t\tRectangle r = srcImage.getBounds();\n\t\t\tImageData data = srcImage.getImageData();\n\t\t\tPaletteData palette = data.palette;\n\t\t\tImageData newData = data;\n\t\t\tif (!palette.isDirect) {\n\t\t\t\t/* Convert the palette entries to gray. */\n\t\t\t\tRGB [] rgbs = palette.getRGBs();\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\tif (data.transparentPixel != i) {\n\t\t\t\t\t\tRGB color = rgbs [i];\n\t\t\t\t\t\tint red = color.red;\n\t\t\t\t\t\tint green = color.green;\n\t\t\t\t\t\tint blue = color.blue;\n\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\tcolor.red = color.green = color.blue = intensity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewData.palette = new PaletteData(rgbs);\n\t\t\t} else {\n\t\t\t\t/* Create a 8 bit depth image data with a gray palette. */\n\t\t\t\tRGB[] rgbs = new RGB[256];\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\trgbs[i] = new RGB(i, i, i);\n\t\t\t\t}\n\t\t\t\tnewData = new ImageData(r.width, r.height, 8, new PaletteData(rgbs));\n\t\t\t\tnewData.maskData = data.maskData;\n\t\t\t\tnewData.maskPad = data.maskPad;\n\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254;\n\n\t\t\t\t/* Convert the pixels. */\n\t\t\t\tint[] scanline = new int[r.width];\n\t\t\t\tint redMask = palette.redMask;\n\t\t\t\tint greenMask = palette.greenMask;\n\t\t\t\tint blueMask = palette.blueMask;\n\t\t\t\tint redShift = palette.redShift;\n\t\t\t\tint greenShift = palette.greenShift;\n\t\t\t\tint blueShift = palette.blueShift;\n\t\t\t\tfor (int y=0; y<r.height; y++) {\n\t\t\t\t\tint offset = y * newData.bytesPerLine;\n\t\t\t\t\tdata.getPixels(0, y, r.width, scanline, 0);\n\t\t\t\t\tfor (int x=0; x<r.width; x++) {\n\t\t\t\t\t\tint pixel = scanline[x];\n\t\t\t\t\t\tif (pixel != data.transparentPixel) {\n\t\t\t\t\t\t\tint red = pixel & redMask;\n\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;\n\t\t\t\t\t\t\tint green = pixel & greenMask;\n\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;\n\t\t\t\t\t\t\tint blue = pixel & blueMask;\n\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\n\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tinit (device, newData);\n\t\t\tif (device.tracking) device.new_Object(this);\n\t\t\treturn;\n\t\t}\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 0.999653169166739
      } ],
      "memberId" : "c27fe3a4ec65787980ae9f0766c84151"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1c70972bfbe39a9f87e858e5e97e923ee244c636",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (device == null) device = Device.getDevice();\n\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tthis.device = device;\n\tif (srcImage == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (srcImage.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint xDisplay = device.xDisplay;\n\tthis.type = srcImage.type;\n\tthis.mask = 0;\n\tint[] unused = new int[1];\n\tint[] w = new int[1];\n\tint[] h = new int[1];\n \tOS.XGetGeometry(xDisplay, srcImage.pixmap, unused, unused, unused, w, h, unused, unused);\n \tint width = w[0];\n \tint height = h[0];\n\tint drawable = OS.XDefaultRootWindow(xDisplay);\n\t/* Don't create the mask here if flag is SWT.IMAGE_GRAY. See below.*/\n\tif (flag != SWT.IMAGE_GRAY && (srcImage.mask != 0 || srcImage.transparentPixel != -1)) {\n\t\t/* Generate the mask if necessary. */\n\t\tif (srcImage.transparentPixel != -1) srcImage.createMask();\n\t\tint mask = OS.XCreatePixmap(xDisplay, drawable, width, height, 1);\n\t\tint gc = OS.XCreateGC(xDisplay, mask, 0, null);\n\t\tOS.XCopyArea(xDisplay, srcImage.mask, mask, gc, 0, 0, width, height, 0, 0);\n\t\tOS.XFreeGC(xDisplay, gc);\n\t\tthis.mask = mask;\n\t\t/* Destroy the image mask if the there is a GC created on the image */\n\t\tif (srcImage.transparentPixel != -1 && srcImage.memGC != null) srcImage.destroyMask();\n\t}\n\tswitch (flag) {\n\t\tcase SWT.IMAGE_COPY:\n\t\t\tint[] depth = new int[1];\n\t\t\tOS.XGetGeometry(xDisplay, srcImage.pixmap, unused, unused, unused, unused, unused, unused, depth);\n\t\t\tint pixmap = OS.XCreatePixmap(xDisplay, drawable, width, height, depth[0]);\n\t\t\tint gc = OS.XCreateGC(xDisplay, pixmap, 0, null);\n\t\t\tOS.XCopyArea(xDisplay, srcImage.pixmap, pixmap, gc, 0, 0, width, height, 0, 0);\n\t\t\tOS.XFreeGC(xDisplay, gc);\n\t\t\tthis.pixmap = pixmap;\n\t\t\ttransparentPixel = srcImage.transparentPixel;\n\t\t\talpha = srcImage.alpha;\n\t\t\tif (srcImage.alphaData != null) {\n\t\t\t\talphaData = new byte[srcImage.alphaData.length];\n\t\t\t\tSystem.arraycopy(srcImage.alphaData, 0, alphaData, 0, alphaData.length);\n\t\t\t}\n\t\t\tif (device.tracking) device.new_Object(this);\n\t\t\treturn;\n\t\tcase SWT.IMAGE_DISABLE:\n\t\t\t/* Get src image data */\n\t\t\tXImage srcXImage = new XImage();\n\t\t\tint srcXImagePtr = OS.XGetImage(xDisplay, srcImage.pixmap, 0, 0, width, height, OS.AllPlanes, OS.ZPixmap);\n\t\t\tOS.memmove(srcXImage, srcXImagePtr, XImage.sizeof);\n\t\t\tbyte[] srcData = new byte[srcXImage.bytes_per_line * srcXImage.height];\n\t\t\tOS.memmove(srcData, srcXImage.data, srcData.length);\n\t\t\t/* Create destination image */\n\t\t\tint destPixmap = OS.XCreatePixmap(xDisplay, drawable, width, height, srcXImage.depth);\n\t\t\tint visualPtr = OS.XDefaultVisual(xDisplay, OS.XDefaultScreen(xDisplay));\n\t\t\tint screenDepth = OS.XDefaultDepthOfScreen(OS.XDefaultScreenOfDisplay(xDisplay));\t\t\t\n\t\t\tint destXImagePtr = OS.XCreateImage(xDisplay, visualPtr, screenDepth, OS.ZPixmap, 0, 0, width, height, srcXImage.bitmap_pad, 0);\n\t\t\tXImage destXImage = new XImage();\n\t\t\tOS.memmove(destXImage, destXImagePtr, XImage.sizeof);\n\t\t\tint bufSize = destXImage.bytes_per_line * destXImage.height;\n\t\t\tint bufPtr = OS.XtMalloc(bufSize);\n\t\t\tdestXImage.data = bufPtr;\n\t\t\tOS.memmove(destXImagePtr, destXImage, XImage.sizeof);\n\t\t\tbyte[] destData = new byte[bufSize];\n\t\t\t/* Find the colors to map to */\n\t\t\tColor zeroColor = device.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);\n\t\t\tColor oneColor = device.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);\n\t\t\tint zeroPixel = zeroColor.handle.pixel;\n\t\t\tint onePixel = oneColor.handle.pixel;\n\t\t\tswitch (srcXImage.bits_per_pixel) {\n\t\t\t\tcase 1:\n\t\t\t\t\t/*\n\t\t\t\t\t * Nothing we can reasonably do here except copy\n\t\t\t\t\t * the bitmap; we can't make it a higher color depth.\n\t\t\t\t\t * Short-circuit the rest of the code and return.\n\t\t\t\t\t */\n\t\t\t\t\tgc = OS.XCreateGC(xDisplay, drawable, 0, null);\n\t\t\t\t\tpixmap = OS.XCreatePixmap(xDisplay, drawable, width, height, 1);\n\t\t\t\t\tOS.XCopyArea(xDisplay, srcImage.pixmap, pixmap, gc, 0, 0, width, height, 0, 0);\n\t\t\t\t\tOS.XDestroyImage(srcXImagePtr);\n\t\t\t\t\tOS.XDestroyImage(destXImagePtr);\n\t\t\t\t\tOS.XFreeGC(xDisplay, gc);\n\t\t\t\t\treturn;\n\t\t\t\tcase 4:\n\t\t\t\t\tSWT.error(SWT.ERROR_NOT_IMPLEMENTED);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tint index = 0;\n\t\t\t\t\tint srcPixel, r, g, b;\n\t\t\t\t\tXColor[] colors = new XColor[256];\n\t\t\t\t\tint colormap = OS.XDefaultColormap(xDisplay, OS.XDefaultScreen(xDisplay));\n\t\t\t\t\tfor (int y = 0; y < srcXImage.height; y++) {\n\t\t\t\t\t\tfor (int x = 0; x < srcXImage.bytes_per_line; x++) {\n\t\t\t\t\t\t\tsrcPixel = srcData[index + x] & 0xFF;\n\t\t\t\t\t\t\t/* Get the RGB values of srcPixel */\n\t\t\t\t\t\t\tif (colors[srcPixel] == null) {\n\t\t\t\t\t\t\t\tXColor color = new XColor();\n\t\t\t\t\t\t\t\tcolor.pixel = srcPixel;\n\t\t\t\t\t\t\t\tOS.XQueryColor(xDisplay, colormap, color);\n\t\t\t\t\t\t\t\tcolors[srcPixel] = color;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tXColor xColor = colors[srcPixel];\n\t\t\t\t\t\t\tr = (xColor.red >> 8) & 0xFF;\n\t\t\t\t\t\t\tg = (xColor.green >> 8) & 0xFF;\n\t\t\t\t\t\t\tb = (xColor.blue >> 8) & 0xFF;\n\t\t\t\t\t\t\t/* See if the rgb maps to 0 or 1 */\n\t\t\t\t\t\t\tif ((r * r + g * g + b * b) < 98304) {\n\t\t\t\t\t\t\t\t/* Map down to 0 */\n\t\t\t\t\t\t\t\tdestData[index + x] = (byte)zeroPixel;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* Map up to 1 */\n\t\t\t\t\t\t\t\tdestData[index + x] = (byte)onePixel;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex += srcXImage.bytes_per_line;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 16:\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t/* Get masks */\n\t\t\t\t\tVisual visual = new Visual();\n\t\t\t\t\tOS.memmove(visual, visualPtr, Visual.sizeof);\n\t\t\t\t\tint redMask = visual.red_mask;\n\t\t\t\t\tint greenMask = visual.green_mask;\n\t\t\t\t\tint blueMask = visual.blue_mask;\n\t\t\t\t\t/* Calculate mask shifts */\n\t\t\t\t\tint[] shift = new int[1];\n\t\t\t\t\tgetOffsetForMask(16, redMask, srcXImage.byte_order, shift);\n\t\t\t\t\tint rShift = 24 - shift[0];\n\t\t\t\t\tgetOffsetForMask(16, greenMask, srcXImage.byte_order, shift);\n\t\t\t\t\tint gShift = 24 - shift[0];\n\t\t\t\t\tgetOffsetForMask(16, blueMask, srcXImage.byte_order, shift);\n\t\t\t\t\tint bShift = 24 - shift[0];\n\t\t\t\t\tbyte zeroLow = (byte)(zeroPixel & 0xFF);\n\t\t\t\t\tbyte zeroHigh = (byte)((zeroPixel >> 8) & 0xFF);\n\t\t\t\t\tbyte oneLow = (byte)(onePixel & 0xFF);\n\t\t\t\t\tbyte oneHigh = (byte)((onePixel >> 8) & 0xFF);\n\t\t\t\t\tfor (int y = 0; y < srcXImage.height; y++) {\n\t\t\t\t\t\tint xIndex = 0;\n\t\t\t\t\t\tfor (int x = 0; x < srcXImage.bytes_per_line; x += 2) {\n\t\t\t\t\t\t\tsrcPixel = ((srcData[index + xIndex + 1] & 0xFF) << 8) | (srcData[index + xIndex] & 0xFF);\n\t\t\t\t\t\t\tr = (srcPixel & redMask) << rShift >> 16;\n\t\t\t\t\t\t\tg = (srcPixel & greenMask) << gShift >> 16;\n\t\t\t\t\t\t\tb = (srcPixel & blueMask) << bShift >> 16;\n\t\t\t\t\t\t\t/* See if the rgb maps to 0 or 1 */\n\t\t\t\t\t\t\tif ((r * r + g * g + b * b) < 98304) {\n\t\t\t\t\t\t\t\t/* Map down to 0 */\n\t\t\t\t\t\t\t\tdestData[index + xIndex] = zeroLow;\n\t\t\t\t\t\t\t\tdestData[index + xIndex + 1] = zeroHigh;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* Map up to 1 */\n\t\t\t\t\t\t\t\tdestData[index + xIndex] = oneLow;\n\t\t\t\t\t\t\t\tdestData[index + xIndex + 1] = oneHigh;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\txIndex += srcXImage.bits_per_pixel / 8;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex += srcXImage.bytes_per_line;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 24:\n\t\t\t\tcase 32:\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t/* Get masks */\n\t\t\t\t\tvisual = new Visual();\n\t\t\t\t\tOS.memmove(visual, visualPtr, Visual.sizeof);\n\t\t\t\t\tredMask = visual.red_mask;\n\t\t\t\t\tgreenMask = visual.green_mask;\n\t\t\t\t\tblueMask = visual.blue_mask;\n\t\t\t\t\t/* Calculate mask shifts */\n\t\t\t\t\tshift = new int[1];\n\t\t\t\t\tgetOffsetForMask(srcXImage.bits_per_pixel, redMask, srcXImage.byte_order, shift);\n\t\t\t\t\trShift = shift[0];\n\t\t\t\t\tgetOffsetForMask(srcXImage.bits_per_pixel, greenMask, srcXImage.byte_order, shift);\n\t\t\t\t\tgShift = shift[0];\n\t\t\t\t\tgetOffsetForMask(srcXImage.bits_per_pixel, blueMask, srcXImage.byte_order, shift);\n\t\t\t\t\tbShift = shift[0];\n\t\t\t\t\tbyte zeroR = (byte)zeroColor.getRed();\n\t\t\t\t\tbyte zeroG = (byte)zeroColor.getGreen();\n\t\t\t\t\tbyte zeroB = (byte)zeroColor.getBlue();\n\t\t\t\t\tbyte oneR = (byte)oneColor.getRed();\n\t\t\t\t\tbyte oneG = (byte)oneColor.getGreen();\n\t\t\t\t\tbyte oneB = (byte)oneColor.getBlue();\n\t\t\t\t\tfor (int y = 0; y < srcXImage.height; y++) {\n\t\t\t\t\t\tint xIndex = 0;\n\t\t\t\t\t\tfor (int x = 0; x < srcXImage.width; x++) {\n\t\t\t\t\t\t\tr = srcData[index + xIndex + rShift] & 0xFF;\n\t\t\t\t\t\t\tg = srcData[index + xIndex + gShift] & 0xFF;\n\t\t\t\t\t\t\tb = srcData[index + xIndex + bShift] & 0xFF;\n\t\t\t\t\t\t\t/* See if the rgb maps to 0 or 1 */\n\t\t\t\t\t\t\tif ((r * r + g * g + b * b) < 98304) {\n\t\t\t\t\t\t\t\t/* Map down to 0 */\n\t\t\t\t\t\t\t\tdestData[index + xIndex + rShift] = zeroR;\n\t\t\t\t\t\t\t\tdestData[index + xIndex + gShift] = zeroG;\n\t\t\t\t\t\t\t\tdestData[index + xIndex + bShift] = zeroB;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* Map up to 1 */\n\t\t\t\t\t\t\t\tdestData[index + xIndex + rShift] = oneR;\n\t\t\t\t\t\t\t\tdestData[index + xIndex + gShift] = oneG;\n\t\t\t\t\t\t\t\tdestData[index + xIndex + bShift] = oneB;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\txIndex += destXImage.bits_per_pixel / 8;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex += srcXImage.bytes_per_line;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSWT.error(SWT.ERROR_INVALID_IMAGE);\n\t\t\t}\n\t\t\tOS.memmove(destXImage.data, destData, destData.length);\n\t\t\tgc = OS.XCreateGC(xDisplay, destPixmap, 0, null);\n\t\t\tOS.XPutImage(xDisplay, destPixmap, gc, destXImagePtr, 0, 0, 0, 0, width, height);\n\t\t\tOS.XDestroyImage(destXImagePtr);\n\t\t\tOS.XDestroyImage(srcXImagePtr);\n\t\t\tOS.XFreeGC(xDisplay, gc);\n\t\t\tthis.pixmap = destPixmap;\n\t\t\tif (device.tracking) device.new_Object(this);\n\t\t\treturn;\n\t\tcase SWT.IMAGE_GRAY:\n\t\t\tImageData data = srcImage.getImageData();\n\t\t\tPaletteData palette = data.palette;\n\t\t\tImageData newData = data;\n\t\t\tif (!palette.isDirect) {\n\t\t\t\t/* Convert the palette entries to gray. */\n\t\t\t\tRGB [] rgbs = palette.getRGBs();\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\tif (data.transparentPixel != i) {\n\t\t\t\t\t\tRGB color = rgbs [i];\n\t\t\t\t\t\tint red = color.red;\n\t\t\t\t\t\tint green = color.green;\n\t\t\t\t\t\tint blue = color.blue;\n\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\tcolor.red = color.green = color.blue = intensity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewData.palette = new PaletteData(rgbs);\n\t\t\t} else {\n\t\t\t\t/* Create a 8 bit depth image data with a gray palette. */\n\t\t\t\tRGB[] rgbs = new RGB[256];\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\trgbs[i] = new RGB(i, i, i);\n\t\t\t\t}\n\t\t\t\tnewData = new ImageData(width, height, 8, new PaletteData(rgbs));\n\t\t\t\tnewData.maskData = data.maskData;\n\t\t\t\tnewData.maskPad = data.maskPad;\n\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254;\n\n\t\t\t\t/* Convert the pixels. */\n\t\t\t\tint[] scanline = new int[width];\n\t\t\t\tint redMask = palette.redMask;\n\t\t\t\tint greenMask = palette.greenMask;\n\t\t\t\tint blueMask = palette.blueMask;\n\t\t\t\tint redShift = palette.redShift;\n\t\t\t\tint greenShift = palette.greenShift;\n\t\t\t\tint blueShift = palette.blueShift;\n\t\t\t\tfor (int y=0; y<height; y++) {\n\t\t\t\t\tint offset = y * newData.bytesPerLine;\n\t\t\t\t\tdata.getPixels(0, y, width, scanline, 0);\n\t\t\t\t\tfor (int x=0; x<width; x++) {\n\t\t\t\t\t\tint pixel = scanline[x];\n\t\t\t\t\t\tif (pixel != data.transparentPixel) {\n\t\t\t\t\t\t\tint red = pixel & redMask;\n\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;\n\t\t\t\t\t\t\tint green = pixel & greenMask;\n\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;\n\t\t\t\t\t\t\tint blue = pixel & blueMask;\n\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\n\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tinit (device, newData);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (device.tracking) device.new_Object(this);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 0.9999113867966327
      } ],
      "memberId" : "4d17d67894099caffe78f6bebdcf9240"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9992831541218639,
    "accuracyCharactersMin" : 0.999783520223756,
    "patternOriginal" : "\n\t//# match (original, (srcImage,length,red,green,blue,r,width,height)) {\n\tswitch (flag) {\n\t\tcase SWT.IMAGE_COPY:\n\t\t\t//# wildcard stmt(ARES0);\n\t\tcase SWT.IMAGE_DISABLE:\n\t\t\t//# wildcard stmt(ARES1);\n\t\tcase SWT.IMAGE_GRAY:\n\t\t\t//# wildcard stmt(ARES2);\n\t\t\tImageData data = srcImage.getImageData();\n\t\t\tPaletteData palette = data.palette;\n\t\t\tImageData newData = data;\n\t\t\tif (!palette.isDirect) {\n\t\t\t\t\n\t\t\t\tRGB [] rgbs = palette.getRGBs();\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\tif (data.transparentPixel != i) {\n\t\t\t\t\t\tRGB color = rgbs [i];\n\t\t\t\t\t\tint red = color.red;\n\t\t\t\t\t\tint green = color.green;\n\t\t\t\t\t\tint blue = color.blue;\n\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\tcolor.red = color.green = color.blue = intensity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewData.palette = new PaletteData(rgbs);\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tRGB[] rgbs = new RGB[256];\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\trgbs[i] = new RGB(i, i, i);\n\t\t\t\t}\n\t\t\t\t//# wildcard expr(ARES3, r.width, 1)\n\t\t\t\t//# wildcard expr(ARES4, r.height, 1)\n\t\t\t\tnewData = new ImageData(r.width, r.height, 8, new PaletteData(rgbs));\n\t\t\t\tnewData.maskData = data.maskData;\n\t\t\t\tnewData.maskPad = data.maskPad;\n\n\t\t\t\t\n\t\t\t\t//# wildcard expr(ARES5, new int[r.width], 1)\t\t\t\t\n\t\t\t\tint[] scanline = new int[r.width];\n\t\t\t\tint redMask = palette.redMask;\n\t\t\t\tint greenMask = palette.greenMask;\n\t\t\t\tint blueMask = palette.blueMask;\n\t\t\t\tint redShift = palette.redShift;\n\t\t\t\tint greenShift = palette.greenShift;\n\t\t\t\tint blueShift = palette.blueShift;\n\t\t\t\t//# wildcard expr(ARES6, r.height, 1)\n\t\t\t\tfor (int y=0; y<r.height; y++) {\n\t\t\t\t\tint offset = y * newData.bytesPerLine;\n\t\t\t\t\t//# wildcard expr(ARES7, r.width, 1)\n\t\t\t\t\tdata.getPixels(0, y, r.width, scanline, 0);\n\t\t\t\t\t//# wildcard expr(ARES8, r.width, 1)\n\t\t\t\t\tfor (int x=0; x<r.width; x++) {\n\t\t\t\t\t\tint pixel = scanline[x];\n\t\t\t\t\t\tint red = pixel & redMask;\n\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;\n\t\t\t\t\t\tint green = pixel & greenMask;\n\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;\n\t\t\t\t\t\tint blue = pixel & blueMask;\n\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\n\t\t\t\t\t\tnewData.data[offset++] =\n\t\t\t\t\t\t\t(byte)((red+red+green+green+green+green+green+blue) >> 3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//# wildcard stmt(ARES9);\n\t\t\tinit (device, newData);\t\n\t\t\t//# wildcard stmt(ARES10);\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tswitch (flag) {\n\t\tcase SWT.IMAGE_COPY:\n\t\t\t//# use (ARES0);\n\t\tcase SWT.IMAGE_DISABLE:\n\t\t\t//# use (ARES1);\n\t\tcase SWT.IMAGE_GRAY:\n\t\t\t//# use (ARES2);\n\t\t\tImageData data = srcImage.getImageData();\n\t\t\tPaletteData palette = data.palette;\n\t\t\tImageData newData = data;\n\t\t\tif (!palette.isDirect) {\n\t\t\t\t\n\t\t\t\tRGB [] rgbs = palette.getRGBs();\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\tif (data.transparentPixel != i) {\n\t\t\t\t\t\tRGB color = rgbs [i];\n\t\t\t\t\t\tint red = color.red;\n\t\t\t\t\t\tint green = color.green;\n\t\t\t\t\t\tint blue = color.blue;\n\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\tcolor.red = color.green = color.blue = intensity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewData.palette = new PaletteData(rgbs);\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tRGB[] rgbs = new RGB[256];\n\t\t\t\tfor (int i=0; i<rgbs.length; i++) {\n\t\t\t\t\trgbs[i] = new RGB(i, i, i);\n\t\t\t\t}\n\t\t\t\t//# use (ARES3, r.width, 1)\n\t\t\t\t//# use (ARES4, r.height, 1)\n\t\t\t\tnewData = new ImageData(r.width, r.height, 8, new PaletteData(rgbs));\n\t\t\t\tnewData.maskData = data.maskData;\n\t\t\t\tnewData.maskPad = data.maskPad;\n\t\t\t\tif (data.transparentPixel != -1) newData.transparentPixel = 254; \n\n\t\t\t\t\n\t\t\t\t//# use (ARES5, new int[r.width], 1) \t\t\t\t\n\t\t\t\tint[] scanline = new int[r.width];\n\t\t\t\tint redMask = palette.redMask;\n\t\t\t\tint greenMask = palette.greenMask;\n\t\t\t\tint blueMask = palette.blueMask;\n\t\t\t\tint redShift = palette.redShift;\n\t\t\t\tint greenShift = palette.greenShift;\n\t\t\t\tint blueShift = palette.blueShift;\n\t\t\t\t//# use (ARES6, r.height, 1)\n\t\t\t\tfor (int y=0; y<r.height; y++) {\n\t\t\t\t\tint offset = y * newData.bytesPerLine;\n\t\t\t\t\t//# use (ARES7, r.width, 1)\n\t\t\t\t\tdata.getPixels(0, y, r.width, scanline, 0);\n\t\t\t\t\t//# use (ARES8, r.width, 1)\n\t\t\t\t\tfor (int x=0; x<r.width; x++) {\n\t\t\t\t\t\tint pixel = scanline[x];\n\t\t\t\t\t\tif (pixel != data.transparentPixel) {\n\t\t\t\t\t\t\tint red = pixel & redMask;\n\t\t\t\t\t\t\tred = (redShift < 0) ? red >>> -redShift : red << redShift;\n\t\t\t\t\t\t\tint green = pixel & greenMask;\n\t\t\t\t\t\t\tgreen = (greenShift < 0) ? green >>> -greenShift : green << greenShift;\n\t\t\t\t\t\t\tint blue = pixel & blueMask;\n\t\t\t\t\t\t\tblue = (blueShift < 0) ? blue >>> -blueShift : blue << blueShift;\n\t\t\t\t\t\t\tint intensity = (red+red+green+green+green+green+green+blue) >> 3;\n\t\t\t\t\t\t\tif (newData.transparentPixel == intensity) intensity = 255;\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)intensity;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewData.data[offset] = (byte)254;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//# use (ARES9);\n\t\t\tinit (device, newData);\t\n\t\t\t//# use (ARES10);\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//# }",
    "patternCreationTimeInNanoSec" : 46061642721,
    "patternUseTimeInNanoSec" : 3361961663,
    "accuracyTokensMax" : 0.9992831541218639,
    "accuracyCharactersMax" : 0.999783520223756
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "103863",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (true, false);",
      "commitMsg" : "support Qt",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "aa605ad23dee4307b62423c9392e1cea",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
          "commitId2" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 27,
          "methodNumber2" : 27
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 254,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 249,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "16be6c3505d667bcbfbafa9a4baaec52",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "commitId2" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c24cd28b084a250eab29d0fbd70039ac",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "commitId2" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 36,
          "methodNumber2" : 36
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : " Bug 103863 -  Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9d71014d5289df96d7ac024a1a0a6719",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "commitId2" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 33,
          "methodNumber2" : 33
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f22296af2bd4bcb7a22f0f7799cc5c9d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "commitId2" : "c1d0126fc6c64fd6e2473353b2a4a680639a6fba",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 38,
          "methodNumber2" : 38
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "055496c6c92bc85237a9fd1da736581b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "commitId2" : "c1d0126fc6c64fd6e2473353b2a4a680639a6fba",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 31,
          "methodNumber2" : 31
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (true, false);",
      "commitMsg" : " Bug 103863 -  Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "141347f08491a97dc787ac9908212362",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "commitId2" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 35,
          "methodNumber2" : 35
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 254,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 249,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (true, false);",
      "commitMsg" : "support Qt",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "aa605ad23dee4307b62423c9392e1cea",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
          "commitId2" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 27,
          "methodNumber2" : 27
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 254,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 249,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "16be6c3505d667bcbfbafa9a4baaec52",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "commitId2" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c24cd28b084a250eab29d0fbd70039ac",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3f16243f15249d0c5b9acd8d735db116a6188e83",
          "commitId2" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 36,
          "methodNumber2" : 36
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : " Bug 103863 -  Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9d71014d5289df96d7ac024a1a0a6719",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "commitId2" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 33,
          "methodNumber2" : 33
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f22296af2bd4bcb7a22f0f7799cc5c9d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "commitId2" : "c1d0126fc6c64fd6e2473353b2a4a680639a6fba",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 38,
          "methodNumber2" : 38
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (false);",
      "commitMsg" : "Bug 103863 - Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "055496c6c92bc85237a9fd1da736581b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "commitId2" : "c1d0126fc6c64fd6e2473353b2a4a680639a6fba",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 31,
          "methodNumber2" : 31
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 253,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 248,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "methodModified" : "\n\n/**\n * Forces a lay out (that is, sets the size and location) of all widgets that \n * are in the parent hierarchy of the changed control up to and including the \n * receiver.  The layouts in the hierarchy must not rely on any information \n * cached about the changed control or any of its ancestors.  The layout may \n * (potentially) optimize the work it is doing by assuming that none of the \n * peers of the changed control have changed state since the last layout.\n * If an ancestor does not have a layout, skip it.\n * <p>\n * Note: Layout is different from painting. If a child is\n * moved or resized such that an area in the parent is\n * exposed, then the parent will paint. If no child is\n * affected, the parent will not paint.\n * </p>\n * \n * @param changed a control that has had a state change which requires a recalculation of its size\n * \n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the changed array is null any of its controls are null or have been disposed</li> \n *    <li>ERROR_INVALID_PARENT - if any control in changed is not in the widget tree of the receiver</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.1\n */\npublic void layout (Control [] changed)",
      "diff" : "-\tfor (int i=0; i<changed.length; i++) {-\t\tControl control = changed [i];-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);-\t\tboolean ancestor = false;-\t\tComposite composite = control.parent;-\t\twhile (composite != null) {-\t\t\tancestor = composite == this;-\t\t\tif (ancestor) break;-\t\t\tcomposite = composite.parent;+\tlayout (changed, SWT.NONE);+}-\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);-\t}-\tint updateCount = 0;-\tComposite [] update = new Composite [16];-\tfor (int i=0; i<changed.length; i++) {-\t\tControl child = changed [i];-\t\tComposite composite = child.parent;-\t\twhile (child != this) {-\t\t\tif (composite.layout != null) {-\t\t\t\tcomposite.state |= LAYOUT_NEEDED;-\t\t\t\tif (!composite.layout.flushCache (child)) {-\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;-\t\t\tif (updateCount == update.length) {-\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];-\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);-\t\t\t\tupdate = newUpdate;-\t\t\t}-\t\t\tchild = update [updateCount++] = composite;-\t\t\tcomposite = child.parent;-\t}-\tfor (int i=updateCount-1; i>=0; i--) {-\t\tupdate [i].updateLayout (true, false);",
      "commitMsg" : " Bug 103863 -  Support encapsulation in SWT layout mechanism",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "141347f08491a97dc787ac9908212362",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "63f803a737d416603789d25d5eba7834fce0e4c9",
          "commitId2" : "cd943fc299c453b7ffe73a3be87c800d8bc59090",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Composite.java",
          "methodNumber1" : 35,
          "methodNumber2" : 35
        },
        "pattern" : [ 1002, 4023, 1430, 2002, 3008, 1002, 4070, 1599, 2000, 3010, 1002, 4070, 1471, 2000, 3005, 1002, 4063, 2000, 2001, 3003, 1004, 4070, -12746, 4937, 36, -22728, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 14519, 25949, 1001, 4076, 1001, 4070, 11275, 25268, 1001, 4070, 0, 105, 1008, 4027, 1001, 4017, 1001, 4070, 14519, 25949, 1001, 4120, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4027, 1001, 4023, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -7753, 17775, 1008, 4023, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 29746, 14748, 1008, 4071, 1001, 4828, 979, -20136, 987, 27688, 1001, 4070, -14860, -30253, 1001, 4119, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 14519, 25949, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4070, -14860, -30253, 1001, 4017, 1001, 4070, -21359, 29319, 1001, 4132, 1008, 4027, 1001, 4070, -14860, -30253, 1008, 4080, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -15189, 2218, 1008, 4027, 1001, 4118, 1001, 4070, -14860, -30253, 1008, 4023, 1001, 4070, 1476, -11768, 1008, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, -9147, 15814, 1001, 4029, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -12800, 14537, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4063, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -11059, -14626, 1001, 4070, 1443, -2788, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4063, 1001, 4070, 11275, 25268, 1001, 4070, -16882, 15078, 1001, 4069, 1001, 4090, 1001, 4070, 0, 105, 1008, 4061, 1008, 4071, 1001, 4828, 979, -20136, -25617, -707, 1001, 4070, 1443, -2788, 1001, 4076, 1001, 4070, 0, 105, 1008, 4071, 1001, 4828, 979, -20136, 9219, -28057, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4109, 1001, 4017, 1001, 4070, 1443, -2788, 1001, 4132, 1008, 4061, 1008, 4027, 1001, 4017, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, -16934, -1238, 1001, 4120, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, 25663, 18026, 1008, 4027, 1001, 4118, 1008, 4061, 1008, 4077, 1001, 4063, 1001, 4070, -21359, 29319, 1001, 4070, 1674, -15215, 1001, 4070, -7505, -17793, 1008, 4027, 1001, 4017, 1001, 4070, -9147, 15814, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4061, 1008, 4071, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1001, 4070, -8279, 5769, 1001, 4112, 1001, 4115, 954, 31289, 979, -20136, 9219, -28057, 1008, 4023, 1001, 4063, 1001, 4070, -27519, 24143, 1001, 4070, -21736, 19790, 1001, 4070, -12800, 14537, 1001, 4029, 1001, 4070, -8279, 5769, 1001, 4029, 1001, 4063, 1001, 4070, -12800, 14537, 1001, 4070, -16882, 15078, 1008, 4077, 1001, 4070, -12800, 14537, 1001, 4070, -8279, 5769, 1008, 4077, 1001, 4070, 1443, -2788, 1001, 4077, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4090, 1001, 4070, -9147, 15814, 1001, 4070, -21359, 29319, 1008, 4077, 1001, 4070, -21359, 29319, 1001, 4063, 1001, 4070, 1443, -2788, 1001, 4070, -15189, 2218, 1008, 4088, 1001, 4071, 1001, 4114, 960, -9170, 1, -28594, 1001, 4070, 0, 105, 1001, 4137, 1001, 4070, -9147, 15814, 1001, 4029, 1001, 4017, 1001, 4070, 0, 105, 1001, 4029, 1001, 4069, 1001, 4084, 1001, 4070, 0, 105, 1008, 4061, 1008, 4023, 1001, 4063, 1001, 4076, 1001, 4070, -12800, 14537, 1001, 4070, 0, 105, 1001, 4070, -17670, -23213, 1001, 4119, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 254,
          "moves" : 4,
          "inserts" : 0,
          "deletes" : 249,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 15
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 31,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "055496c6c92bc85237a9fd1da736581b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 36,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "c24cd28b084a250eab29d0fbd70039ac"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "aa605ad23dee4307b62423c9392e1cea"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 38,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "f22296af2bd4bcb7a22f0f7799cc5c9d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "16be6c3505d667bcbfbafa9a4baaec52"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "9d71014d5289df96d7ac024a1a0a6719"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "cd77fb1b52d8b13f6e0e7d1ec7a254096eea13bf",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Composite.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "141347f08491a97dc787ac9908212362"
    } ],
    "foundMembers" : 7,
    "numberOfRecommendationSets" : 7,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 1.0,
    "accuracyCharactersMin" : 1.0,
    "patternOriginal" : "\n\t//# match (original) {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tfor (int i=0; i<changed.length; i++) {\n\t\tControl control = changed [i];\n\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);\n\t\tboolean ancestor = false;\n\t\tComposite composite = control.parent;\n\t\twhile (composite != null) {\n\t\t\tancestor = composite == this;\n\t\t\tif (ancestor) break;\n\t\t\tcomposite = composite.parent;\n\t\t}\n\t\tif (!ancestor) error (SWT.ERROR_INVALID_PARENT);\n\t}\n\tint updateCount = 0;\n\tComposite [] update = new Composite [16];\n\tfor (int i=0; i<changed.length; i++) {\n\t\tControl child = changed [i];\n\t\tComposite composite = child.parent;\n\t\twhile (child != this) {\n\t\t\tif (composite.layout != null) {\n\t\t\t\tcomposite.state |= LAYOUT_NEEDED;\n\t\t\t\tif (!composite.layout.flushCache (child)) {\n\t\t\t\t\tcomposite.state |= LAYOUT_CHANGED;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (updateCount == update.length) {\n\t\t\t\tComposite [] newUpdate = new Composite [update.length + 16];\n\t\t\t\tSystem.arraycopy (update, 0, newUpdate, 0, update.length);\n\t\t\t\tupdate = newUpdate;\n\t\t\t}\n\t\t\tchild = update [updateCount++] = composite;\n\t\t\tcomposite = child.parent;\n\t\t}\n\t}\n\tfor (int i=updateCount-1; i>=0; i--) {\n\t\t//# wildcard expr(ARES0, true, 1)\n\t\tupdate [i].updateLayout (true, false);\n\t}\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tcheckWidget ();\n\tif (changed == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\tlayout (changed, SWT.NONE);\n\t//# }",
    "patternCreationTimeInNanoSec" : 463782510,
    "patternUseTimeInNanoSec" : 78959505996,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 1.0
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "129314",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "75812",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "99022f3b3c0d18c37229af45dd9ed0c4",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2329406946d89122eb3bd38a262415d60b3058b9",
          "commitId2" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 2,
          "deletes" : 1,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)82272 - List returned by Device#getFontList(...) has a lot of repetition",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f88985d2eb7e7ecf132d3742bd511544",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "commitId2" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 2,
          "deletes" : 1,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));-\t\treturn;+\t\tstart = end + 1;+\t\tend = string.length();+\t\tif (start < end) atsName = string.substring(start, end);",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "37939f3f0c955e95b5854843ee114098",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "commitId2" : "abdb7df6c5ef7f31dd770f626e22ad0d039e1629",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1006, 1006, 1004, 4070, -10258, 6430, -13611, 24593, 1004, 4070, 18124, 9276, 8095, 28241, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1000, 4063, 4023, 1000, 4070, 1037, 12860, 4063, 1000, 4070, -15320, -12439, 4063, 1007, 4077, 4061, 1000, 4070, 1674, -15262, 4077, 1000, 4137, 4077, 1000, 4070, 1, -30501, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1, -30501, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1674, -15262, 4017, 1000, 4070, 1, -30501, 4017, 1007, 4077, 4027, 1000, 4070, -10328, 6475, 4077, 1000, 4023, 4077, 1002, 4063, 2000, 2000, 2999, 1000, 4070, 1674, -15262, 4023, 1000, 4070, 1, -30501, 4023, 1001, 4114, 960, -9170, 1, -28594, 1008, 4047 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 44,
          "moves" : 3,
          "inserts" : 25,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)82272 - List returned by Device#getFontList(...) has a lot of repetition",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "98c36e3ada6a00150d74be2226fa7a67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "commitId2" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 2,
          "deletes" : 1,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 8
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "75812",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "99022f3b3c0d18c37229af45dd9ed0c4",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2329406946d89122eb3bd38a262415d60b3058b9",
          "commitId2" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 2,
          "methodNumber2" : 2
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 2,
          "deletes" : 1,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)82272 - List returned by Device#getFontList(...) has a lot of repetition",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f88985d2eb7e7ecf132d3742bd511544",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "commitId2" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 2,
          "deletes" : 1,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));-\t\treturn;+\t\tstart = end + 1;+\t\tend = string.length();+\t\tif (start < end) atsName = string.substring(start, end);",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "37939f3f0c955e95b5854843ee114098",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "commitId2" : "abdb7df6c5ef7f31dd770f626e22ad0d039e1629",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1006, 1006, 1004, 4070, -10258, 6430, -13611, 24593, 1004, 4070, 18124, 9276, 8095, 28241, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1000, 4063, 4023, 1000, 4070, 1037, 12860, 4063, 1000, 4070, -15320, -12439, 4063, 1007, 4077, 4061, 1000, 4070, 1674, -15262, 4077, 1000, 4137, 4077, 1000, 4070, 1, -30501, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1, -30501, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1674, -15262, 4017, 1000, 4070, 1, -30501, 4017, 1007, 4077, 4027, 1000, 4070, -10328, 6475, 4077, 1000, 4023, 4077, 1002, 4063, 2000, 2000, 2999, 1000, 4070, 1674, -15262, 4023, 1000, 4070, 1, -30501, 4023, 1001, 4114, 960, -9170, 1, -28594, 1008, 4047 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 44,
          "moves" : 3,
          "inserts" : 25,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "methodModified" : "\n\n/**\n * Constructs a new FontData given a string representation\n * in the form generated by the <code>FontData.toString</code>\n * method.\n * <p>\n * Note that the representation varies between platforms,\n * and a FontData can only be created from a string that was \n * generated on the same platform.\n * </p>\n *\n * @param string the string representation of a <code>FontData</code> (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the argument is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the argument does not represent a valid description</li>\n * </ul>\n *\n * @see #toString\n */\npublic FontData(String string)",
      "diff" : "-\tint height = 0;+\tfloat height = 0;-\t\theight = Integer.parseInt(string.substring(start, end));+\t\theight = Float.parseFloat(string.substring(start, end));",
      "commitMsg" : "129314 - [Preferences] Font sizes cannot be set as float (8,6pt)82272 - List returned by Device#getFontList(...) has a lot of repetition",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "98c36e3ada6a00150d74be2226fa7a67",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "cded08d14de8be5b307c83a69e77cb7eb2c5024a",
          "commitId2" : "25e0b9cefcf6aad913e775e22fb19b1e3de2a216",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/FontData.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1004, 4070, -10258, 6430, 1037, 12860, 1004, 4070, 18124, 9276, -15320, -12439, 1000, 4828, 979, -20136, 1488, 8796, 4068, 1001, 4114, 960, -9170, 1, -28594 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 2,
          "deletes" : 1,
          "updates" : 2,
          "aligns" : 12
        },
        "treeSize" : 8
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2329406946d89122eb3bd38a262415d60b3058b9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"CARBON\") && version2.equals(\"1\")) {\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : 0.9355742296918768,
        "accuracyCharacters" : 0.9402313624678663
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"CARBON\") && version2.equals(\"1\")) {\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (start < end) atsName = string.substring(start, end);\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : 0.9972067039106145,
        "accuracyCharacters" : 0.9936143039591315
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"CARBON\") && version2.equals(\"1\")) {\n\t\treturn;\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : 0.9355742296918768,
        "accuracyCharacters" : 0.9453727506426736
      } ],
      "memberId" : "37939f3f0c955e95b5854843ee114098"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2329406946d89122eb3bd38a262415d60b3058b9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"GTK\") && version2.equals(\"1\")) {\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"GTK\") && version2.equals(\"1\")) {\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (start < end) atsName = string.substring(start, end);\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : 0.9357541899441341,
        "accuracyCharacters" : 0.9340588988476313
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"GTK\") && version2.equals(\"1\")) {\n\t\treturn;\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : 0.9970238095238095,
        "accuracyCharacters" : 0.9931926480599047
      } ],
      "memberId" : "98c36e3ada6a00150d74be2226fa7a67"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2329406946d89122eb3bd38a262415d60b3058b9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\t\n\tsetName(name);\t\n\tsetHeight(height);\t\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\t\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"PHOTON\") && version2.equals(\"1\")) {\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\t\n\tsetName(name);\t\n\tsetHeight(height);\t\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\t\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"PHOTON\") && version2.equals(\"1\")) {\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (start < end) atsName = string.substring(start, end);\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\t\n\tsetName(name);\t\n\tsetHeight(height);\t\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\t\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"PHOTON\") && version2.equals(\"1\")) {\n\t\treturn;\n\t\treturn;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2329406946d89122eb3bd38a262415d60b3058b9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 2,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tdata = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n\tdata.lfCharSet = (byte)OS.DEFAULT_CHARSET;\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"WINDOWS\") && version2.equals(\"1\")) {  //$NON-NLS-1$//$NON-NLS-2$\n\t\tLOGFONT newData = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n\t\ttry {\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfHeight = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfWidth = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfEscapement = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfOrientation = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfWeight = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfItalic = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfUnderline = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfStrikeOut = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfCharSet = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfOutPrecision = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfClipPrecision = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfQuality = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfPitchAndFamily = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t} catch (NumberFormatException e) {\n\t\t\tsetName(name);\n\t\t\tsetHeight(height);\n\t\t\tsetStyle(style);\n\t\t\treturn;\n\t\t}\n\t\tTCHAR buffer = new TCHAR(0, string.substring(start), false);\n\t\tint length = Math.min(OS.LF_FACESIZE - 1, buffer.length());\n\t\tif (OS.IsUnicode) {\n\t\t\tchar[] lfFaceName = ((LOGFONTW)newData).lfFaceName;\n\t\t\tSystem.arraycopy(buffer.chars, 0, lfFaceName, 0, length);\n\t\t} else {\n\t\t\tbyte[] lfFaceName = ((LOGFONTA)newData).lfFaceName;\n\t\t\tSystem.arraycopy(buffer.bytes, 0, lfFaceName, 0, length);\n\t\t}\n\t\tdata = newData;\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tdata = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n\tdata.lfCharSet = (byte)OS.DEFAULT_CHARSET;\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"WINDOWS\") && version2.equals(\"1\")) {\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (start < end) atsName = string.substring(start, end);  //$NON-NLS-1$//$NON-NLS-2$\n\t\tLOGFONT newData = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n\t\ttry {\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfHeight = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfWidth = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfEscapement = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfOrientation = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfWeight = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfItalic = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfUnderline = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfStrikeOut = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfCharSet = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfOutPrecision = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfClipPrecision = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfQuality = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfPitchAndFamily = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t} catch (NumberFormatException e) {\n\t\t\tsetName(name);\n\t\t\tsetHeight(height);\n\t\t\tsetStyle(style);\n\t\t\treturn;\n\t\t}\n\t\tTCHAR buffer = new TCHAR(0, string.substring(start), false);\n\t\tint length = Math.min(OS.LF_FACESIZE - 1, buffer.length());\n\t\tif (OS.IsUnicode) {\n\t\t\tchar[] lfFaceName = ((LOGFONTW)newData).lfFaceName;\n\t\t\tSystem.arraycopy(buffer.chars, 0, lfFaceName, 0, length);\n\t\t} else {\n\t\t\tbyte[] lfFaceName = ((LOGFONTA)newData).lfFaceName;\n\t\t\tSystem.arraycopy(buffer.bytes, 0, lfFaceName, 0, length);\n\t\t}\n\t\tdata = newData;\n\t}\n}",
        "accuracyTokens" : 0.9757383966244726,
        "accuracyCharacters" : 0.9762344254730042
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tdata = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n\tdata.lfCharSet = (byte)OS.DEFAULT_CHARSET;\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n\tif (end == -1) return;\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) return;\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"WINDOWS\") && version2.equals(\"1\")) {\n\t\treturn;  //$NON-NLS-1$//$NON-NLS-2$\n\t\tLOGFONT newData = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();\n\t\ttry {\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfHeight = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfWidth = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfEscapement = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfOrientation = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfWeight = Integer.parseInt(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfItalic = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfUnderline = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfStrikeOut = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfCharSet = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfOutPrecision = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfClipPrecision = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfQuality = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t\tend = string.indexOf('|', start);\n\t\t\tif (end == -1) return;\n\t\t\tnewData.lfPitchAndFamily = Byte.parseByte(string.substring(start, end));\n\t\t\tstart = end + 1;\n\t\t} catch (NumberFormatException e) {\n\t\t\tsetName(name);\n\t\t\tsetHeight(height);\n\t\t\tsetStyle(style);\n\t\t\treturn;\n\t\t}\n\t\tTCHAR buffer = new TCHAR(0, string.substring(start), false);\n\t\tint length = Math.min(OS.LF_FACESIZE - 1, buffer.length());\n\t\tif (OS.IsUnicode) {\n\t\t\tchar[] lfFaceName = ((LOGFONTW)newData).lfFaceName;\n\t\t\tSystem.arraycopy(buffer.chars, 0, lfFaceName, 0, length);\n\t\t} else {\n\t\t\tbyte[] lfFaceName = ((LOGFONTA)newData).lfFaceName;\n\t\t\tSystem.arraycopy(buffer.bytes, 0, lfFaceName, 0, length);\n\t\t}\n\t\tdata = newData;\n\t}\n}",
        "accuracyTokens" : 0.9989200863930886,
        "accuracyCharacters" : 0.9976420655505777
      } ],
      "memberId" : "99022f3b3c0d18c37229af45dd9ed0c4"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "2329406946d89122eb3bd38a262415d60b3058b9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/FontData.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) {\n\t\tsetName(name);\n\t\tsetHeight(height);\n\t\tsetStyle(style);\n\t\treturn;\n\t}\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) {\n\t\tsetName(name);\n\t\tsetHeight(height);\n\t\tsetStyle(style);\n\t\treturn;\n\t}\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"MOTIF\") && version2.equals(\"1\")) {\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (end == -1) {\n\t\t\tsetName(name);\n\t\t\tsetHeight(height);\n\t\t\tsetStyle(style);\n\t\t\treturn;\n\t\t}\n\t\tString xlfd = string.substring(start, end);\n\t\tsetXlfd(xlfd);\n\t\treturn;\n\t}\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) {\n\t\tsetName(name);\n\t\tsetHeight(height);\n\t\tsetStyle(style);\n\t\treturn;\n\t}\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) {\n\t\tsetName(name);\n\t\tsetHeight(height);\n\t\tsetStyle(style);\n\t\treturn;\n\t}\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"MOTIF\") && version2.equals(\"1\")) {\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (start < end) atsName = string.substring(start, end);\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (end == -1) {\n\t\t\tsetName(name);\n\t\t\tsetHeight(height);\n\t\t\tsetStyle(style);\n\t\t\treturn;\n\t\t}\n\t\tString xlfd = string.substring(start, end);\n\t\tsetXlfd(xlfd);\n\t\treturn;\n\t}\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n}",
        "accuracyTokens" : 0.9453681710213777,
        "accuracyCharacters" : 0.9450373532550693
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) {\n\t\tsetName(name);\n\t\tsetHeight(height);\n\t\tsetStyle(style);\n\t\treturn;\n\t}\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) {\n\t\tsetName(name);\n\t\tsetHeight(height);\n\t\tsetStyle(style);\n\t\treturn;\n\t}\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"MOTIF\") && version2.equals(\"1\")) {\n\t\treturn;\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (end == -1) {\n\t\t\tsetName(name);\n\t\t\tsetHeight(height);\n\t\t\tsetStyle(style);\n\t\t\treturn;\n\t\t}\n\t\tString xlfd = string.substring(start, end);\n\t\tsetXlfd(xlfd);\n\t\treturn;\n\t}\n\tsetName(name);\n\tsetHeight(height);\n\tsetStyle(style);\n}",
        "accuracyTokens" : 0.9974937343358395,
        "accuracyCharacters" : 0.9943851768669287
      } ],
      "memberId" : "f88985d2eb7e7ecf132d3742bd511544"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 5,
    "precision" : 0.8,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9481087468204653,
    "accuracyCharactersMin" : 0.9488905100108928,
    "patternOriginal" : "\n\t//# match (original, (ERROR_INVALID_ARGUMENT)) {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint height = 0;\n\ttry {\n\t\theight = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\t//# wildcard stmt(ARES0);\n\tif (end == -1) //# wildcard stmt(ARES1);\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\t//# wildcard stmt(ARES2);\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"CARBON\") && version2.equals(\"1\"))\n\t\t//# wildcard stmt(ARES3);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint start = 0;\n\tint end = string.indexOf('|');\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString version1 = string.substring(start, end);\n\ttry {\n\t\tif (Integer.parseInt(version1) != 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT); \n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tString name = string.substring(start, end);\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat height = 0;\n\ttry {\n\t\theight = Float.parseFloat(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\tif (end == -1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint style = 0;\n\ttry {\n\t\tstyle = Integer.parseInt(string.substring(start, end));\n\t} catch (NumberFormatException e) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\t//# use (ARES0);\n\tif (end == -1) //# use (ARES1);\n\tString platform = string.substring(start, end);\n\n\tstart = end + 1;\n\tend = string.indexOf('|', start);\n\t//# use (ARES2);\n\tString version2 = string.substring(start, end);\n\n\tif (platform.equals(\"CARBON\") && version2.equals(\"1\")) {\n\t\t//# choice {\n\t\t//# case {\n\t\tstart = end + 1;\n\t\tend = string.length();\n\t\tif (start < end) atsName = string.substring(start, end);\n\t\t//# }\n\t\t//# case {\n\t\treturn;\n\t\t//# }\n\t\t//# }\n\t\t//# use (ARES3);\n\t}\n\t//# }",
    "patternCreationTimeInNanoSec" : 14851772378,
    "patternUseTimeInNanoSec" : 14824333468,
    "accuracyTokensMax" : 0.9993016759776536,
    "accuracyCharactersMax" : 0.9984035759897829
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "134091",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "+\t\tint newOffset = -1;-\t\t\ttext.setFocus();-\t\t\tint offset = text.getOffsetAtLocation(pt);-\t\t\tif (offset != oldOffset) {-\t\t\t\tOS.ImageList_DragShowNolock(false);-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t\tOS.ImageList_DragShowNolock(true);-\t\t\t}-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\tint offset = -1;-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(2, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\tif (offset != -1 && offset != oldOffset) {-\t\t\t\tOS.ImageList_DragShowNolock(false);-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t\tOS.ImageList_DragShowNolock(true);-\t\t\t}+\t\t}+\t\tif (newOffset != -1 && newOffset != oldOffset) {+\t\t\ttext.setFocus();+\t\t\tOS.ImageList_DragShowNolock(false);+\t\t\ttext.setCaretOffset(newOffset);+\t\t\tOS.ImageList_DragShowNolock(true);",
      "commitMsg" : "136675 - No scrollbar events for Text",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7d61cd41afe733881c46a0d2668c87b0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
          "commitId2" : "1dce96d2e02b2c8b1285af4b452459877daaec8f",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1006, 1006, 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, -15561, 25747, 1, -30241, 1006, 1006, 1004, 4017, 1004, 4070, -15561, 25747, 0, 120, 1004, 4070, 21302, -31334, 0, 120, 1004, 4070, 0, 2532, 0, 3588, 1004, 4070, -478, 18627, 0, 121, 1004, 4070, -15561, 25747, -7871, 26171, 1004, 4070, 0, 2532, 0, 112, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1002, 4070, 2140, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3002, 1000, 4070, -11040, 16979, 4077, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1002, 4061, 3009, 2000, 2997, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1002, 4023, 2260, 1999, 2994, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1002, 4023, 2760, 2000, 2993, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1002, 4023, 2260, 1998, 2992, 1002, 4070, 1561, 2000, 2991, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 112, 4067, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -28089, 31089, 4063, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1000, 4018, 4027, 1000, 4018, 4018, 1002, 4017, 1910, 2000, 2991, 1000, 4063, 4017, 1002, 4070, 2461, 2000, 2990, 1000, 4070, 0, 112, 4063, 1000, 4063, 4017, 1002, 4070, 2460, 2000, 2990, 1000, 4070, 0, 3588, 4063, 1000, 4017, 4018, 1002, 4063, 1941, 2000, 2992, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1002, 4063, 3140, 2000, 2992, 1002, 4070, 2000, 2000, 2992, 1002, 4070, 3140, 2000, 2992, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1001, 4119, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 177,
          "moves" : 25,
          "inserts" : 135,
          "deletes" : 2,
          "updates" : 15,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "-\tint offset = -1;+\tint newOffset = -1;-\t\t\t//text.setFocus();\t-\t\t\toffset = text.getOffsetAtLocation(pt);-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\t// hide caret-\t\t\tdrawCaret();-\t\t\tcaretBounds = null; +\t\t// hide caret+\t\tdrawCaret();+\t\tcaretBounds = null; -\tif (offset != -1) {-\t\ttext.setCaretOffset(offset);+\tif (newOffset != -1) {+\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "bug 137320 [StyledText] caret does not move correctly when inserted text wraps",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cef0db73a399b1914ad62667dddc2be0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02a41a72a100251a98dc8e7de59f64c8c32b223d",
          "commitId2" : "801c75677b1aab8c4f677654ebaade9ee0264453",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, 0, 3251, 0, 112, 1006, 1004, 4070, -15561, 25747, 0, 105, 1002, 4070, 2001, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1000, 4061, 4128, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -28089, 31089, 4063, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4018, 4018, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 120, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 120, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -11040, 16979, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 170,
          "moves" : 5,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 8,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "-\tint offset = -1;+\tint newOffset = -1;-\t\t\t//text.setFocus();\t-\t\t\toffset = text.getOffsetAtLocation(pt);-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\t// hide caret-\t\t\tdrawCaret();-\t\t\tcaretBounds = null; +\t\t// hide caret+\t\tdrawCaret();+\t\tcaretBounds = null; -\tif (offset != -1) {-\t\ttext.setCaretOffset(offset);+\tif (newOffset != -1) {+\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "Bug 127216",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "df6018a928068c3cc9e7152adfc9f89a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "272ce17177489cafd1a8a24ec2c3c365d57fb55a",
          "commitId2" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, 0, 3251, 0, 112, 1006, 1004, 4070, -15561, 25747, 0, 105, 1002, 4070, 2001, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1000, 4061, 4128, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -28089, 31089, 4063, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4018, 4018, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 120, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 120, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -11040, 16979, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 170,
          "moves" : 5,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 8,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "+\t\tint newOffset = -1;-\t\t\ttext.setFocus();-\t\t\tint offset = text.getOffsetAtLocation(pt);-\t\t\tif (offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\tint offset = -1;-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\tif (offset != -1 && offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}+\t\t}+\t\tif (newOffset != -1 && newOffset != oldOffset) {+\t\t\ttext.setFocus();+\t\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "Bug 134091 - can't drop text at end of lineBug 134112 - dropping on empty line is hard",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "da3b2c35cd9351da521cad4d1d3f4d36",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
          "commitId2" : "94eca708710e7f0e16144697653aeb4db6c9e562",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1006, 1006, 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, -15561, 25747, 1, -30241, 1006, 1004, 4070, 7104, 1076, -28089, 31089, 1006, 1027, 4070, 0, 3251, 0, 112, 1004, 4017, 1004, 4070, -15561, 25747, 0, 120, 1004, 4070, 21302, -31334, 0, 120, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1002, 4070, 2540, 2000, 2993, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3002, 1000, 4070, -11040, 16979, 4077, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1002, 4061, 3009, 2000, 2997, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1002, 4023, 2260, 2000, 2994, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1000, 4018, 4027, 1000, 4018, 4018, 1002, 4017, 1910, 2000, 2991, 1000, 4063, 4017, 1002, 4070, 2461, 2000, 2990, 1000, 4070, 0, 112, 4063, 1000, 4063, 4017, 1002, 4070, 2460, 2000, 2990, 1000, 4070, 0, 3588, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 18,
          "inserts" : 143,
          "deletes" : 0,
          "updates" : 13,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "+\t\tint newOffset = -1;-\t\t\ttext.setFocus();-\t\t\tint offset = text.getOffsetAtLocation(pt);-\t\t\tif (offset != oldOffset) {-\t\t\t\tOS.ImageList_DragShowNolock(false);-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t\tOS.ImageList_DragShowNolock(true);-\t\t\t}-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\tint offset = -1;-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(2, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\tif (offset != -1 && offset != oldOffset) {-\t\t\t\tOS.ImageList_DragShowNolock(false);-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t\tOS.ImageList_DragShowNolock(true);-\t\t\t}+\t\t}+\t\tif (newOffset != -1 && newOffset != oldOffset) {+\t\t\ttext.setFocus();+\t\t\tOS.ImageList_DragShowNolock(false);+\t\t\ttext.setCaretOffset(newOffset);+\t\t\tOS.ImageList_DragShowNolock(true);",
      "commitMsg" : "136675 - No scrollbar events for Text",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7d61cd41afe733881c46a0d2668c87b0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
          "commitId2" : "1dce96d2e02b2c8b1285af4b452459877daaec8f",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1006, 1006, 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, -15561, 25747, 1, -30241, 1006, 1006, 1004, 4017, 1004, 4070, -15561, 25747, 0, 120, 1004, 4070, 21302, -31334, 0, 120, 1004, 4070, 0, 2532, 0, 3588, 1004, 4070, -478, 18627, 0, 121, 1004, 4070, -15561, 25747, -7871, 26171, 1004, 4070, 0, 2532, 0, 112, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1002, 4070, 2140, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3002, 1000, 4070, -11040, 16979, 4077, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1002, 4061, 3009, 2000, 2997, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1002, 4023, 2260, 1999, 2994, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1002, 4023, 2760, 2000, 2993, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1002, 4023, 2260, 1998, 2992, 1002, 4070, 1561, 2000, 2991, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 112, 4067, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -28089, 31089, 4063, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1000, 4018, 4027, 1000, 4018, 4018, 1002, 4017, 1910, 2000, 2991, 1000, 4063, 4017, 1002, 4070, 2461, 2000, 2990, 1000, 4070, 0, 112, 4063, 1000, 4063, 4017, 1002, 4070, 2460, 2000, 2990, 1000, 4070, 0, 3588, 4063, 1000, 4017, 4018, 1002, 4063, 1941, 2000, 2992, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1002, 4063, 3140, 2000, 2992, 1002, 4070, 2000, 2000, 2992, 1002, 4070, 3140, 2000, 2992, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1001, 4119, 1001, 4119 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 177,
          "moves" : 25,
          "inserts" : 135,
          "deletes" : 2,
          "updates" : 15,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "-\tint offset = -1;+\tint newOffset = -1;-\t\t\t//text.setFocus();\t-\t\t\toffset = text.getOffsetAtLocation(pt);-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\t// hide caret-\t\t\tdrawCaret();-\t\t\tcaretBounds = null; +\t\t// hide caret+\t\tdrawCaret();+\t\tcaretBounds = null; -\tif (offset != -1) {-\t\ttext.setCaretOffset(offset);+\tif (newOffset != -1) {+\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "bug 137320 [StyledText] caret does not move correctly when inserted text wraps",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cef0db73a399b1914ad62667dddc2be0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02a41a72a100251a98dc8e7de59f64c8c32b223d",
          "commitId2" : "801c75677b1aab8c4f677654ebaade9ee0264453",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, 0, 3251, 0, 112, 1006, 1004, 4070, -15561, 25747, 0, 105, 1002, 4070, 2001, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1000, 4061, 4128, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -28089, 31089, 4063, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4018, 4018, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 120, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 120, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -11040, 16979, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 170,
          "moves" : 5,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 8,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "-\tint offset = -1;+\tint newOffset = -1;-\t\t\t//text.setFocus();\t-\t\t\toffset = text.getOffsetAtLocation(pt);-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\t// hide caret-\t\t\tdrawCaret();-\t\t\tcaretBounds = null; +\t\t// hide caret+\t\tdrawCaret();+\t\tcaretBounds = null; -\tif (offset != -1) {-\t\ttext.setCaretOffset(offset);+\tif (newOffset != -1) {+\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "Bug 127216",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "df6018a928068c3cc9e7152adfc9f89a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "272ce17177489cafd1a8a24ec2c3c365d57fb55a",
          "commitId2" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, 0, 3251, 0, 112, 1006, 1004, 4070, -15561, 25747, 0, 105, 1002, 4070, 2001, 2000, 2994, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1000, 4061, 4128, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -28089, 31089, 4063, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4018, 4018, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 120, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 120, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, -11040, 16979, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 170,
          "moves" : 5,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 8,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "methodModified" : "\nvoid showDropTargetEffect(int effect, int x, int y)",
      "diff" : "+\t\tint newOffset = -1;-\t\t\ttext.setFocus();-\t\t\tint offset = text.getOffsetAtLocation(pt);-\t\t\tif (offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}-\t\t} catch (IllegalArgumentException ex) {+\t\t\tnewOffset = text.getOffsetAtLocation(pt);+\t\t} catch (IllegalArgumentException ex1) {-\t\t\tint offset = -1;-\t\t\t\t\toffset = maxOffset;+\t\t\t\t\tnewOffset = maxOffset;-\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\ttry {+\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));+\t\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\t\tnewOffset = -1;+\t\t\t\t\t}-\t\t\t\toffset = maxOffset;+\t\t\t\ttry {+\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));+\t\t\t\t\tint endOffset = maxOffset;+\t\t\t\t\tint line = text.getLineAtOffset(startOffset);+\t\t\t\t\tint lineCount = text.getLineCount();+\t\t\t\t\tif (line + 1 < lineCount) {+\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;+\t\t\t\t\t}+\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);+\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {+\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);+\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {+\t\t\t\t\t\t\tnewOffset = i;+\t\t\t\t\t\t\tbreak;+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t} catch (IllegalArgumentException ex2) {+\t\t\t\t\tnewOffset = -1;+\t\t\t\t}-\t\t\tif (offset != -1 && offset != oldOffset) {-\t\t\t\ttext.setCaretOffset(offset);-\t\t\t}+\t\t}+\t\tif (newOffset != -1 && newOffset != oldOffset) {+\t\t\ttext.setFocus();+\t\t\ttext.setCaretOffset(newOffset);",
      "commitMsg" : "Bug 134091 - can't drop text at end of lineBug 134112 - dropping on empty line is hard",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "da3b2c35cd9351da521cad4d1d3f4d36",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2d2bba5faabace43be6c1bd867c71724ed82bb37",
          "commitId2" : "94eca708710e7f0e16144697653aeb4db6c9e562",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
          "methodNumber1" : 1,
          "methodNumber2" : 1
        },
        "pattern" : [ 1006, 1006, 1027, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1027, 4070, -15561, 25747, 1, -30241, 1006, 1004, 4070, 7104, 1076, -28089, 31089, 1006, 1027, 4070, 0, 3251, 0, 112, 1004, 4017, 1004, 4070, -15561, 25747, 0, 120, 1004, 4070, 21302, -31334, 0, 120, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1002, 4070, 2540, 2000, 2993, 1004, 4070, -15561, 25747, -11040, 16979, 1004, 4070, -15561, 25747, -11040, 16979, 1006, 1004, 4070, -15561, 25747, -11040, 16979, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3002, 1000, 4070, -11040, 16979, 4077, 1000, 4070, 1, -30242, 4067, 1007, 4061, 4027, 1007, 4128, 4061, 1002, 4061, 3008, 2000, 2998, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1007, 4128, 4061, 1002, 4061, 3009, 2000, 2997, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -30426, -15467, 4067, 1002, 4023, 2260, 2000, 2994, 1000, 4112, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4112, 1000, 4029, 4112, 1000, 4063, 4112, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 50, -20492, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 3419, -25296, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -27803, -30341, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27950, -1339, 4063, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4137, 4017, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4070, -27803, -30341, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 22604, -30386, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, 25524, -14416, 4063, 1000, 4137, 4023, 1000, 4070, 50, -20492, 4137, 1000, 4029, 4137, 1000, 4029, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -7871, 26171, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -12414, 7729, 4063, 1000, 4070, -30426, -15467, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4070, 22604, -30386, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -30426, -15467, 4017, 1000, 4069, 4088, 1000, 4084, 4069, 1000, 4070, 0, 105, 4084, 1007, 4061, 4088, 1007, 4071, 4061, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 54, 17709, 4063, 1000, 4070, -27497, 4337, 4063, 1000, 4070, 0, 105, 4023, 1000, 4828, 979, -20136, 1179, 25968, 4068, 1000, 4134, 4128, 1000, 4071, 4134, 1000, 4828, 979, -20136, 20802, -16036, 4068, 1000, 4070, 1, -30241, 4067, 1000, 4061, 4134, 1007, 4077, 4061, 1000, 4070, -11040, 16979, 4077, 1000, 4118, 4077, 1000, 4029, 4118, 1000, 4070, 22604, -30386, 4067, 1002, 4070, 2099, 2000, 2996, 1000, 4018, 4027, 1000, 4018, 4018, 1002, 4017, 1910, 2000, 2991, 1000, 4063, 4017, 1002, 4070, 2461, 2000, 2990, 1000, 4070, 0, 112, 4063, 1000, 4063, 4017, 1002, 4070, 2460, 2000, 2990, 1000, 4070, 0, 3588, 4063, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1000, 4017, 4018, 1000, 4137, 4017, 1000, 4063, 4137, 1000, 4070, 0, 112, 4063, 1000, 4070, 0, 121, 4063, 1000, 4070, -7871, 26171, 4137, 1000, 4063, 4017, 1000, 4070, 0, 3588, 4063, 1000, 4070, 0, 121, 4063, 1007, 4061, 4027, 1007, 4080, 4061 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 174,
          "moves" : 18,
          "inserts" : 143,
          "deletes" : 0,
          "updates" : 13,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint offset = -1;\n\tif ((effect & DND.FEEDBACK_SELECT) != 0) {\n\t\tPoint pt = text.getDisplay().map(null, text, x, y);\n\t\ttry {\n\t\t\tnewOffset = text.getOffsetAtLocation(pt);\n\t\t} catch (IllegalArgumentException ex1) {\n\t\t\tint maxOffset = text.getCharCount();\n\t\t\tPoint maxLocation = text.getLocationAtOffset(maxOffset);\n\t\t\tif (pt.y >= maxLocation.y) {\n\t\t\t\tif (pt.x >= maxLocation.x) {\n\t\t\t\t\tnewOffset = maxOffset;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));\n\t\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\t\tnewOffset = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));\n\t\t\t\t\tint endOffset = maxOffset;\n\t\t\t\t\tint line = text.getLineAtOffset(startOffset);\n\t\t\t\t\tint lineCount = text.getLineCount();\n\t\t\t\t\tif (line + 1 < lineCount) {\n\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;\n\t\t\t\t\t}\n\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);\n\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {\n\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);\n\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n\t\t\t\t\t\t\tnewOffset = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\tnewOffset = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (caretBounds != null) {\n\t\t\t// hide caret\n\t\t\tdrawCaret();\n\t\t\tcaretBounds = null; \n\t}\n\tif (offset != -1) {\n\t\ttext.setCaretOffset(offset);\n\t\t// show caret\n\t\tcaretBounds = text.getCaret().getBounds();\n\t\tdrawCaret();\n\t}\n}",
        "accuracyTokens" : 0.9901639344262295,
        "accuracyCharacters" : 0.9898648648648649
      } ],
      "memberId" : "df6018a928068c3cc9e7152adfc9f89a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif ((effect & DND.FEEDBACK_SELECT) != 0) {\n\t\tPoint pt = text.getDisplay().map(null, text, x, y);\n\t\tint oldOffset = text.getCaretOffset();\n\t\tint newOffset = -1;\n\t\ttry {\n\t\t\tnewOffset = text.getOffsetAtLocation(pt);\n\t\t} catch (IllegalArgumentException ex1) {\n\t\t\tint maxOffset = text.getCharCount();\n\t\t\tPoint maxLocation = text.getLocationAtOffset(maxOffset);\n\t\t\tif (pt.y >= maxLocation.y) {\n\t\t\t\tif (pt.x >= maxLocation.x) {\n\t\t\t\t\tnewOffset = maxOffset;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));\n\t\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\t\tnewOffset = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));\n\t\t\t\t\tint endOffset = maxOffset;\n\t\t\t\t\tint line = text.getLineAtOffset(startOffset);\n\t\t\t\t\tint lineCount = text.getLineCount();\n\t\t\t\t\tif (line + 1 < lineCount) {\n\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;\n\t\t\t\t\t}\n\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);\n\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {\n\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);\n\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n\t\t\t\t\t\t\tnewOffset = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\tnewOffset = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (newOffset != -1 && newOffset != oldOffset) {\n\t\t\ttext.setCaretOffset(newOffset);\n\t\t}\n\t}\n}",
        "accuracyTokens" : 0.9867549668874173,
        "accuracyCharacters" : 0.9858156028368794
      } ],
      "memberId" : "da3b2c35cd9351da521cad4d1d3f4d36"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint offset = -1;\n\tif ((effect & DND.FEEDBACK_SELECT) != 0) {\n\t\tPoint pt = text.getDisplay().map(null, text, x, y);\n\t\ttry {\n\t\t\tnewOffset = text.getOffsetAtLocation(pt);\n\t\t} catch (IllegalArgumentException ex1) {\n\t\t\tint maxOffset = text.getCharCount();\n\t\t\tPoint maxLocation = text.getLocationAtOffset(maxOffset);\n\t\t\tif (pt.y >= maxLocation.y) {\n\t\t\t\tif (pt.x >= maxLocation.x) {\n\t\t\t\t\tnewOffset = maxOffset;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));\n\t\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\t\tnewOffset = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));\n\t\t\t\t\tint endOffset = maxOffset;\n\t\t\t\t\tint line = text.getLineAtOffset(startOffset);\n\t\t\t\t\tint lineCount = text.getLineCount();\n\t\t\t\t\tif (line + 1 < lineCount) {\n\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;\n\t\t\t\t\t}\n\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);\n\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {\n\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);\n\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n\t\t\t\t\t\t\tnewOffset = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\tnewOffset = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (caretBounds != null) {\n\t\t\t// hide caret\n\t\t\tdrawCaret();\n\t\t\tcaretBounds = null; \n\t}\n\tif (offset != -1) {\n\t\ttext.setCaretOffset(offset);\n\t\t// show caret\n\t\tcaretBounds = text.getCaret().getBounds();\n\t\tdrawCaret();\n\t}\n}",
        "accuracyTokens" : 0.9901639344262295,
        "accuracyCharacters" : 0.9898648648648649
      } ],
      "memberId" : "cef0db73a399b1914ad62667dddc2be0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "73e72128905a43ee613da169ec1f3d7a66a65b79",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java",
      "methodNumber" : 1,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif ((effect & DND.FEEDBACK_SELECT) != 0) {\n\t\tPoint pt = text.getDisplay().map(null, text, x, y);\n\t\tint oldOffset = text.getCaretOffset();\n\t\tint newOffset = -1;\n\t\ttry {\n\t\t\tnewOffset = text.getOffsetAtLocation(pt);\n\t\t} catch (IllegalArgumentException ex1) {\n\t\t\tint maxOffset = text.getCharCount();\n\t\t\tPoint maxLocation = text.getLocationAtOffset(maxOffset);\n\t\t\tif (pt.y >= maxLocation.y) {\n\t\t\t\tif (pt.x >= maxLocation.x) {\n\t\t\t\t\tnewOffset = maxOffset;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));\n\t\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\t\tnewOffset = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));\n\t\t\t\t\tint endOffset = maxOffset;\n\t\t\t\t\tint line = text.getLineAtOffset(startOffset);\n\t\t\t\t\tint lineCount = text.getLineCount();\n\t\t\t\t\tif (line + 1 < lineCount) {\n\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;\n\t\t\t\t\t}\n\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);\n\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {\n\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);\n\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n\t\t\t\t\t\t\tnewOffset = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\tnewOffset = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (newOffset != -1 && newOffset != oldOffset) {\n\t\t\tOS.ImageList_DragShowNolock(false);\n\t\t\ttext.setCaretOffset(newOffset);\n\t\t\tOS.ImageList_DragShowNolock(true);\n\t\t}\n\t}\n}",
        "accuracyTokens" : 0.9839743589743589,
        "accuracyCharacters" : 0.9858776059179556
      } ],
      "memberId" : "7d61cd41afe733881c46a0d2668c87b0"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9877642986785589,
    "accuracyCharactersMin" : 0.9878557346211413,
    "patternOriginal" : "\n\t//# match (original) {\n\tif ((effect & DND.FEEDBACK_SELECT) != 0) {\n\t\tPoint pt = text.getDisplay().map(null, text, x, y);\n\t\t//# wildcard stmt(ARES0);\n\t\ttry {\n\t\t\t//# wildcard stmt(ARES1);\n\t\t} catch (IllegalArgumentException ex) {\n\t\t\tint maxOffset = text.getCharCount();\n\t\t\tPoint maxLocation = text.getLocationAtOffset(maxOffset);\n\t\t\t//# wildcard stmt(ARES2);\n\t\t\tif (pt.y >= maxLocation.y) {\n\t\t\t\tif (pt.x >= maxLocation.x) {\n\t\t\t\t\toffset = maxOffset;\n\t\t\t\t} else {\n\t\t\t\t\toffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toffset = maxOffset;\n\t\t\t}\n\t\t\t//# wildcard stmt(ARES3);\n\t\t}\n\t}\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tif ((effect & DND.FEEDBACK_SELECT) != 0) {\n\t\tPoint pt = text.getDisplay().map(null, text, x, y);\n\t\t//# use (ARES0);\n\t\t//# use (ARES2);\n\t\ttry {\n\t\t\tnewOffset = text.getOffsetAtLocation(pt);\n\t\t} catch (IllegalArgumentException ex1) {\n\t\t\tint maxOffset = text.getCharCount();\n\t\t\tPoint maxLocation = text.getLocationAtOffset(maxOffset);\n\t\t\tif (pt.y >= maxLocation.y) {\n\t\t\t\tif (pt.x >= maxLocation.x) {\n\t\t\t\t\tnewOffset = maxOffset;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));\n\t\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\t\tnewOffset = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tint startOffset = text.getOffsetAtLocation(new Point(0, pt.y));\n\t\t\t\t\tint endOffset = maxOffset;\n\t\t\t\t\tint line = text.getLineAtOffset(startOffset);\n\t\t\t\t\tint lineCount = text.getLineCount();\n\t\t\t\t\tif (line + 1 < lineCount) {\n\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;\n\t\t\t\t\t}\n\t\t\t\t\tint lineHeight = text.getLineHeight(startOffset);\n\t\t\t\t\tfor (int i = endOffset; i >= startOffset; i--) {\n\t\t\t\t\t\tPoint p = text.getLocationAtOffset(i);\n\t\t\t\t\t\tif (p.x < pt.x && p.y < pt.y && p.y + lineHeight > pt.y) {\n\t\t\t\t\t\t\tnewOffset = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (IllegalArgumentException ex2) {\n\t\t\t\t\tnewOffset = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//# use (ARES3);\n\t}\n\t//# }",
    "patternCreationTimeInNanoSec" : 1681879088,
    "patternUseTimeInNanoSec" : 12240124468,
    "accuracyTokensMax" : 0.9877642986785589,
    "accuracyCharactersMax" : 0.9878557346211413
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "139329_2",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2af9e2e868e257c15289f6176b715b56",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 29,
          "methodNumber2" : 29
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 6,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "edebc48987254b70c151cb9faad5ccad",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 21,
          "methodNumber2" : 21
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 6,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4b6aeb1b0fe44e4b3dacc78c097c968f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 33,
          "methodNumber2" : 33
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 6,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2af9e2e868e257c15289f6176b715b56",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 29,
          "methodNumber2" : 29
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 6,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "edebc48987254b70c151cb9faad5ccad",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 21,
          "methodNumber2" : 21
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 6,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid showItem (int index)",
      "methodModified" : "\n\nvoid showItem (int index)",
      "diff" : "-void showItem (int index) {-\tExpandItem item = items [index];+void showItem (ExpandItem item) {+\tint index = indexOf (item);",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4b6aeb1b0fe44e4b3dacc78c097c968f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 33,
          "methodNumber2" : 33
        },
        "pattern" : [ 1005, 1004, 4042, 1000, 4023, 4087, 1002, 4070, 1471, 2000, 3000, 1000, 4070, 29652, 17993, 4023, 1004, 4070, 1533, -6208, 49, 31507, 1001, 4076, 1001, 4070, 1531, 10450 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 6,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 2,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\titem.redraw ();\n\tint index = indexOf (item);\n\tlayoutItems (index + 1, true);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "edebc48987254b70c151cb9faad5ccad"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\titem.redraw ();\n\tint index = indexOf (item);\n\tlayoutItems (index + 1, true);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "4b6aeb1b0fe44e4b3dacc78c097c968f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 29,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\titem.redraw (true);\n\tint index = indexOf (item);\n\tlayoutItems (index + 1, true);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "2af9e2e868e257c15289f6176b715b56"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 1.0,
    "accuracyCharactersMin" : 1.0,
    "patternOriginal" : "\n\t//# match (original) {\n\tExpandItem item = items [index];\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\t//# wildcard expr(ARES0, true, 1)\n\titem.redraw (true);\n\tlayoutItems (index + 1, true);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tControl control = item.control;\n\tif (control != null && !control.isDisposed ()) {\n\t\tcontrol.setVisible (item.expanded);\n\t}\n\t//# use (ARES0, true, 1)\n\titem.redraw (true);\n\tint index = indexOf (item);\n\tlayoutItems (index + 1, true);\n\t//# }",
    "patternCreationTimeInNanoSec" : 55228604,
    "patternUseTimeInNanoSec" : 25206602379,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 1.0
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "139329_3",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw (true);+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw (true);+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2894064c7d97283212e104931b4af559",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 35,
          "moves" : 18,
          "inserts" : 11,
          "deletes" : 4,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw ();+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw ();+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f14ec2e4b59f07159d19f5016a9d474c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 35,
          "moves" : 18,
          "inserts" : 11,
          "deletes" : 4,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw ();+\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {+\t\tif (item == lastFocus) {+\t\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\t\tif (focusIndex < itemCount) {+\t\t\t\tlastFocus = items [focusIndex];+\t\t\t\tlastFocus.redraw ();+\t\t\t} else {+\t\t\t\tlastFocus = null;+\t\t\t}+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "225143ad6762326fbfdb0fc8d70a063b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 32467, -9796, 16320, -22344, 1002, 4017, 2089, 2000, 3001, 1002, 4070, 1400, 2000, 2999, 1002, 4070, 2001, 2000, 3001, 1004, 4017, 1006, 1006, 1006, 1002, 4076, 2141, 2000, 2999, 1006, 1000, 4063, 4017, 1000, 4070, 0, 2532, 4063, 1000, 4070, -20509, -31113, 4063, 1000, 4023, 4017, 1000, 4063, 4023, 1002, 4070, 2461, 2000, 2998, 1000, 4070, 0, 2532, 4063, 1000, 4029, 4023, 1000, 4029, 4023, 1000, 4029, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 2999, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2996, 1002, 4070, 1999, 2000, 2996, 1002, 4029, 2000, 2000, 2993, 1002, 4137, 2050, 2000, 2997, 1002, 4029, 1642, 2000, 2996, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 2999, 1007, 4061, 4027, 1000, 4070, 30365, -30, 4077, 1000, 4070, 30365, -30, 4063, 1000, 4070, 30365, -30, 4077, 1000, 4120, 4077, 1001, 4118, 1001, 4018 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 46,
          "moves" : 18,
          "inserts" : 22,
          "deletes" : 2,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 11
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw (true);+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw (true);+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "133962 part 2",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2894064c7d97283212e104931b4af559",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "09f3377205aaa1d485281a13668e93bf82c43b95",
          "commitId2" : "13f5e7c0520cc22f63e5c994eb94790ebceff613",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 35,
          "moves" : 18,
          "inserts" : 11,
          "deletes" : 4,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw ();+\tif (item == focusItem) {+\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\tif (focusIndex < itemCount) {+\t\t\tfocusItem = items [focusIndex];+\t\t\tfocusItem.redraw ();+\t\t} else {+\t\t\tfocusItem = null;+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "bug 108769",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f14ec2e4b59f07159d19f5016a9d474c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4a8b15adef2f0c6fe4bb1a8285a7194c7499fb25",
          "commitId2" : "ce44e057ecb68d0eeac12f3ad1f32ce88c8f5510",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1006, 1002, 4017, 2089, 2000, 3003, 1002, 4070, 2001, 2000, 3003, 1000, 4070, 49, 31507, 4017, 1006, 1004, 4017, 1006, 1006, 1006, 1006, 1004, 4070, -16206, 10970, 24846, 6155, 1002, 4076, 2141, 2000, 3001, 1006, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 3001, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2998, 1002, 4070, 1999, 2000, 2998, 1002, 4029, 2000, 2000, 2995, 1002, 4137, 2050, 2000, 2999, 1002, 4029, 1642, 2000, 2998, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1000, 4070, 24846, 6155, 4063, 1000, 4070, 24846, 6155, 4077, 1000, 4120, 4077, 1001, 4017, 1001, 4070, 32467, -9796, 1001, 4118, 1001, 4018 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 35,
          "moves" : 18,
          "inserts" : 11,
          "deletes" : 4,
          "updates" : 2,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid destroyItem (ExpandItem item)",
      "methodModified" : "\n\nvoid destroyItem (ExpandItem item)",
      "diff" : "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);-\titems [itemCount] = null;-\tif (itemCount == 0) {-\t\tfocusIndex = -1;-\t} else {-\t\tif (focusIndex == index && focusIndex == itemCount) {-\t\t\tfocusIndex = index - 1;-\t\t\titems [focusIndex].redraw ();+\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {+\t\tif (item == lastFocus) {+\t\t\tint focusIndex = index > 0 ? index - 1 : 1;+\t\t\tif (focusIndex < itemCount) {+\t\t\t\tlastFocus = items [focusIndex];+\t\t\t\tlastFocus.redraw ();+\t\t\t} else {+\t\t\t\tlastFocus = null;+\t\t\t}+\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);+\titems [itemCount] = null;",
      "commitMsg" : "139226 - Using the mouse to page down auto completion choices closes completion window",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "225143ad6762326fbfdb0fc8d70a063b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "c90593d76671c8a21df0faea4fa38db7faf97ace",
          "commitId2" : "087391432c358a97aa293253d3f96865b2753451",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 32467, -9796, 16320, -22344, 1002, 4017, 2089, 2000, 3001, 1002, 4070, 1400, 2000, 2999, 1002, 4070, 2001, 2000, 3001, 1004, 4017, 1006, 1006, 1006, 1002, 4076, 2141, 2000, 2999, 1006, 1000, 4063, 4017, 1000, 4070, 0, 2532, 4063, 1000, 4070, -20509, -31113, 4063, 1000, 4023, 4017, 1000, 4063, 4023, 1002, 4070, 2461, 2000, 2998, 1000, 4070, 0, 2532, 4063, 1000, 4029, 4023, 1000, 4029, 4023, 1000, 4029, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1002, 4070, 1900, 2000, 2999, 1000, 4082, 4087, 1002, 4017, 2640, 2000, 2996, 1002, 4070, 1999, 2000, 2996, 1002, 4029, 2000, 2000, 2993, 1002, 4137, 2050, 2000, 2997, 1002, 4029, 1642, 2000, 2996, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4070, 2000, 2000, 2999, 1002, 4070, 2000, 2000, 2999, 1007, 4061, 4027, 1000, 4070, 30365, -30, 4077, 1000, 4070, 30365, -30, 4063, 1000, 4070, 30365, -30, 4077, 1000, 4120, 4077, 1001, 4118, 1001, 4018 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 46,
          "moves" : 18,
          "inserts" : 22,
          "deletes" : 2,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 11
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (inDispose) return;\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw ();\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 0.6063829787234043,
        "accuracyCharacters" : 0.5984095427435387
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (inDispose) return;\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tif (item == focusItem) {\n\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\tif (focusIndex < itemCount) {\n\t\t\tfocusItem = items [focusIndex];\n\t\t\tfocusItem.redraw (true);\n\t\t} else {\n\t\t\tfocusItem = null;\n\t\t}\n\t}\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw ();\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 0.9894736842105263,
        "accuracyCharacters" : 0.9921104536489151
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (inDispose) return;\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {\n\t\tif (item == lastFocus) {\n\t\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\t\tif (focusIndex < itemCount) {\n\t\t\t\tlastFocus = items [focusIndex];\n\t\t\t\tlastFocus.redraw ();\n\t\t\t} else {\n\t\t\t\tlastFocus = null;\n\t\t\t}\n\t\t}\n\t}\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw ();\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 0.8411214953271028,
        "accuracyCharacters" : 0.8324420677361853
      } ],
      "memberId" : "f14ec2e4b59f07159d19f5016a9d474c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw ();\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 0.5192307692307693,
        "accuracyCharacters" : 0.515828677839851
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tif (item == focusItem) {\n\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\tif (focusIndex < itemCount) {\n\t\t\tfocusItem = items [focusIndex];\n\t\t\tfocusItem.redraw (true);\n\t\t} else {\n\t\t\tfocusItem = null;\n\t\t}\n\t}\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw ();\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 0.8269230769230769,
        "accuracyCharacters" : 0.8175046554934823
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {\n\t\tif (item == lastFocus) {\n\t\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\t\tif (focusIndex < itemCount) {\n\t\t\t\tlastFocus = items [focusIndex];\n\t\t\t\tlastFocus.redraw ();\n\t\t\t} else {\n\t\t\t\tlastFocus = null;\n\t\t\t}\n\t\t}\n\t}\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw ();\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "225143ad6762326fbfdb0fc8d70a063b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "09f3377205aaa1d485281a13668e93bf82c43b95",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw (true);\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 0.5913978494623656,
        "accuracyCharacters" : 0.5770020533880903
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tif (item == focusItem) {\n\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\tif (focusIndex < itemCount) {\n\t\t\tfocusItem = items [focusIndex];\n\t\t\tfocusItem.redraw (true);\n\t\t} else {\n\t\t\tfocusItem = null;\n\t\t}\n\t}\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw (true);\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {\n\t\tif (item == lastFocus) {\n\t\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\t\tif (focusIndex < itemCount) {\n\t\t\t\tlastFocus = items [focusIndex];\n\t\t\t\tlastFocus.redraw ();\n\t\t\t} else {\n\t\t\t\tlastFocus = null;\n\t\t\t}\n\t\t}\n\t}\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\titem.redraw (true);\n\tlayoutItems (index, true);\n}",
        "accuracyTokens" : 0.8285714285714286,
        "accuracyCharacters" : 0.8188539741219963
      } ],
      "memberId" : "2894064c7d97283212e104931b4af559"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.5723371991388464,
    "accuracyCharactersMin" : 0.5637467579904932,
    "patternOriginal" : "\n\t//# match (original) {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\tif (itemCount == 0) {\n\t\tfocusIndex = -1;\n\t} else {\n\t\tif (focusIndex == index && focusIndex == itemCount) {\n\t\t\tfocusIndex = index - 1;\n\t\t\t//# wildcard expr(ARES0, true, 1)\n\t\t\titems [focusIndex].redraw (true);\n\t\t}\n\t}\n\t//# wildcard expr(ARES1, true, 1)\n\titem.redraw (true);\n\tlayoutItems (index, true);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tint index = 0;\n\twhile (index < itemCount) {\n\t\tif (items [index] == item) break;\n\t\tindex++;\n\t}\n\tif (index == itemCount) return;\n\t//# choice {\n\t//# case {\n\tif (item == focusItem) {\n\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\tif (focusIndex < itemCount) {\n\t\t\tfocusItem = items [focusIndex];\n\t\t\tfocusItem.redraw (true);\n\t\t} else {\n\t\t\tfocusItem = null;\n\t\t}\n\t}\n\t//# }\n\t//# case {\n\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {\n\t\tif (item == lastFocus) {\n\t\t\tint focusIndex = index > 0 ? index - 1 : 1;\n\t\t\tif (focusIndex < itemCount) {\n\t\t\t\tlastFocus = items [focusIndex];\n\t\t\t\tlastFocus.redraw ();\n\t\t\t} else {\n\t\t\t\tlastFocus = null;\n\t\t\t}\n\t\t}\n\t}\n\t//# }\n\t//# }\n\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);\n\titems [itemCount] = null;\n\t//# use (ARES1, true, 1)\n\titem.redraw (true);\n\tlayoutItems (index, true);\n\t//# }",
    "patternCreationTimeInNanoSec" : 101352715,
    "patternUseTimeInNanoSec" : 24814122494,
    "accuracyTokensMax" : 0.9964912280701754,
    "accuracyCharactersMax" : 0.997370151216305
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "142947_2",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\t// Drag under effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else if (control instanceof StyledText) {-\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdropEffect = new TableDropTargetEffect();+\t} else if (control instanceof Tree) {+\t\tdropEffect = new TreeDropTargetEffect();-\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);+\t\t\t\tevent.item = getItem(getControl(), dragOverEvent.x, dragOverEvent.y);-\t\t\t\t-\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6ada29d77953ab4812f42972f3cb8af5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1006, 1002, 4135, 2000, 2000, 3002, 1002, 4070, 2720, 2000, 3006, 1002, 4828, 3191, 2000, 3004, 1006, 1006, 1004, 4070, 1229, 19374, 2005, -16591, 1002, 4016, 1649, 2000, 3003, 1002, 4070, 1391, 2000, 3001, 1002, 4828, 1040, 2000, 3002, 1004, 4070, 28757, -17181, 2005, -16591, 1002, 4135, 2000, 2000, 3000, 1006, 1006, 1004, 4070, -19930, -18031, 7697, -23200, 1002, 4112, 2000, 2000, 3001, 1002, 4828, 2000, 2000, 3000, 1004, 4070, 20351, -2123, 27169, -4385, 1002, 4135, 2000, 2000, 2998, 1002, 4070, 1420, 2000, 2999, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3001, 1004, 4070, 32611, -29504, -158, 27375, 1002, 4070, 1599, 2000, 3001, 1002, 4023, 1621, 1984, 2998, 1002, 4070, 1600, 2000, 2999, 1004, 4070, 19825, 1506, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3004, 1002, 4070, 2040, 2000, 3007, 1000, 4023, 4087, 1002, 4063, 2000, 2000, 3004, 1002, 4070, 2469, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1000, 4070, 7697, -23200, 4077, 1008, 4061, 1008, 4077, 1001, 4070, -19930, -18031, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4828, 979, -20136, 39, -6210, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 32611, -29504, 1001, 4070, -19930, -18031, 1001, 4070, 14519, 25949, 1001, 4070, 14519, 25949, 1001, 4063, 1001, 4070, 23800, 46, 1001, 4063, 1001, 4070, -2923, -5243, 1001, 4063, 1001, 4070, 1, 2298, 1001, 4070, -11859, -30648, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 120, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 121 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 69,
          "moves" : 25,
          "inserts" : 8,
          "deletes" : 30,
          "updates" : 6,
          "aligns" : 0
        },
        "treeSize" : 20
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\t\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\t\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\t-\t// DND effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);++\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t} else if (control instanceof Tree) {+\t\tdragEffect = new TreeDragSourceEffect();-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdragEffect = new TableDragSourceEffect();",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0e790203c3c4dd75e69b9f0140eb3c05",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1004, 4070, 25166, -603, -29595, -28833, 1006, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, -17802, -6912, 1006, 1006, 1002, 4070, 2609, 2000, 3001, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 39, -6210, -19965, -28482, 1006, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 1229, 19374, 7363, 5294, 1004, 4070, 19825, 1506, -17802, -6912, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3002, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1000, 4135, 4027, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1007, 4027, 4027, 1002, 4135, 2000, 2000, 2999, 1000, 4070, -27735, 7141, 4077, 1000, 4070, -27735, 7141, 4077, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 37,
          "moves" : 17,
          "inserts" : 12,
          "deletes" : 3,
          "updates" : 5,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\t //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\t //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);++\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t} else if (control instanceof Tree) {+\t\tdragEffect = new TreeDragSourceEffect();-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdragEffect = new TableDragSourceEffect();",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cb73d23c6822e7cb411af1af51c7fab3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1004, 4070, 25166, -603, -29595, -28833, 1006, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, -17802, -6912, 1006, 1006, 1002, 4070, 2609, 2000, 3001, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 39, -6210, -19965, -28482, 1006, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 1229, 19374, 7363, 5294, 1004, 4070, 19825, 1506, -17802, -6912, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3002, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1000, 4135, 4027, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1007, 4027, 4027, 1002, 4135, 2000, 2000, 2999, 1000, 4070, -27735, 7141, 4077, 1000, 4070, -27735, 7141, 4077, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 37,
          "moves" : 17,
          "inserts" : 12,
          "deletes" : 3,
          "updates" : 5,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\t//\t Drag and drop effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else if (control instanceof StyledText) {-\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a205165781010dc9bdd973abaa0ee600",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1006, 1004, 4070, 28757, -17181, -29595, -28833, 1004, 4070, -19930, -18031, -2615, -25272, 1004, 4070, 39, -6210, -1154, 22560, 1006, 1002, 4070, 2580, 2000, 3003, 1002, 4828, 2231, 2000, 3004, 1004, 4070, 19825, 1506, -17802, -6912, 1002, 4070, -5510, 2000, 3003, 1002, 4016, 1649, 2000, 3003, 1002, 4070, 1391, 2000, 3001, 1002, 4070, 10119, 2000, 3002, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1002, 4070, 1461, 2000, 2999, 1000, 4063, 4023, 1002, 4070, 2469, 2000, 3000, 1002, 4070, -5649, 2000, 2998, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 32611, -29504, 1001, 4070, 32611, -29504, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4112, 1001, 4070, 14519, 25949, 1008, 4027, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4828, 979, -20136, 39, -6210, 1008, 4027, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 20351, -2123, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 13,
          "inserts" : 6,
          "deletes" : 34,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "813014ad09778562850c6e495b64c153",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1002, 4135, 2000, 2000, 3001, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1006, 1004, 4070, 19825, 1506, 2005, -16591, 1002, 4070, -5510, 2000, 3000, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, 2005, -16591, 1004, 4070, 1229, 19374, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 2520, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1001, 4070, 14519, 25949, 1001, 4112, 1008, 4027, 1008, 4061, 1008, 4077, 1001, 4112 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 11,
          "inserts" : 8,
          "deletes" : 21,
          "updates" : 3,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "00c495c28774d613c7b07b2baba8c00b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1002, 4135, 2000, 2000, 3001, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1006, 1004, 4070, 19825, 1506, 2005, -16591, 1002, 4070, -5510, 2000, 3000, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, 2005, -16591, 1004, 4070, 1229, 19374, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 2520, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1001, 4070, 14519, 25949, 1001, 4112, 1008, 4027, 1008, 4061, 1008, 4077, 1001, 4112 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 11,
          "inserts" : 8,
          "deletes" : 21,
          "updates" : 3,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "bb683ee54158ac5345210c8cc816484c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c2ba51b847902300aec8ecd9848e485d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d39432f3016c04cbdf296feb1b2795fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : "\n\t\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\t// Drag under effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else if (control instanceof StyledText) {-\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdropEffect = new TableDropTargetEffect();+\t} else if (control instanceof Tree) {+\t\tdropEffect = new TreeDropTargetEffect();-\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);+\t\t\t\tevent.item = getItem(getControl(), dragOverEvent.x, dragOverEvent.y);-\t\t\t\t-\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6ada29d77953ab4812f42972f3cb8af5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1006, 1002, 4135, 2000, 2000, 3002, 1002, 4070, 2720, 2000, 3006, 1002, 4828, 3191, 2000, 3004, 1006, 1006, 1004, 4070, 1229, 19374, 2005, -16591, 1002, 4016, 1649, 2000, 3003, 1002, 4070, 1391, 2000, 3001, 1002, 4828, 1040, 2000, 3002, 1004, 4070, 28757, -17181, 2005, -16591, 1002, 4135, 2000, 2000, 3000, 1006, 1006, 1004, 4070, -19930, -18031, 7697, -23200, 1002, 4112, 2000, 2000, 3001, 1002, 4828, 2000, 2000, 3000, 1004, 4070, 20351, -2123, 27169, -4385, 1002, 4135, 2000, 2000, 2998, 1002, 4070, 1420, 2000, 2999, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3001, 1004, 4070, 32611, -29504, -158, 27375, 1002, 4070, 1599, 2000, 3001, 1002, 4023, 1621, 1984, 2998, 1002, 4070, 1600, 2000, 2999, 1004, 4070, 19825, 1506, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3004, 1002, 4070, 2040, 2000, 3007, 1000, 4023, 4087, 1002, 4063, 2000, 2000, 3004, 1002, 4070, 2469, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1000, 4070, 7697, -23200, 4077, 1008, 4061, 1008, 4077, 1001, 4070, -19930, -18031, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4828, 979, -20136, 39, -6210, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 32611, -29504, 1001, 4070, -19930, -18031, 1001, 4070, 14519, 25949, 1001, 4070, 14519, 25949, 1001, 4063, 1001, 4070, 23800, 46, 1001, 4063, 1001, 4070, -2923, -5243, 1001, 4063, 1001, 4070, 1, 2298, 1001, 4070, -11859, -30648, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 120, 1001, 4063, 1001, 4070, 1478, 29338, 1001, 4070, 0, 121 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 69,
          "moves" : 25,
          "inserts" : 8,
          "deletes" : 30,
          "updates" : 6,
          "aligns" : 0
        },
        "treeSize" : 20
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\t\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\t\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\t-\t// DND effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);++\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t} else if (control instanceof Tree) {+\t\tdragEffect = new TreeDragSourceEffect();-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdragEffect = new TableDragSourceEffect();",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0e790203c3c4dd75e69b9f0140eb3c05",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f92974be5295e55dcc64d71b120e30866018b539",
          "commitId2" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1004, 4070, 25166, -603, -29595, -28833, 1006, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, -17802, -6912, 1006, 1006, 1002, 4070, 2609, 2000, 3001, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 39, -6210, -19965, -28482, 1006, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 1229, 19374, 7363, 5294, 1004, 4070, 19825, 1506, -17802, -6912, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3002, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1000, 4135, 4027, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1007, 4027, 4027, 1002, 4135, 2000, 2000, 2999, 1000, 4070, -27735, 7141, 4077, 1000, 4070, -27735, 7141, 4077, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 37,
          "moves" : 17,
          "inserts" : 12,
          "deletes" : 3,
          "updates" : 5,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\t //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\t //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);++\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t} else if (control instanceof Tree) {+\t\tdragEffect = new TreeDragSourceEffect();-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\t\tdragEffect = new TableDragSourceEffect();",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cb73d23c6822e7cb411af1af51c7fab3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "effcd58adaf0b6446ddeaf664f8cdfeeddcc6493",
          "commitId2" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1004, 4070, 25166, -603, -29595, -28833, 1006, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, -17802, -6912, 1006, 1006, 1002, 4070, 2609, 2000, 3001, 1002, 4112, 2000, 2000, 3000, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 39, -6210, -19965, -28482, 1006, 1002, 4828, 2960, 2000, 3000, 1004, 4070, 1229, 19374, 7363, 5294, 1004, 4070, 19825, 1506, -17802, -6912, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3002, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1000, 4135, 4027, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1007, 4027, 4027, 1002, 4135, 2000, 2000, 2999, 1000, 4070, -27735, 7141, 4077, 1000, 4070, -27735, 7141, 4077, 1001, 4112, 1001, 4016, 1001, 4070, 14519, 25949 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 37,
          "moves" : 17,
          "inserts" : 12,
          "deletes" : 3,
          "updates" : 5,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "-\t//\t Drag and drop effect-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else if (control instanceof StyledText) {-\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a205165781010dc9bdd973abaa0ee600",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f8fe23a917bfec64ec37ec88389dd25746799609",
          "commitId2" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1006, 1004, 4070, 28757, -17181, -29595, -28833, 1004, 4070, -19930, -18031, -2615, -25272, 1004, 4070, 39, -6210, -1154, 22560, 1006, 1002, 4070, 2580, 2000, 3003, 1002, 4828, 2231, 2000, 3004, 1004, 4070, 19825, 1506, -17802, -6912, 1002, 4070, -5510, 2000, 3003, 1002, 4016, 1649, 2000, 3003, 1002, 4070, 1391, 2000, 3001, 1002, 4070, 10119, 2000, 3002, 1007, 4071, 4061, 1002, 4828, 1560, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1002, 4070, 1461, 2000, 2999, 1000, 4063, 4023, 1002, 4070, 2469, 2000, 3000, 1002, 4070, -5649, 2000, 2998, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 32611, -29504, 1001, 4070, 32611, -29504, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4112, 1001, 4070, 14519, 25949, 1008, 4027, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4828, 979, -20136, 39, -6210, 1008, 4027, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 20351, -2123, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 57,
          "moves" : 13,
          "inserts" : 6,
          "deletes" : 34,
          "updates" : 4,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "813014ad09778562850c6e495b64c153",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1002, 4135, 2000, 2000, 3001, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1006, 1004, 4070, 19825, 1506, 2005, -16591, 1002, 4070, -5510, 2000, 3000, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, 2005, -16591, 1004, 4070, 1229, 19374, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 2520, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1001, 4070, 14519, 25949, 1001, 4112, 1008, 4027, 1008, 4061, 1008, 4077, 1001, 4112 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 11,
          "inserts" : 8,
          "deletes" : 21,
          "updates" : 3,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DropTarget</code> to allow data to be dropped on the specified \n * <code>Control</code>.\n * Creating an instance of a DropTarget may cause system resources to be allocated \n * depending on the platform.  It is therefore mandatory that the DropTarget instance \n * be disposed when no longer required.\n * \n * @param control the <code>Control</code> over which the user positions the cursor to drop the data\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t   DND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DROP - unable to initiate drop target; this will occur if more than one\n *        drop target is created for a control or if the operating system will not allow the creation\n *        of the drop target</li>\n * </ul>\n *\n * <p>NOTE: ERROR_CANNOT_INIT_DROP should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DropTarget#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DropTarget(Control control, int style)",
      "diff" : "-\tif (control instanceof Tree) {-\t\teffect = new TreeDragAndDropEffect((Tree)control);-\t} else if (control instanceof Table) {-\t\teffect = new TableDragAndDropEffect((Table)control);-\t} else {-\t\teffect = new NoDragAndDropEffect(control);+\tObject effect = control.getData(DEFAULT_DROP_TARGET_EFFECT);+\tif (effect instanceof DropTargetEffect) {+\t\tdropEffect = (DropTargetEffect) effect;",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "00c495c28774d613c7b07b2baba8c00b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1002, 4135, 2000, 2000, 3001, 1002, 4070, 2580, 2000, 3001, 1002, 4828, 2231, 2000, 3003, 1006, 1004, 4070, 19825, 1506, 2005, -16591, 1002, 4070, -5510, 2000, 3000, 1002, 4016, 1649, 2000, 3002, 1002, 4070, 1391, 2000, 3000, 1002, 4828, 1040, 2000, 3001, 1004, 4070, 20351, -2123, 2005, -16591, 1004, 4070, 1229, 19374, -29595, -28833, 1007, 4071, 4061, 1002, 4828, 2520, 2000, 3004, 1002, 4070, 1900, 2000, 3002, 1000, 4023, 4087, 1000, 4063, 4023, 1002, 4070, 1508, 2000, 3000, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2005, 397, 4023, 1001, 4135, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1008, 4061, 1008, 4077, 1001, 4112, 1001, 4828, 979, -20136, 25166, -603, 1001, 4016, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 39, -6210, 1001, 4070, 14519, 25949, 1001, 4828, 979, -20136, 1229, 19374, 1001, 4070, 14519, 25949, 1001, 4112, 1008, 4027, 1008, 4061, 1008, 4077, 1001, 4112 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 43,
          "moves" : 11,
          "inserts" : 8,
          "deletes" : 21,
          "updates" : 3,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : "\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "add GWL_HWNDPARENT",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "bb683ee54158ac5345210c8cc816484c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
          "commitId2" : "f92974be5295e55dcc64d71b120e30866018b539",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c2ba51b847902300aec8ecd9848e485d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "commitId2" : "773bf9116f90588042fed5acf93c3a361238c384",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "methodModified" : " //$NON-NLS-1$\n\n/**\n * Creates a new <code>DragSource</code> to handle dragging from the specified <code>Control</code>.\n * Creating an instance of a DragSource may cause system resources to be allocated depending on the platform.  \n * It is therefore mandatory that the DragSource instance be disposed when no longer required.\n *\n * @param control the <code>Control</code> that the user clicks on to initiate the drag\n * @param style the bitwise OR'ing of allowed operations; this may be a combination of any of \n *\t\t\t\t\tDND.DROP_NONE, DND.DROP_COPY, DND.DROP_MOVE, DND.DROP_LINK\n * \n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>\n *    <li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_CANNOT_INIT_DRAG - unable to initiate drag source; this will occur if more than one\n *        drag source is created for a control or if the operating system will not allow the creation\n *        of the drag source</li>\n * </ul>\n * \n * <p>NOTE: ERROR_CANNOT_INIT_DRAG should be an SWTException, since it is a\n * recoverable error, but can not be changed due to backward compatability.</p>\n * \n * @see Widget#dispose\n * @see DragSource#checkSubclass\n * @see DND#DROP_NONE\n * @see DND#DROP_COPY\n * @see DND#DROP_MOVE\n * @see DND#DROP_LINK\n */\npublic DragSource(Control control, int style)",
      "diff" : "+\t+\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);+\tif (effect instanceof DragSourceEffect) {+\t\tdragEffect = (DragSourceEffect) effect;+\t}",
      "commitMsg" : "142947 - [DND] Classes to provide drag under feedback should be public",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d39432f3016c04cbdf296feb1b2795fd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e099db276518a9c35b41186cb26d354cbc1f9c9",
          "commitId2" : "3122b1ee12d2e768d209ccc414051c3f55fb7ea8",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
          "methodNumber1" : 0,
          "methodNumber2" : 0
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, -29595, -28833, 4068, 1000, 4070, -19930, -18031, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 14519, 25949, 4063, 1000, 4070, -1154, 22560, 4063, 1000, 4070, -2615, -25272, 4023, 1007, 4027, 4061, 1000, 4135, 4027, 1000, 4070, -19930, -18031, 4135, 1000, 4828, 979, -20136, -17802, -6912, 4135, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -27735, 7141, 4077, 1000, 4016, 4077, 1000, 4070, -19930, -18031, 4016, 1000, 4828, 979, -20136, -17802, -6912, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 24,
          "moves" : 0,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 13
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (DragTrackingHandler == null || DragTrackingHandler == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()) {\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\t\n\t// Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(event.x, event.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\t\t\t\t\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (DragTrackingHandler == null || DragTrackingHandler == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()) {\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\t\n\t// Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(event.x, event.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\t\t\t\t\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (DragTrackingHandler == null || DragTrackingHandler == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()) {\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\t\n\t// Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(event.x, event.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\t\t\t\t\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (DragTrackingHandler == null || DragTrackingHandler == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()) {\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\t\n\t// Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(event.x, event.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\t\t\t\t\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.8066666666666666,
        "accuracyCharacters" : 0.7793939393939394
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.6739130434782609,
        "accuracyCharacters" : 0.6172381835032438
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.7469135802469136,
        "accuracyCharacters" : 0.7207009857612268
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.657608695652174,
        "accuracyCharacters" : 0.6116774791473587
      } ],
      "memberId" : "00c495c28774d613c7b07b2baba8c00b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/emulated/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n}",
        "accuracyTokens" : 0.925,
        "accuracyCharacters" : 0.9018952062430323
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n}",
        "accuracyTokens" : 0.8626373626373627,
        "accuracyCharacters" : 0.8353715898400753
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n}",
        "accuracyTokens" : 0.8791208791208791,
        "accuracyCharacters" : 0.8438381937911571
      } ],
      "memberId" : "c2ba51b847902300aec8ecd9848e485d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.8066666666666666,
        "accuracyCharacters" : 0.7793939393939394
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.6739130434782609,
        "accuracyCharacters" : 0.6172381835032438
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.7469135802469136,
        "accuracyCharacters" : 0.7207009857612268
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.657608695652174,
        "accuracyCharacters" : 0.6116774791473587
      } ],
      "memberId" : "813014ad09778562850c6e495b64c153"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n}",
        "accuracyTokens" : 0.925,
        "accuracyCharacters" : 0.9018952062430323
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n}",
        "accuracyTokens" : 0.8626373626373627,
        "accuracyCharacters" : 0.8353715898400753
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\t//DragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n}",
        "accuracyTokens" : 0.8791208791208791,
        "accuracyCharacters" : 0.8438381937911571
      } ],
      "memberId" : "d39432f3016c04cbdf296feb1b2795fd"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tif (ConvertProc == null || DragDropFinish == null || DropFinish == null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n}",
        "accuracyTokens" : 0.9354838709677419,
        "accuracyCharacters" : 0.9128712871287129
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tif (ConvertProc == null || DragDropFinish == null || DropFinish == null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n}",
        "accuracyTokens" : 0.8798076923076923,
        "accuracyCharacters" : 0.8511904761904762
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tif (ConvertProc == null || DragDropFinish == null || DropFinish == null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tif (ConvertProc == null || DragDropFinish == null || DropFinish == null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n}",
        "accuracyTokens" : 0.8942307692307693,
        "accuracyCharacters" : 0.858843537414966
      } ],
      "memberId" : "bb683ee54158ac5345210c8cc816484c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DropProc == null || DragProc == null || TransferProc == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase SWT.Dispose: {\n\t\t\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\t\t\tonDispose();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Show: {\n\t\t\t\t\tif (!registered) {\n\t\t\t\t\t\tregisterDropTarget();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_ACTIVE,};\n\t\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\n\t\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Hide: {\n\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_INACTIVE,};\n\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\t\n\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tControl c = control;\n\twhile (c != null) {\n\t\tc.addListener (SWT.Show, controlListener);\n\t\tc.addListener (SWT.Hide, controlListener);\n\t\tc = c.getParent();\n\t}\n\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (DropTarget.this.control == null || \n\t\t\t\tDropTarget.this.control.isDisposed()) return;\n\t\t\t\n\t\t\tunregisterDropTarget();\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tif (control.isVisible()) registerDropTarget();\n\t\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\t\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\t\n\t\t\t\tselectedDataType = null;\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed ()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : 0.9348710990502035,
        "accuracyCharacters" : 0.9260681709073452
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DropProc == null || DragProc == null || TransferProc == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase SWT.Dispose: {\n\t\t\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\t\t\tonDispose();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Show: {\n\t\t\t\t\tif (!registered) {\n\t\t\t\t\t\tregisterDropTarget();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_ACTIVE,};\n\t\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\n\t\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Hide: {\n\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_INACTIVE,};\n\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\t\n\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tControl c = control;\n\twhile (c != null) {\n\t\tc.addListener (SWT.Show, controlListener);\n\t\tc.addListener (SWT.Hide, controlListener);\n\t\tc = c.getParent();\n\t}\n\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (DropTarget.this.control == null || \n\t\t\t\tDropTarget.this.control.isDisposed()) return;\n\t\t\t\n\t\t\tunregisterDropTarget();\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tif (control.isVisible()) registerDropTarget();\n\t\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\t\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\t\n\t\t\t\tselectedDataType = null;\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed ()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : 0.9066147859922179,
        "accuracyCharacters" : 0.8911764705882353
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DropProc == null || DragProc == null || TransferProc == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase SWT.Dispose: {\n\t\t\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\t\t\tonDispose();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Show: {\n\t\t\t\t\tif (!registered) {\n\t\t\t\t\t\tregisterDropTarget();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_ACTIVE,};\n\t\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\n\t\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Hide: {\n\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_INACTIVE,};\n\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\t\n\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tControl c = control;\n\twhile (c != null) {\n\t\tc.addListener (SWT.Show, controlListener);\n\t\tc.addListener (SWT.Hide, controlListener);\n\t\tc = c.getParent();\n\t}\n\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (DropTarget.this.control == null || \n\t\t\t\tDropTarget.this.control.isDisposed()) return;\n\t\t\t\n\t\t\tunregisterDropTarget();\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tif (control.isVisible()) registerDropTarget();\n\t\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\t\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\t\n\t\t\t\tselectedDataType = null;\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed ()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : 0.9225634178905207,
        "accuracyCharacters" : 0.9151386929948284
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DropProc == null || DragProc == null || TransferProc == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase SWT.Dispose: {\n\t\t\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\t\t\tonDispose();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Show: {\n\t\t\t\t\tif (!registered) {\n\t\t\t\t\t\tregisterDropTarget();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_ACTIVE,};\n\t\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\n\t\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase SWT.Hide: {\n\t\t\t\t\tint[] args = new int[]{OS.XmNdropSiteActivity,   OS.XmDROP_SITE_INACTIVE,};\n\t\t\t\t\tOS.XmDropSiteUpdate(DropTarget.this.control.handle, args, args.length/2);\t\n\t\t\t\t\tif (DropTarget.this.control instanceof Label) {\n\t\t\t\t\t\tint formHandle = OS.XtParent (DropTarget.this.control.handle);\n\t\t\t\t\t\tOS.XmDropSiteUpdate(formHandle, args, args.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tControl c = control;\n\twhile (c != null) {\n\t\tc.addListener (SWT.Show, controlListener);\n\t\tc.addListener (SWT.Hide, controlListener);\n\t\tc = c.getParent();\n\t}\n\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (DropTarget.this.control == null || \n\t\t\t\tDropTarget.this.control.isDisposed()) return;\n\t\t\t\n\t\t\tunregisterDropTarget();\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tif (control.isVisible()) registerDropTarget();\n\t\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\t\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\t\n\t\t\t\tselectedDataType = null;\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed ()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : 0.8975356679636836,
        "accuracyCharacters" : 0.8855203619909502
      } ],
      "memberId" : "6ada29d77953ab4812f42972f3cb8af5"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\n\tcontrolListener = new Listener() {\n\t\tpublic void handleEvent(Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\tcontrol.addListener(SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tDragSource.this.onDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.9211822660098522,
        "accuracyCharacters" : 0.8915770609318996
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\n\tcontrolListener = new Listener() {\n\t\tpublic void handleEvent(Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\tcontrol.addListener(SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tDragSource.this.onDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.8143459915611815,
        "accuracyCharacters" : 0.803690036900369
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\n\tcontrolListener = new Listener() {\n\t\tpublic void handleEvent(Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\tcontrol.addListener(SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tDragSource.this.onDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.9116279069767442,
        "accuracyCharacters" : 0.9091673675357443
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\n\tcontrolListener = new Listener() {\n\t\tpublic void handleEvent(Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\tcontrol.addListener(SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tDragSource.this.onDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.8438818565400844,
        "accuracyCharacters" : 0.8236162361623616
      } ],
      "memberId" : "cb73d23c6822e7cb411af1af51c7fab3"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (Drag_Motion == null || Drag_Leave == null || Drag_Data_Received == null || Drag_Drop == null) {\n\t\t DND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\t\n\tdrag_motion_handler = OS.g_signal_connect(control.handle, OS.drag_motion, Drag_Motion.getAddress(), 0);\n\tdrag_leave_handler = OS.g_signal_connect(control.handle, OS.drag_leave, Drag_Leave.getAddress(), 0);\n\tdrag_data_received_handler = OS.g_signal_connect(control.handle, OS.drag_data_received, Drag_Data_Received.getAddress(), 0);\n\tdrag_drop_handler = OS.g_signal_connect(control.handle, OS.drag_drop, Drag_Drop.getAddress(), 0);\n\n\t// Dispose listeners\t\n\tcontrolListener = new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\t\t\n\tthis.addListener(SWT.Dispose, new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tonDispose();\n\t\t}\t\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (Drag_Motion == null || Drag_Leave == null || Drag_Data_Received == null || Drag_Drop == null) {\n\t\t DND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\t\n\tdrag_motion_handler = OS.g_signal_connect(control.handle, OS.drag_motion, Drag_Motion.getAddress(), 0);\n\tdrag_leave_handler = OS.g_signal_connect(control.handle, OS.drag_leave, Drag_Leave.getAddress(), 0);\n\tdrag_data_received_handler = OS.g_signal_connect(control.handle, OS.drag_data_received, Drag_Data_Received.getAddress(), 0);\n\tdrag_drop_handler = OS.g_signal_connect(control.handle, OS.drag_drop, Drag_Drop.getAddress(), 0);\n\n\t// Dispose listeners\t\n\tcontrolListener = new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\t\t\n\tthis.addListener(SWT.Dispose, new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tonDispose();\n\t\t}\t\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (Drag_Motion == null || Drag_Leave == null || Drag_Data_Received == null || Drag_Drop == null) {\n\t\t DND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\t\n\tdrag_motion_handler = OS.g_signal_connect(control.handle, OS.drag_motion, Drag_Motion.getAddress(), 0);\n\tdrag_leave_handler = OS.g_signal_connect(control.handle, OS.drag_leave, Drag_Leave.getAddress(), 0);\n\tdrag_data_received_handler = OS.g_signal_connect(control.handle, OS.drag_data_received, Drag_Data_Received.getAddress(), 0);\n\tdrag_drop_handler = OS.g_signal_connect(control.handle, OS.drag_drop, Drag_Drop.getAddress(), 0);\n\n\t// Dispose listeners\t\n\tcontrolListener = new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\t\t\n\tthis.addListener(SWT.Dispose, new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tonDispose();\n\t\t}\t\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper(control, checkStyle(style));\n\tthis.control = control;\n\tif (Drag_Motion == null || Drag_Leave == null || Drag_Data_Received == null || Drag_Drop == null) {\n\t\t DND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\t\n\tdrag_motion_handler = OS.g_signal_connect(control.handle, OS.drag_motion, Drag_Motion.getAddress(), 0);\n\tdrag_leave_handler = OS.g_signal_connect(control.handle, OS.drag_leave, Drag_Leave.getAddress(), 0);\n\tdrag_data_received_handler = OS.g_signal_connect(control.handle, OS.drag_data_received, Drag_Data_Received.getAddress(), 0);\n\tdrag_drop_handler = OS.g_signal_connect(control.handle, OS.drag_drop, Drag_Drop.getAddress(), 0);\n\n\t// Dispose listeners\t\n\tcontrolListener = new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener(SWT.Dispose, controlListener);\n\t\t\n\tthis.addListener(SWT.Dispose, new Listener(){\n\t\tpublic void handleEvent(Event event){\n\t\t\tonDispose();\n\t\t}\t\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\n\tdragOverHeartbeat = new Runnable() {\n\t\tpublic void run() {\n\t\t\tControl control = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed() || dragOverStart == 0) return;\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tint delay = DRAGOVER_HYSTERESIS;\n\t\t\tif (time < dragOverStart) {\n\t\t\t\tdelay = (int)(dragOverStart - time);\n\t\t\t} else {\t\n\t\t\t\tint allowedOperations = dragOverEvent.operations;\n\t\t\t\tTransferData[] allowedTypes = dragOverEvent.dataTypes;\n\t\t\t\t//pass a copy of data types in to listeners in case application modifies it\n\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];\n\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);\n\t\n\t\t\t\tDNDEvent event = new DNDEvent();\n\t\t\t\tevent.widget = dragOverEvent.widget;\n\t\t\t\tevent.x = dragOverEvent.x;\n\t\t\t\tevent.y = dragOverEvent.y;\n\t\t\t\tevent.time = (int)time;\n\t\t\t\tevent.feedback = DND.FEEDBACK_SELECT;\n\t\t\t\tevent.dataTypes = dataTypes;\n\t\t\t\tevent.dataType = selectedDataType;\n\t\t\t\tevent.operations = dragOverEvent.operations;\n\t\t\t\tevent.detail  = selectedOperation;\n\t\t\t\tevent.item = effect.getItem(dragOverEvent.x, dragOverEvent.y);\n\t\t\t\tselectedDataType = null;\n\t\t\t\tselectedOperation = DND.DROP_NONE;\n\t\t\t\tnotifyListeners(DND.DragOver, event);\n\t\t\t\teffect.showDropTargetEffect(event.feedback, DND.DragOver, event.x, event.y);\n\t\t\t\tif (event.dataType != null) {\n\t\t\t\t\tfor (int i = 0; i < allowedTypes.length; i++) {\n\t\t\t\t\t\tif (allowedTypes[i].type == event.dataType.type) {\n\t\t\t\t\t\t\tselectedDataType = event.dataType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {\n\t\t\t\t\tselectedOperation = event.detail;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrol = DropTarget.this.control;\n\t\t\tif (control == null || control.isDisposed()) return;\n\t\t\tcontrol.getDisplay().timerExec(delay, dragOverHeartbeat);\n\t\t}\n\t};\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DragGetData == null || DragEnd == null || DragDataDelete == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tOS.g_signal_connect(control.handle, OS.drag_data_get, DragGetData.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_end, DragEnd.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_data_delete, DragDataDelete.getAddress(), 0);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\t// DND effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n}",
        "accuracyTokens" : 0.8449612403100775,
        "accuracyCharacters" : 0.8344923504867872
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DragGetData == null || DragEnd == null || DragDataDelete == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tOS.g_signal_connect(control.handle, OS.drag_data_get, DragGetData.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_end, DragEnd.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_data_delete, DragDataDelete.getAddress(), 0);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\t// DND effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n}",
        "accuracyTokens" : 0.7465753424657534,
        "accuracyCharacters" : 0.7186761229314421
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DragGetData == null || DragEnd == null || DragDataDelete == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tOS.g_signal_connect(control.handle, OS.drag_data_get, DragGetData.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_end, DragEnd.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_data_delete, DragDataDelete.getAddress(), 0);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\t// DND effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n}",
        "accuracyTokens" : 0.8074074074074075,
        "accuracyCharacters" : 0.7863695937090432
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (DragGetData == null || DragEnd == null || DragDataDelete == null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\n\tOS.g_signal_connect(control.handle, OS.drag_data_get, DragGetData.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_end, DragEnd.getAddress(), 0);\n\tOS.g_signal_connect(control.handle, OS.drag_data_delete, DragDataDelete.getAddress(), 0);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\t// DND effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n}",
        "accuracyTokens" : 0.7465753424657534,
        "accuracyCharacters" : 0.7216312056737588
      } ],
      "memberId" : "0e790203c3c4dd75e69b9f0140eb3c05"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DropTarget.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\t\n\tif (COM.CoLockObjectExternal(iDropTarget.getAddress(), true, true) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tif (COM.RegisterDragDrop( control.handle, iDropTarget.getAddress()) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\t\n\tif (COM.CoLockObjectExternal(iDropTarget.getAddress(), true, true) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tif (COM.RegisterDragDrop( control.handle, iDropTarget.getAddress()) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\t\n\tif (COM.CoLockObjectExternal(iDropTarget.getAddress(), true, true) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tif (COM.RegisterDragDrop( control.handle, iDropTarget.getAddress()) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DROPTARGETID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\t}\n\tcontrol.setData(DROPTARGETID, this);\n\tcreateCOMInterfaces();\n\tthis.AddRef();\n\t\n\tif (COM.CoLockObjectExternal(iDropTarget.getAddress(), true, true) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\tif (COM.RegisterDragDrop( control.handle, iDropTarget.getAddress()) != COM.S_OK)\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);\n\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (!DropTarget.this.isDisposed()){\n\t\t\t\tDropTarget.this.dispose();\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\n\t// Drag under effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "925197473b2cbfa3068041e6e12e537a5b66e2e6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java",
      "methodNumber" : 0,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\t\n\t//\t Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.7932692307692307,
        "accuracyCharacters" : 0.7460050462573591
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\t\n\t//\t Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.6818181818181818,
        "accuracyCharacters" : 0.6216216216216216
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\t\n\t//\t Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.7636363636363637,
        "accuracyCharacters" : 0.7055599060297573
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper (control, checkStyle(style));\n\tthis.control = control;\n\tif (control.getData(DRAGSOURCEID) != null) {\n\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);\n\t}\n\tcontrol.setData(DRAGSOURCEID, this);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\tif (event.type == SWT.Dispose) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.type == SWT.DragDetect) {\n\t\t\t\tif (!DragSource.this.isDisposed()) {\n\t\t\t\t\tDragSource.this.drag(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\tcontrol.addListener (SWT.DragDetect, controlListener);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\tonDispose();\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\t\n\t//\t Drag and drop effect\n\tif (control instanceof Tree) {\n\t\teffect = new TreeDragAndDropEffect((Tree)control);\n\t} else if (control instanceof Table) {\n\t\teffect = new TableDragAndDropEffect((Table)control);\n\t} else if (control instanceof StyledText) {\n\t\teffect = new StyledTextDragAndDropEffect((StyledText)control);\n\t} else {\n\t\teffect = new NoDragAndDropEffect(control);\n\t}\n}",
        "accuracyTokens" : 0.6942148760330579,
        "accuracyCharacters" : 0.6243936243936244
      } ],
      "memberId" : "a205165781010dc9bdd973abaa0ee600"
    } ],
    "foundMembers" : 9,
    "numberOfRecommendationSets" : 12,
    "precision" : 0.75,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.7845083325217295,
    "accuracyCharactersMin" : 0.7527551952899698,
    "patternOriginal" : "\n\t//# match (original, (DRAGSOURCEID,event,SWT,Dispose,e)) {\n\tsuper (control, checkStyle(style));\n\t//# wildcard stmt(ARES0);\n\tthis.control = control;\n\t//# wildcard stmt(ARES1);\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\t//# wildcard stmt(ARES2);\n\tcontrol.setData(DRAGSOURCEID, this);\n\t\n\t//# wildcard stmt(ARES3);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\t//# wildcard stmt(ARES4);\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t//# wildcard stmt(ARES5);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\t//# wildcard stmt(ARES6);\n\t\t}\n\t});\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tsuper (control, checkStyle(style));\n\t//# use (ARES0);\n\tthis.control = control;\n\t//# use (ARES1);\n\tif (control.getData(DRAGSOURCEID) != null)\n\t\t//# use (ARES2);\n\tcontrol.setData(DRAGSOURCEID, this);\n\t\n\t//# use (ARES3);\n\t\n\tcontrolListener = new Listener () {\n\t\tpublic void handleEvent (Event event) {\n\t\t\t//# use (ARES4);\n\t\t}\n\t};\n\tcontrol.addListener (SWT.Dispose, controlListener);\n\t//# use (ARES5);\n\t\n\tthis.addListener(SWT.Dispose, new Listener() {\n\t\tpublic void handleEvent(Event e) {\n\t\t\t//# use (ARES6);\n\t\t}\n\t});\n\t\n\tObject effect = control.getData(DEFAULT_DRAG_SOURCE_EFFECT);\n\t//# choice {\n\t\n\t//# case {\n\tif (effect instanceof DropTargetEffect) {\n\t\tdropEffect = (DropTargetEffect) effect;\n\t} else if (control instanceof Table) {\n\t\tdropEffect = new TableDropTargetEffect();\n\t} else if (control instanceof Tree) {\n\t\tdropEffect = new TreeDropTargetEffect();\n\t}\n\t\n\t//# }\n\t//# case {\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t}\n\t//# }\n\t//# case {\n\tif (effect instanceof DragSourceEffect) {\n\t\tdragEffect = (DragSourceEffect) effect;\n\t} else if (control instanceof Tree) {\n\t\tdragEffect = new TreeDragSourceEffect();\n\t} else if (control instanceof Table) {\n\t\tdragEffect = new TableDragSourceEffect();\n\t}\n\t//# }\n\t//# }\n\t//# }",
    "patternCreationTimeInNanoSec" : 14062306042,
    "patternUseTimeInNanoSec" : 58059139988,
    "accuracyTokensMax" : 0.900846352163633,
    "accuracyCharactersMax" : 0.8860578682194571
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "76182",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nint shiftedKey (int key)",
      "diff" : "+\tif (synchronizer == this.synchronizer) return;",
      "commitMsg" : "76182 - Display.setSynchronizer considered harmful",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f57decb8b2ec2821183980c420a424",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
          "commitId2" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 133,
          "methodNumber2" : 134
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22379, -31454, 4017, 1000, 4063, 4017, 1000, 4132, 4063, 1000, 4070, -22379, -31454, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 0,
          "inserts" : 7,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nvoid setMenuBar (Menu menu)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "52b070c0c3f05139478d6ff0a70bbe6d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 137,
          "methodNumber2" : 138
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nvoid showIMWindow (Control control)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9d2949a58f429f843db67380f2f36636",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 121,
          "methodNumber2" : 122
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\nvoid setToolTipText (int handle, String toolTipText)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b52e104286a62bbc773d970b4462587",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 115,
          "methodNumber2" : 116
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\n/**\n * Causes the user-interface thread to <em>sleep</em> (that is,\n * to be put in a state where it does not consume CPU cycles)\n * until an event is received or it is otherwise awakened.\n *\n * @return <code>true</code> if an event requiring dispatching was placed on the queue.\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n *\n * @see #wake\n */\npublic boolean sleep ()",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f59de5ef7d7afb0d622d5751ad522fc1",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 86,
          "methodNumber2" : 87
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\n/**\n * Causes the user-interface thread to <em>sleep</em> (that is,\n * to be put in a state where it does not consume CPU cycles)\n * until an event is received or it is otherwise awakened.\n *\n * @return <code>true</code> if an event requiring dispatching was placed on the queue.\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n *\n * @see #wake\n */\npublic boolean sleep ()",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5287de7fefbc90cf40d848a75c32628",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 98,
          "methodNumber2" : 99
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nint shiftedKey (int key)",
      "diff" : "+\tif (synchronizer == this.synchronizer) return;",
      "commitMsg" : "76182 - Display.setSynchronizer considered harmful",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f57decb8b2ec2821183980c420a424",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
          "commitId2" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 133,
          "methodNumber2" : 134
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22379, -31454, 4017, 1000, 4063, 4017, 1000, 4132, 4063, 1000, 4070, -22379, -31454, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 0,
          "inserts" : 7,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nvoid setMenuBar (Menu menu)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "52b070c0c3f05139478d6ff0a70bbe6d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 137,
          "methodNumber2" : 138
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\nvoid showIMWindow (Control control)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9d2949a58f429f843db67380f2f36636",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 121,
          "methodNumber2" : 122
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\nvoid setToolTipText (int handle, String toolTipText)",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8b52e104286a62bbc773d970b4462587",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 115,
          "methodNumber2" : 116
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\n/**\n * Causes the user-interface thread to <em>sleep</em> (that is,\n * to be put in a state where it does not consume CPU cycles)\n * until an event is received or it is otherwise awakened.\n *\n * @return <code>true</code> if an event requiring dispatching was placed on the queue.\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n *\n * @see #wake\n */\npublic boolean sleep ()",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f59de5ef7d7afb0d622d5751ad522fc1",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 86,
          "methodNumber2" : 87
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the synchronizer used by the display to be\n * the argument, which can not be null.\n *\n * @param synchronizer the new synchronizer for the display (must not be null)\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the synchronizer is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_FAILED_EXEC - if an exception occurred while running an inter-thread message</li>\n * </ul>\n */\npublic void setSynchronizer (Synchronizer synchronizer)",
      "methodModified" : "\n\n/**\n * Causes the user-interface thread to <em>sleep</em> (that is,\n * to be put in a state where it does not consume CPU cycles)\n * until an event is received or it is otherwise awakened.\n *\n * @return <code>true</code> if an event requiring dispatching was placed on the queue.\n *\n * @exception SWTException <ul>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n *    <li>ERROR_DEVICE_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n *\n * @see #wake\n */\npublic boolean sleep ()",
      "diff" : "-\tif (this.synchronizer != null) {-\t\tthis.synchronizer.runAsyncMessages(true);+\tif (synchronizer == this.synchronizer) return;+\tSynchronizer oldSynchronizer;+\tsynchronized (Device.class) {+\t\toldSynchronizer = this.synchronizer;+\t\tthis.synchronizer = synchronizer;-\tthis.synchronizer = synchronizer;+\tif (oldSynchronizer != null) {+\t\toldSynchronizer.runAsyncMessages(true);+\t}",
      "commitMsg" : "76182 -  Display.setSynchronizer considered harmful (API)",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5287de7fefbc90cf40d848a75c32628",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b5e020287369ee8e76afeb406cf84db2742bb07c",
          "commitId2" : "55f1a49b5ad8e61a041f7d9074210e97fce9bfdb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java",
          "methodNumber1" : 98,
          "methodNumber2" : 99
        },
        "pattern" : [ 1006, 1007, 4027, 4061, 1000, 4017, 4027, 1002, 4063, 2001, 2000, 3000, 1000, 4070, -22379, -31454, 4017, 1007, 4047, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -19872, -9918, 4068, 1000, 4070, 7491, -31511, 4067, 1007, 4127, 4061, 1000, 4061, 4127, 1007, 4077, 4061, 1002, 4063, 2141, 2000, 3001, 1000, 4070, 7491, -31511, 4077, 1000, 4063, 4127, 1000, 4070, 31184, 2678, 4063, 1000, 4144, 4063, 1000, 4070, 7491, -31511, 4017, 1000, 4070, 7491, -31511, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 22,
          "moves" : 3,
          "inserts" : 19,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 115,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tif (synchronizer == this.synchronizer) return;\n\tSynchronizer oldSynchronizer;\n\tsynchronized (Device.class) {\n\t\toldSynchronizer = this.synchronizer;\n\t\tthis.synchronizer = synchronizer;\n\t}\n\tif (oldSynchronizer != null) {\n\t\toldSynchronizer.runAsyncMessages(true);\n\t}\n\tthis.synchronizer = synchronizer;\n}",
        "accuracyTokens" : 0.9090909090909091,
        "accuracyCharacters" : 0.9081364829396326
      } ],
      "memberId" : "8b52e104286a62bbc773d970b4462587"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 121,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tif (synchronizer == this.synchronizer) return;\n\tSynchronizer oldSynchronizer;\n\tsynchronized (Device.class) {\n\t\toldSynchronizer = this.synchronizer;\n\t\tthis.synchronizer = synchronizer;\n\t}\n\tif (oldSynchronizer != null) {\n\t\toldSynchronizer.runAsyncMessages(true);\n\t}\n\tthis.synchronizer = synchronizer;\n}",
        "accuracyTokens" : 0.9090909090909091,
        "accuracyCharacters" : 0.9081364829396326
      } ],
      "memberId" : "9d2949a58f429f843db67380f2f36636"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 133,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tif (synchronizer == this.synchronizer) return;\n\tSynchronizer oldSynchronizer;\n\tsynchronized (Device.class) {\n\t\toldSynchronizer = this.synchronizer;\n\t\tthis.synchronizer = synchronizer;\n\t}\n\tif (oldSynchronizer != null) {\n\t\toldSynchronizer.runAsyncMessages(true);\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "f3f57decb8b2ec2821183980c420a424"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 98,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tif (synchronizer == this.synchronizer) return;\n\tSynchronizer oldSynchronizer;\n\tsynchronized (Device.class) {\n\t\toldSynchronizer = this.synchronizer;\n\t\tthis.synchronizer = synchronizer;\n\t}\n\tif (oldSynchronizer != null) {\n\t\toldSynchronizer.runAsyncMessages(true);\n\t}\n\tthis.synchronizer = synchronizer;\n}",
        "accuracyTokens" : 0.9090909090909091,
        "accuracyCharacters" : 0.9081364829396326
      } ],
      "memberId" : "f5287de7fefbc90cf40d848a75c32628"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 86,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tif (synchronizer == this.synchronizer) return;\n\tSynchronizer oldSynchronizer;\n\tsynchronized (Device.class) {\n\t\toldSynchronizer = this.synchronizer;\n\t\tthis.synchronizer = synchronizer;\n\t}\n\tif (oldSynchronizer != null) {\n\t\toldSynchronizer.runAsyncMessages(true);\n\t}\n\tthis.synchronizer = synchronizer;\n}",
        "accuracyTokens" : 0.9090909090909091,
        "accuracyCharacters" : 0.9081364829396326
      } ],
      "memberId" : "f59de5ef7d7afb0d622d5751ad522fc1"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "946cda1813a5b0d563e77d6a93154d23fca1382a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java",
      "methodNumber" : 137,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tif (synchronizer == this.synchronizer) return;\n\tSynchronizer oldSynchronizer;\n\tsynchronized (Device.class) {\n\t\toldSynchronizer = this.synchronizer;\n\t\tthis.synchronizer = synchronizer;\n\t}\n\tif (oldSynchronizer != null) {\n\t\toldSynchronizer.runAsyncMessages(true);\n\t}\n\tthis.synchronizer = synchronizer;\n}",
        "accuracyTokens" : 0.9090909090909091,
        "accuracyCharacters" : 0.9081364829396326
      } ],
      "memberId" : "52b070c0c3f05139478d6ff0a70bbe6d"
    } ],
    "foundMembers" : 6,
    "numberOfRecommendationSets" : 6,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9242424242424243,
    "accuracyCharactersMin" : 0.9234470691163604,
    "patternOriginal" : "\n\t//# match (original) {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\t//# wildcard stmt(ARES0);\n\t//# wildcard expr(ARES1, this.synchronizer, 1)\n\tif (this.synchronizer != null) {\n\t\t//# wildcard expr(ARES2, this.synchronizer, 1)\n\t\tthis.synchronizer.runAsyncMessages(true);\n\t}\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tcheckDevice ();\n\tif (synchronizer == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tif (synchronizer == this.synchronizer) return;\n\tSynchronizer oldSynchronizer;\n\tsynchronized (Device.class) {\n\t\toldSynchronizer = this.synchronizer;\n\t\tthis.synchronizer = synchronizer;\n\t}\n\tif (oldSynchronizer != null) {\n\t\toldSynchronizer.runAsyncMessages(true);\n\t}\n\t//# }",
    "patternCreationTimeInNanoSec" : 203830878,
    "patternUseTimeInNanoSec" : 57058727652,
    "accuracyTokensMax" : 0.9242424242424243,
    "accuracyCharactersMax" : 0.9234470691163604
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "77194",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return the ID of the button that was selected to dismiss the\n *         message box (e.g. SWT.OK, SWT.CANCEL, etc...)\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic int open ()",
      "methodModified" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return the ID of the button that was selected to dismiss the\n *         message box (e.g. SWT.OK, SWT.CANCEL, etc...)\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic int open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible (); +\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList1 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList1, argList1.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList1 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList1 [3]) / 2;+\t\tint[] argList2 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList2, argList2.length / 2);+\t}-\t+",
      "commitMsg" : "94429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "24bbecc32da18833e1217645b45f1485",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1649f9291e5ab587842ff74da4e7552a83358f40",
          "commitId2" : "cec8d1f59cc30d6b9f2a9a3c74fa145c00429317",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MessageBox.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -355, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -355, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -355, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -355, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -355, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -354, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -354, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -354, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 157,
          "moves" : 0,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;+\t\tint[] argList5 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);+\t}",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "86877308add979cb916d7aeebaa60dfb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "87bde8ecf91d5b6cb5383cb413b8a36aca5ffd8f",
          "commitId2" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -351, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 157,
          "moves" : 0,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();-\t\tOS.XmNfilterLabelString, xmStringPtr4+\t\tOS.XmNfilterLabelString, xmStringPtr4,+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,-\t* Bug in AIX. The dialog does not responde to input, if the parent-\t* is not realized.  The fix is to realized the parent.  +\t* Bug in AIX. The dialog does not respond to input, if the parent+\t* is not realized.  The fix is to realize the parent.  -\tint [] argList = {+\tint [] argList2 = {-\tint textArea = OS.XmCreateLabel(dialog, name, argList, argList.length/2);+\tint textArea = OS.XmCreateLabel(dialog, name, argList2, argList2.length/2);+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList3 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList3, argList3.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList3 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList3 [3]) / 2;+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList4, argList4.length / 2);+\t}-\t\tint [] argList2 = {OS.XmNdirMask, 0};-\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);-\t\tint xmString3 = argList2 [1];+\t\tint [] argList5 = {OS.XmNdirMask, 0};+\t\tOS.XtGetValues (dialog, argList5, argList5.length / 2);+\t\tint xmString3 = argList5 [1];",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7487c6222f62527d4afd13672d2a173b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "commitId2" : "dd5d27ae2bd4eb2cc73da0a3725fc80f024c4ac2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/DirectoryDialog.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1004, 4095, 1002, 4070, 2000, 2001, 2999, 1002, 4039, 2000, 2001, 2999, 1027, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -24837, -354, -24837, -351, 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1007, 4023, 4061, 1002, 4070, 2000, 1999, 3001, 1002, 4039, 2000, 1999, 3001, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082, 1002, 4070, 2000, 2000, 3002, 1002, 4095, 2000, 2000, 3000, 1000, 4070, -24837, -351, 4067, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 173,
          "moves" : 7,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 5,
          "aligns" : 4
        },
        "treeSize" : 12
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return the ID of the button that was selected to dismiss the\n *         message box (e.g. SWT.OK, SWT.CANCEL, etc...)\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic int open ()",
      "methodModified" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return the ID of the button that was selected to dismiss the\n *         message box (e.g. SWT.OK, SWT.CANCEL, etc...)\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic int open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible (); +\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList1 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList1, argList1.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList1 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList1 [3]) / 2;+\t\tint[] argList2 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList2, argList2.length / 2);+\t}-\t+",
      "commitMsg" : "94429",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "24bbecc32da18833e1217645b45f1485",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1649f9291e5ab587842ff74da4e7552a83358f40",
          "commitId2" : "cec8d1f59cc30d6b9f2a9a3c74fa145c00429317",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MessageBox.java",
          "methodNumber1" : 6,
          "methodNumber2" : 6
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -355, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -355, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -355, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -355, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -355, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -354, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -354, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -354, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 157,
          "moves" : 0,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the first selected file,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;+\t\tint[] argList5 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);+\t}",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "86877308add979cb916d7aeebaa60dfb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "87bde8ecf91d5b6cb5383cb413b8a36aca5ffd8f",
          "commitId2" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java",
          "methodNumber1" : 10,
          "methodNumber2" : 10
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -352, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -351, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 157,
          "moves" : 0,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "methodModified" : "\n/**\n * Makes the dialog visible and brings it to the front\n * of the display.\n *\n * @return a string describing the absolute path of the selected directory,\n *         or null if the dialog was cancelled or an error occurred\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the dialog has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the dialog</li>\n * </ul>\n */\npublic String open ()",
      "diff" : "+\tboolean defaultPos = parent.isVisible ();-\t\tOS.XmNfilterLabelString, xmStringPtr4+\t\tOS.XmNfilterLabelString, xmStringPtr4,+\t\tOS.XmNdefaultPosition, defaultPos ? 1 : 0,-\t* Bug in AIX. The dialog does not responde to input, if the parent-\t* is not realized.  The fix is to realized the parent.  +\t* Bug in AIX. The dialog does not respond to input, if the parent+\t* is not realized.  The fix is to realize the parent.  -\tint [] argList = {+\tint [] argList2 = {-\tint textArea = OS.XmCreateLabel(dialog, name, argList, argList.length/2);+\tint textArea = OS.XmCreateLabel(dialog, name, argList2, argList2.length/2);+\tif (!defaultPos) {+\t\tOS.XtRealizeWidget (dialog);+\t\tint[] argList3 = new int[] {+\t\t\tOS.XmNwidth, 0,+\t\t\tOS.XmNheight, 0,+\t\t};+\t\tOS.XtGetValues (dialog, argList3, argList3.length / 2);+\t\tMonitor monitor = parent.getMonitor ();+\t\tRectangle bounds = monitor.getBounds ();+\t\tint x = bounds.x + (bounds.width - argList3 [1]) / 2;+\t\tint y = bounds.y + (bounds.height - argList3 [3]) / 2;+\t\tint[] argList4 = new int[] {+\t\t\tOS.XmNx, x,+\t\t\tOS.XmNy, y,+\t\t};+\t\tOS.XtSetValues (dialog, argList4, argList4.length / 2);+\t}-\t\tint [] argList2 = {OS.XmNdirMask, 0};-\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);-\t\tint xmString3 = argList2 [1];+\t\tint [] argList5 = {OS.XmNdirMask, 0};+\t\tOS.XtGetValues (dialog, argList5, argList5.length / 2);+\t\tint xmString3 = argList5 [1];",
      "commitMsg" : "77194",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7487c6222f62527d4afd13672d2a173b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e906fe74fb9b7952dab4aec6ddfa7b2b93bc0df2",
          "commitId2" : "dd5d27ae2bd4eb2cc73da0a3725fc80f024c4ac2",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/DirectoryDialog.java",
          "methodNumber1" : 5,
          "methodNumber2" : 5
        },
        "pattern" : [ 1005, 1005, 1005, 1005, 1004, 4095, 1002, 4070, 2000, 2001, 2999, 1002, 4039, 2000, 2001, 2999, 1027, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -11372, -31724, -24837, -353, 1004, 4070, -24837, -354, -24837, -351, 1007, 4071, 4061, 1000, 4828, 979, -20136, 987, 27688, 4068, 1000, 4070, 10355, 12371, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -1725, 14312, 4063, 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4070, 10355, 12371, 4118, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -4288, 15134, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1007, 4023, 4061, 1002, 4070, 2000, 1999, 3001, 1002, 4039, 2000, 1999, 3001, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -29869, -27556, 4063, 1000, 4070, -20327, -696, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -21271, 21818, 4068, 1000, 4070, 18864, -17062, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -30851, -1756, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, -17849, -12977, 4068, 1000, 4070, -21107, -2379, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, 18864, -17062, 4063, 1000, 4070, 4773, 6571, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 120, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 120, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 1726, 11718, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 121, 4067, 1000, 4137, 4087, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, 0, 121, 4063, 1000, 4039, 4137, 1000, 4137, 4039, 1000, 4063, 4137, 1000, 4070, -21107, -2379, 4063, 1000, 4070, -18632, -28377, 4063, 1000, 4076, 4137, 1000, 4070, -24837, -353, 4076, 1000, 4029, 4076, 1000, 4029, 4039, 1007, 4071, 4061, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4068, 1000, 4070, -24837, -352, 4067, 1000, 4112, 4087, 1000, 4115, 954, 31289, 960, -9170, 1, -28594, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 32392, -14232, 4063, 1000, 4070, -20327, -696, 4023, 1000, 4070, -24837, -352, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -352, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, 18581, -8815, 4063, 1000, 4082, 4087, 1000, 4070, 10355, 12371, 4082, 1000, 4029, 4082, 1000, 4029, 4082, 1002, 4070, 2000, 2000, 3002, 1002, 4095, 2000, 2000, 3000, 1000, 4070, -24837, -351, 4067, 1000, 4070, -24837, -351, 4023, 1000, 4039, 4023, 1000, 4063, 4039, 1000, 4070, -24837, -351, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4029, 4039 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 173,
          "moves" : 7,
          "inserts" : 157,
          "deletes" : 0,
          "updates" : 5,
          "aligns" : 4
        },
        "treeSize" : 12
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1649f9291e5ab587842ff74da4e7552a83358f40",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t/* Compute the dialog title */\t\n\t/*\n\t* Feature in Motif.  It is not possible to set a shell\n\t* title to an empty string.  The fix is to set the title\n\t* to be a single space.\n\t*/\n\tString string = title;\n\tif (string.length () == 0) string = \" \"; //$NON-NLS-1$\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer1 = Converter.wcsToMbcs (null, string, true);\n\tint xmStringPtr1 = OS.XmStringParseText (\n\t\tbuffer1,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\n\tfullPath = null;\n\tfileNames = new String [0];\n\t\n\t/* Compute the filter */\n\tString mask = FILTER;\n\tif (filterExtensions == null) filterExtensions = new String [0];\n\tif (filterNames == null) filterNames = new String [0];\n\tif (filterExtensions.length != 0) {\n\t\t/* Motif does not support multiple filters, so ignore them\n\t\t * if there are more than one, or if there is a ; separator.\n\t\t */\n\t\tif (filterExtensions.length == 1) {\n\t\t\tString filter = filterExtensions [0];\n\t\t\tif (filter.indexOf (';', 0) == -1) mask = filter;\n\t\t}\n\t}\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer2 = Converter.wcsToMbcs (null, mask, true);\n\tint xmStringPtr2 = OS.XmStringParseText (\n\t\tbuffer2,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\n\t/* Compute the filter path */\n\tif (filterPath == null) filterPath = \"\"; //$NON-NLS-1$\n\tint length = filterPath.length ();\n\tif (length == 0 || filterPath.charAt (length - 1) != SEPARATOR) {\n\t\tfilterPath += SEPARATOR;\n\t}\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer3 = Converter.wcsToMbcs (null, filterPath, true);\n\tint xmStringPtr3 = OS.XmStringParseText (\n\t\tbuffer3,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\n\t/* Create the dialog */\n\tDisplay display = parent.display;\n\tint [] argList1 = {\n\t\tOS.XmNresizePolicy, OS.XmRESIZE_NONE,\n\t\tOS.XmNdialogStyle, OS.XmDIALOG_PRIMARY_APPLICATION_MODAL,\n\t\tOS.XmNwidth, OS.XDisplayWidth (display.xDisplay, OS.XDefaultScreen (display.xDisplay)) * 4 / 9,\n\t\tOS.XmNpathMode, OS.XmPATH_MODE_FULL,\n\t\tOS.XmNdialogTitle, xmStringPtr1,\n\t\tOS.XmNpattern, xmStringPtr2,\n\t\tOS.XmNdirMask, xmStringPtr3,\n\t};\n\t/*\n\t* Bug in AIX. The dialog does not responde to input, if the parent\n\t* is not realized.  The fix is to realized the parent.  \n\t*/\n\tif (OS.IsAIX) parent.realizeWidget ();\n\tint parentHandle = parent.shellHandle;\n\t/*\n\t* Feature in Linux.  For some reason, the XmCreateFileSelectionDialog()\n\t* will not accept NULL for the widget name.  This works fine on the other\n\t* Motif platforms and in the other XmCreate calls on Linux.  The fix is\n\t* to pass in a NULL terminated string, not a NULL pointer.\n\t*/\n\tbyte [] name = new byte [] {0};\n\tdialog = OS.XmCreateFileSelectionDialog (parentHandle, name, argList1, argList1.length / 2);\n\tint child = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_HELP_BUTTON);\n\tif (child != 0) OS.XtUnmanageChild (child);\n\tOS.XmStringFree (xmStringPtr1);\n\tOS.XmStringFree (xmStringPtr2);\n\tOS.XmStringFree (xmStringPtr3);\n\t\n\t/*\n\t * Can override the selection text field if necessary now that\n\t * its initial value has been computed by the platform dialog.\n\t */\n\tif (fileName != null && fileName.length() > 0) {\n\t\t/* Use the character encoding for the default locale */\n\t\tbyte [] buffer4 = Converter.wcsToMbcs (null, fileName, true);\n\t\tint xmStringPtr4 = OS.XmStringParseText (\n\t\t\t\tbuffer4,\n\t\t\t\t0,\n\t\t\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\t\t\tOS.XmCHARSET_TEXT, \n\t\t\t\tnull,\n\t\t\t\t0,\n\t\t\t\t0);\n\t\tint [] argList2 = {OS.XmNdirSpec, 0};\n\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);\n\t\tint oldDirSpec = argList2 [1];\n\t\tint newDirSpec = OS.XmStringConcat (oldDirSpec, xmStringPtr4);\n\t\targList2 [1] = newDirSpec;\n\t\tOS.XtSetValues (dialog, argList2, argList2.length / 2);\n\t\tOS.XmStringFree (xmStringPtr4);\n\t\tOS.XmStringFree (oldDirSpec);\n\t\tOS.XmStringFree (newDirSpec);\n\t}\n\n\t/* Hook the callbacks. */\n\tCallback cancelCallback = new Callback (this, \"cancelPressed\", 3); //$NON-NLS-1$\n\tint cancelAddress = cancelCallback.getAddress ();\n\tif (cancelAddress == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);\n\tOS.XtAddCallback (dialog, OS.XmNcancelCallback, cancelAddress, 0);\n\tCallback okCallback = new Callback (this, \"okPressed\", 3); //$NON-NLS-1$\n\tint okAddress = okCallback.getAddress ();\n\tif (okAddress == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);\n\tOS.XtAddCallback (dialog, OS.XmNokCallback, okAddress, 0);\n\tCallback selectCallback = null;\n\tif ((style & SWT.MULTI) != 0) {\n\t\tchild = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_LIST);\n\t\tif (child != 0) {\n\t\t\tint [] argList3 = {OS.XmNselectionPolicy, OS.XmEXTENDED_SELECT};\n\t\t\tOS.XtSetValues(child, argList3, argList3.length / 2);\n\t\t\tselectCallback = new Callback (this, \"itemSelected\", 3); //$NON-NLS-1$\n\t\t\tint selectAddress = selectCallback.getAddress ();\n\t\t\tif (selectAddress == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\n\t\t\tOS.XtAddCallback (child, OS.XmNextendedSelectionCallback, selectAddress, 0);\n\t\t}\n\t}\n\n\tif (!defaultPos) {\n\t\tOS.XtRealizeWidget (dialog);\n\t\tint[] argList4 = new int[] {\n\t\t\tOS.XmNwidth, 0,\n\t\t\tOS.XmNheight, 0,\n\t\t};\n\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);\n\t\tMonitor monitor = parent.getMonitor ();\n\t\tRectangle bounds = monitor.getBounds ();\n\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;\n\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;\n\t\tint[] argList5 = new int[] {\n\t\t\tOS.XmNx, x,\n\t\t\tOS.XmNy, y,\n\t\t};\n\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);\n\t}\n\n\tOS.XtManageChild (dialog);\n\n\t// Should be a pure OS message loop (no SWT AppContext)\n\twhile (OS.XtIsRealized (dialog) && OS.XtIsManaged (dialog))\n\t\tif (!display.readAndDispatch ()) display.sleep ();\n\n\t/* Destroy the dialog and update the display. */\n\tif (OS.XtIsRealized (dialog)) OS.XtDestroyWidget (dialog);\n\tokCallback.dispose ();\n\tcancelCallback.dispose ();\n\tif (selectCallback != null) selectCallback.dispose ();\n\treturn fullPath;\n}",
        "accuracyTokens" : 0.9793028322440087,
        "accuracyCharacters" : 0.9851567711807871
      } ],
      "memberId" : "86877308add979cb916d7aeebaa60dfb"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1649f9291e5ab587842ff74da4e7552a83358f40",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MessageBox.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t/* Compute the dialog title */\t\n\t/*\n\t* Feature in Motif.  It is not possible to set a shell\n\t* title to an empty string.  The fix is to set the title\n\t* to be a single space.\n\t*/\n\tString string = title;\n\tif (string.length () == 0) string = \" \"; //$NON-NLS-1$\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer = Converter.wcsToMbcs (null, string, true);\n\tint xmStringPtr = OS.XmStringParseText (\n\t\tbuffer,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\t/*\n\t* Feature in Motif.  The modal values are only hints\n\t* to the window manager.  For example Enlightenment treats all modes \n\t* as SWT.APPLICATION_MODAL.  The generic Motif\n\t* Window Manager honours all modes.\n\t*/\n\tint dialogStyle = OS.XmDIALOG_MODELESS;\n\tif ((style & SWT.PRIMARY_MODAL) != 0) dialogStyle = OS.XmDIALOG_PRIMARY_APPLICATION_MODAL;\n\tif ((style & SWT.APPLICATION_MODAL) != 0) dialogStyle = OS.XmDIALOG_FULL_APPLICATION_MODAL;\n\tif ((style & SWT.SYSTEM_MODAL) != 0) dialogStyle = OS.XmDIALOG_SYSTEM_MODAL;\n\tif (parent != null && dialogStyle == OS.XmDIALOG_MODELESS) {\n\t\tdialogStyle = OS.XmDIALOG_PRIMARY_APPLICATION_MODAL;\n\t}\n\tint [] argList = {\n\t\tOS.XmNnoResize, 1,\n\t\tOS.XmNresizePolicy, OS.XmRESIZE_NONE,\n\t\tOS.XmNdialogStyle, dialogStyle,\n\t\tOS.XmNdialogTitle, xmStringPtr,\n\t};\n\tint parentHandle = parent.shellHandle;\n\tint dialog = createHandle (parentHandle, argList);\n\tif (dialog == 0) error (SWT.ERROR_NO_HANDLES);\n\tOS.XmStringFree (xmStringPtr);\n\tsetMessage (dialog);\n\tsetButtons (dialog);\n\t\n\t/* Hook the callbacks. */\n\tCallback callback = new Callback (this, \"activate\", 3); //$NON-NLS-1$\n\tint address = callback.getAddress ();\n\tif (address == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);\n\tOS.XtAddCallback (dialog, OS.XmNokCallback, address, OS.XmDIALOG_OK_BUTTON);\n\tOS.XtAddCallback (dialog, OS.XmNcancelCallback, address, OS.XmDIALOG_CANCEL_BUTTON);\n\tOS.XtAddCallback (dialog, OS.XmNhelpCallback, address, OS.XmDIALOG_HELP_BUTTON);\n\n\tif (!defaultPos) {\n\t\tOS.XtRealizeWidget (dialog);\n\t\tint[] argList4 = new int[] {\n\t\t\tOS.XmNwidth, 0,\n\t\t\tOS.XmNheight, 0,\n\t\t};\n\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);\n\t\tMonitor monitor = parent.getMonitor ();\n\t\tRectangle bounds = monitor.getBounds ();\n\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;\n\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;\n\t\tint[] argList5 = new int[] {\n\t\t\tOS.XmNx, x,\n\t\t\tOS.XmNy, y,\n\t\t};\n\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);\n\t}\n\n\t/* Open the dialog and dispatch events. */\n\tOS.XtManageChild (dialog);\n\twhile (OS.XtIsRealized (dialog) && OS.XtIsManaged (dialog))\n\t\tif (!display.readAndDispatch()) display.sleep ();\n\n\t/* Destroy the dialog and update the display. */\n\tif (OS.XtIsRealized (dialog)) OS.XtDestroyWidget (dialog);\n\tcallback.dispose ();\n\n\tif ((style & (SWT.YES | SWT.NO | SWT.CANCEL)) == (SWT.YES | SWT.NO | SWT.CANCEL)) {\n\t\tif (button == OS.XmDIALOG_OK_BUTTON) return SWT.YES;\n\t\tif (button == OS.XmDIALOG_CANCEL_BUTTON) return SWT.NO;\n\t\treturn SWT.CANCEL;\n\t}\n\tif ((style & (SWT.YES | SWT.NO)) == (SWT.YES | SWT.NO)) {\n\t\treturn (button == OS.XmDIALOG_OK_BUTTON) ? SWT.YES : SWT.NO;\n\t}\n\tif ((style & (SWT.OK | SWT.CANCEL)) == (SWT.OK | SWT.CANCEL)) {\n\t\treturn (button == OS.XmDIALOG_OK_BUTTON) ? SWT.OK : SWT.CANCEL;\n\t}\n\tif ((style & SWT.OK) == SWT.OK) return SWT.OK;\n\tif ((style & (SWT.RETRY | SWT.CANCEL)) == (SWT.RETRY | SWT.CANCEL)) {\n\t\treturn (button == OS.XmDIALOG_OK_BUTTON) ? SWT.RETRY : SWT.CANCEL;\n\t}\n\tif ((style & (SWT.ABORT | SWT.RETRY | SWT.IGNORE)) == (SWT.ABORT | SWT.RETRY | SWT.IGNORE)) {\n\t\tif (button == OS.XmDIALOG_OK_BUTTON) return SWT.ABORT;\n\t\tif (button == OS.XmDIALOG_CANCEL_BUTTON) return SWT.RETRY;\n\t\treturn SWT.IGNORE;\n\t}\n\treturn SWT.CANCEL;\n}",
        "accuracyTokens" : 0.945906432748538,
        "accuracyCharacters" : 0.9395646606914213
      } ],
      "memberId" : "24bbecc32da18833e1217645b45f1485"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "1649f9291e5ab587842ff74da4e7552a83358f40",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/DirectoryDialog.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\t/* Compute the dialog title */\t\n\t/*\n\t* Feature in Motif.  It is not possible to set a shell\n\t* title to an empty string.  The fix is to set the title\n\t* to be a single space.\n\t*/\n\tString string = title;\n\tif (string.length () == 0) string = \" \"; //$NON-NLS-1$\n\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer1 = Converter.wcsToMbcs (null, string, true);\n\tint xmStringPtr1 = OS.XmStringParseText (\n\t\tbuffer1,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\n\t/* Compute the filter */\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer2 = Converter.wcsToMbcs (null, \"*\", true); //$NON-NLS-1$\n\tint xmStringPtr2 = OS.XmStringParseText (\n\t\tbuffer2,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\n\t/* Compute the filter path */\n\tif (filterPath == null) filterPath = \"\"; //$NON-NLS-1$\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer3 = Converter.wcsToMbcs (null, filterPath, true);\n\tint xmStringPtr3 = OS.XmStringParseText (\n\t\tbuffer3,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer7 = Converter.wcsToMbcs (null, SWT.getMessage (\"SWT_Selection\"), true);\n\tint xmStringPtr4 = OS.XmStringParseText (\n\t\tbuffer7,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\n\t/* Create the dialog */\n\tDisplay display = parent.display;\n\tint [] argList1 = {\n\t\tOS.XmNresizePolicy, OS.XmRESIZE_NONE,\n\t\tOS.XmNdialogStyle, OS.XmDIALOG_PRIMARY_APPLICATION_MODAL,\n\t\tOS.XmNwidth, OS.XDisplayWidth (display.xDisplay, OS.XDefaultScreen (display.xDisplay)) * 4 / 9,\n\t\tOS.XmNdialogTitle, xmStringPtr1,\n\t\tOS.XmNpattern, xmStringPtr2,\n\t\tOS.XmNdirectory, xmStringPtr3,\n\t\tOS.XmNpathMode, OS.XmPATH_MODE_FULL,\n\t\tOS.XmNfilterLabelString, xmStringPtr4\n\t};\n\n\t/*\n\t* Bug in AIX. The dialog does not responde to input, if the parent\n\t* is not realized.  The fix is to realized the parent.  \n\t*/\n\tif (OS.IsAIX) parent.realizeWidget ();\n\tint parentHandle = parent.shellHandle;\n\t/*\n\t* Feature in Linux.  For some reason, the XmCreateFileSelectionDialog()\n\t* will not accept NULL for the widget name.  This works fine on the other\n\t* Motif platforms and in the other XmCreate calls on Linux.  The fix is\n\t* to pass in a NULL terminated string, not a NULL pointer.\n\t*/\n\tbyte [] name = new byte [] {0};\n\tint dialog = OS.XmCreateFileSelectionDialog (parentHandle, name, argList1, argList1.length / 2);\n\tint child = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_HELP_BUTTON);\n\tif (child != 0) OS.XtUnmanageChild (child);\n\tchild = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_LIST);\n\tif (child != 0) {\n\t\tint parent2 = OS.XtParent(child);\n\t\tif (parent2 !=0) OS.XtUnmanageChild (parent2);\n\t}\n\tchild = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_LIST_LABEL);\n\tif (child != 0) OS.XtUnmanageChild (child);\n\tchild = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_TEXT);\n\tif (child != 0) OS.XtUnmanageChild (child);\n\tchild = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_SELECTION_LABEL);\n\tif (child != 0) OS.XtUnmanageChild (child);\n\tOS.XmStringFree (xmStringPtr1);\n\tOS.XmStringFree (xmStringPtr2);\n\tOS.XmStringFree (xmStringPtr3);\n\tOS.XmStringFree (xmStringPtr4);\n\n\t/* Add label widget for message text. */\n\t/* Use the character encoding for the default locale */\n\tbyte [] buffer4 = Converter.wcsToMbcs (null, message, true);\n\tint xmString1 = OS.XmStringGenerate(buffer4, null, OS.XmCHARSET_TEXT, null);\n\tint [] argList = {\n\t\tOS.XmNlabelType, OS.XmSTRING,\n\t\tOS.XmNlabelString, xmString1\n\t};\n\tint textArea = OS.XmCreateLabel(dialog, name, argList, argList.length/2);\n\tOS.XtManageChild(textArea);\n\tOS.XmStringFree (xmString1);\n\n\t/* Hook the callbacks. */\n\tCallback callback = new Callback (this, \"activate\", 3); //$NON-NLS-1$\n\tint address = callback.getAddress ();\n\tif (address == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);\n\tOS.XtAddCallback (dialog, OS.XmNokCallback, address, OS.XmDIALOG_OK_BUTTON);\n\tOS.XtAddCallback (dialog, OS.XmNcancelCallback, address, OS.XmDIALOG_CANCEL_BUTTON);\n\n\t/* Open the dialog and dispatch events. */\n\tcancel = true;\n\n\tif (!defaultPos) {\n\t\tOS.XtRealizeWidget (dialog);\n\t\tint[] argList4 = new int[] {\n\t\t\tOS.XmNwidth, 0,\n\t\t\tOS.XmNheight, 0,\n\t\t};\n\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);\n\t\tMonitor monitor = parent.getMonitor ();\n\t\tRectangle bounds = monitor.getBounds ();\n\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;\n\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;\n\t\tint[] argList5 = new int[] {\n\t\t\tOS.XmNx, x,\n\t\t\tOS.XmNy, y,\n\t\t};\n\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);\n\t}\n\tOS.XtManageChild (dialog);\n\n\t/* Should be a pure OS message loop (no SWT AppContext) */\n\twhile (OS.XtIsRealized (dialog) && OS.XtIsManaged (dialog))\n\t\tif (!display.readAndDispatch ()) display.sleep ();\n\n\t/* Set the new path, file name and filter. */\n\tString directoryPath=\"\"; //$NON-NLS-1$\n\tif (!cancel) {\n\t\tint [] argList2 = {OS.XmNdirMask, 0};\n\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);\n\t\tint xmString3 = argList2 [1];\n\t\tint [] table = new int [] {display.tabMapping, display.crMapping};\n\t\tint ptr = OS.XmStringUnparse (\n\t\t\txmString3,\n\t\t\tnull,\n\t\t\tOS.XmCHARSET_TEXT,\n\t\t\tOS.XmCHARSET_TEXT,\n\t\t\ttable,\n\t\t\ttable.length,\n\t\t\tOS.XmOUTPUT_ALL);\n\t\tif (ptr != 0) {\n\t\t\tint length = OS.strlen (ptr);\n\t\t\tbyte [] buffer = new byte [length];\n\t\t\tOS.memmove (buffer, ptr, length);\n\t\t\tOS.XtFree (ptr);\n\t\t\t/* Use the character encoding for the default locale */\n\t\t\tdirectoryPath = new String (Converter.mbcsToWcs (null, buffer));\n\t\t}\n\t\tOS.XmStringFree (xmString3);\n\t\tint length = directoryPath.length ();\n\t\tif (directoryPath.charAt (length - 1) == '*') {\n\t\t\tdirectoryPath = directoryPath.substring (0, length - 1);\n\t\t\tlength--;\n\t\t}\n\t\tif (directoryPath.endsWith (SEPARATOR) && !directoryPath.equals (SEPARATOR)) {\n\t\t\tdirectoryPath = directoryPath.substring (0, length - 1);\n\t\t}\n\t\tfilterPath = directoryPath;\n\t}\n\n\t/* Destroy the dialog and update the display. */\n\tif (OS.XtIsRealized (dialog)) OS.XtDestroyWidget (dialog);\n\tcallback.dispose ();\n\t\n\tif (cancel) return null;\n\treturn directoryPath;\n}",
        "accuracyTokens" : 0.9646107178968655,
        "accuracyCharacters" : 0.982929164007658
      } ],
      "memberId" : "7487c6222f62527d4afd13672d2a173b"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9632733276298041,
    "accuracyCharactersMin" : 0.9692168652932889,
    "patternOriginal" : "\n\t\t\n\t\n\t//# match (original, (length,buffer1,xmStringPtr1,OS,XmCHARSET_TEXT,parentHandle,parent,xmStringPtr3,Callback,cancelCallback,cancelAddress,getAddress,SWT,error,ERROR_NO_MORE_CALLBACKS,XtAddCallback,dialog,XmNokCallback,okAddress,display,okCallback)) {\n\t\t\n\t\n\tString string = title;\n\tif (string.length () == 0) string = \" \"; //$NON-NLS-1$\n\t\n\tbyte [] buffer1 = Converter.wcsToMbcs (null, string, true);\n\tint xmStringPtr1 = OS.XmStringParseText (\n\t\tbuffer1,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\t//# wildcard stmt(ARES0);\n\tint parentHandle = parent.shellHandle;\n\t//# wildcard stmt(ARES1);\n\tOS.XmStringFree (xmStringPtr3);\n\n\t\n\t//# wildcard stmt(ARES2);\n\n\t\n\tCallback cancelCallback = new Callback (this, \"cancelPressed\", 3); //$NON-NLS-1$\n\tint cancelAddress = cancelCallback.getAddress ();\n\tif (cancelAddress == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);\n\t//# wildcard stmt(ARES3);\n\t//# wildcard expr(ARES4, 0, 1)\n\tOS.XtAddCallback (dialog, OS.XmNokCallback, okAddress, 0);\n\t//# wildcard stmt(ARES5);\n\n\tOS.XtManageChild (dialog);\n\n\t\n\t//# wildcard stmt(ARES6);\n\n\t// Should be a pure OS message loop (no SWT AppContext)\n\twhile (OS.XtIsRealized (dialog) && OS.XtIsManaged (dialog))\n\t\tif (!display.readAndDispatch ()) display.sleep ();\n\n\t\n\t//# wildcard stmt(ARES7);\n\n\t\n\tif (OS.XtIsRealized (dialog)) OS.XtDestroyWidget (dialog);\n\tokCallback.dispose ();\n\t\t\n\t\n\t//# }",
    "patternModified" : "\n\t\t\n\t\n\t//# match (modified) {\n\t\t\n\t\n\tString string = title;\n\tif (string.length () == 0) string = \" \"; //$NON-NLS-1$\n\t\n\tbyte [] buffer1 = Converter.wcsToMbcs (null, string, true);\n\tint xmStringPtr1 = OS.XmStringParseText (\n\t\tbuffer1,\n\t\t0,\n\t\tOS.XmFONTLIST_DEFAULT_TAG, \n\t\tOS.XmCHARSET_TEXT, \n\t\tnull,\n\t\t0,\n\t\t0);\n\t//# use (ARES0);\n\tint parentHandle = parent.shellHandle;\n\t//# use (ARES1);\n\tOS.XmStringFree (xmStringPtr3);\n\n\t\n\t//# use (ARES2);\n\n\t\n\tCallback cancelCallback = new Callback (this, \"cancelPressed\", 3); //$NON-NLS-1$\n\tint cancelAddress = cancelCallback.getAddress ();\n\tif (cancelAddress == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);\n\t//# use (ARES3);\n\t//# use (ARES4, 0, 1)\n\tOS.XtAddCallback (dialog, OS.XmNokCallback, okAddress, 0);\n\t//# use (ARES5);\n\n\tif (!defaultPos) {\n\t\tOS.XtRealizeWidget (dialog);\n\t\tint[] argList4 = new int[] {\n\t\t\tOS.XmNwidth, 0,\n\t\t\tOS.XmNheight, 0,\n\t\t};\n\t\tOS.XtGetValues (dialog, argList4, argList4.length / 2);\n\t\tMonitor monitor = parent.getMonitor ();\n\t\tRectangle bounds = monitor.getBounds ();\n\t\tint x = bounds.x + (bounds.width - argList4 [1]) / 2;\n\t\tint y = bounds.y + (bounds.height - argList4 [3]) / 2;\n\t\tint[] argList5 = new int[] {\n\t\t\tOS.XmNx, x,\n\t\t\tOS.XmNy, y,\n\t\t};\n\t\tOS.XtSetValues (dialog, argList5, argList5.length / 2);\n\t}\n\tOS.XtManageChild (dialog);\n\n\t// Should be a pure OS message loop (no SWT AppContext)\n\twhile (OS.XtIsRealized (dialog) && OS.XtIsManaged (dialog))\n\t\tif (!display.readAndDispatch ()) display.sleep ();\n\n\t\n\t//# use (ARES7);\n\n\t\n\tif (OS.XtIsRealized (dialog)) OS.XtDestroyWidget (dialog);\n\tokCallback.dispose ();\n\t\t\n\t\n\t//# }",
    "patternCreationTimeInNanoSec" : 10228387780,
    "patternUseTimeInNanoSec" : 16209861816,
    "accuracyTokensMax" : 0.9632733276298041,
    "accuracyCharactersMax" : 0.9692168652932889
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "86079_1",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\n/**\n * Pastes text from clipboard.\n * <p>\n * The selected text is deleted from the widget\n * and new text inserted from the clipboard.\n * </p>\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void paste ()",
      "diff" : "-\t\tint value = Integer.parseInt (string);+\t\tint value;+\t\tif (digits > 0) {+\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\tif (index != -1)  {+\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t} else {+\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t}+\t\t\t\t}+\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}+\t\t} else {+\t\t\tvalue = Integer.parseInt (string);+\t\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "787a0317e1a4a252a839c28889a05ec8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 25
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 163,
          "moves" : 2,
          "inserts" : 161,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 16
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\nvoid hookEvents ()",
      "diff" : "-\t\t\tint value = Integer.parseInt (string);+\t\t\tint value;+\t\t\tif (digits > 0) {+\t\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\t\tif (index != -1)  {+\t\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t\t} else {+\t\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t\t} else {+\t\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t\t}+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}-\t}\t+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f191d30bdf175ec5a28508c6cbd91d9b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 23
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 163,
          "moves" : 2,
          "inserts" : 161,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid updateText ()",
      "methodModified" : "\nint XmNmodifyVerifyCallback (int w, int client_data, int call_data)",
      "diff" : "-\t\t\tOS.XmNposition, 0};\t\t/* 7 */+\t\t\tOS.XmNposition, 0,\t\t/* 7 */+\t\t\tOS.XmNdecimalPoints, 0\t/* 9 */};+\tint digits = argList [9];-\t\t\tint value = Integer.parseInt (string);\t\t\t+\t\t\tint value;+\t\t\tif (digits > 0) {+\t\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\t\tif (index != -1)  {+\t\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t\t} else {+\t\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t\t} else {+\t\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t\t}+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}+\t\tif (digits > 0) {+\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\tint index = string.length () - digits;+\t\t\tStringBuffer buffer = new StringBuffer ();+\t\t\tif (index > 0) {+\t\t\t\tbuffer.append (string.substring (0, index));+\t\t\t\tbuffer.append (decimalSeparator);+\t\t\t\tbuffer.append (string.substring (index));+\t\t\t} else {+\t\t\t\tbuffer.append (\"0\");+\t\t\t\tbuffer.append (decimalSeparator);+\t\t\t\twhile (index++ < 0) buffer.append (\"0\");+\t\t\t\tbuffer.append (string);+\t\t\t}+\t\t\tstring = buffer.toString ();+\t\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "15e6a2a6f4f260586eba8ec0ff1d0ab3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2f7b25b56baa5857ac82297b9b5ab474f4612d5a",
          "commitId2" : "b39744881f45488dd8a2f2962c5fac3d5881b16d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 32,
          "methodNumber2" : 35
        },
        "pattern" : [ 1003, 4087, 2000, 2006, 1003, 4087, 2000, 1998, 1003, 4087, 2000, 1994, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -20324, -21274, 4067, 1000, 4076, 4087, 1000, 4070, -11372, -31724, 4076, 1000, 4029, 4076, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, -2464, -13221, 4063, 1000, 4029, 4087, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4137, 4087, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4137, 1007, 4071, 4061, 1000, 4828, 979, -20136, -3677, 9169, 4068, 1000, 4070, -21029, -27584, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -3677, 9169, 4112, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4023, 4023, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4023, 4023, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4070, 1531, 10450, 4023, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4054, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4109, 4061, 1000, 4017, 4109, 1000, 4090, 4017, 1000, 4070, 1531, 10450, 4090, 1000, 4029, 4017, 1007, 4023, 4109, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4054, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -27114, 21100, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 278,
          "moves" : 2,
          "inserts" : 273,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 3
        },
        "treeSize" : 18
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\n/**\n * Pastes text from clipboard.\n * <p>\n * The selected text is deleted from the widget\n * and new text inserted from the clipboard.\n * </p>\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void paste ()",
      "diff" : "-\t\tint value = Integer.parseInt (string);+\t\tint value;+\t\tif (digits > 0) {+\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\tif (index != -1)  {+\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t} else {+\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t}+\t\t\t\t}+\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}+\t\t} else {+\t\t\tvalue = Integer.parseInt (string);+\t\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "787a0317e1a4a252a839c28889a05ec8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 23,
          "methodNumber2" : 25
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 163,
          "moves" : 2,
          "inserts" : 161,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 16
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nint getSelectionText ()",
      "methodModified" : "\n\nvoid hookEvents ()",
      "diff" : "-\t\t\tint value = Integer.parseInt (string);+\t\t\tint value;+\t\t\tif (digits > 0) {+\t\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\t\tif (index != -1)  {+\t\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t\t} else {+\t\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t\t} else {+\t\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t\t}+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}-\t}\t+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f191d30bdf175ec5a28508c6cbd91d9b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 21,
          "methodNumber2" : 23
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 163,
          "moves" : 2,
          "inserts" : 161,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 18
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid updateText ()",
      "methodModified" : "\nint XmNmodifyVerifyCallback (int w, int client_data, int call_data)",
      "diff" : "-\t\t\tOS.XmNposition, 0};\t\t/* 7 */+\t\t\tOS.XmNposition, 0,\t\t/* 7 */+\t\t\tOS.XmNdecimalPoints, 0\t/* 9 */};+\tint digits = argList [9];-\t\t\tint value = Integer.parseInt (string);\t\t\t+\t\t\tint value;+\t\t\tif (digits > 0) {+\t\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\t\tint index = string.indexOf (decimalSeparator);+\t\t\t\tif (index != -1)  {+\t\t\t\t\tString wholePart = string.substring (0, index);+\t\t\t\t\tString decimalPart = string.substring (index + 1);+\t\t\t\t\tif (decimalPart.length () > digits) {+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);+\t\t\t\t\t} else {+\t\t\t\t\t\tint i = digits - decimalPart.length ();+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";+\t\t\t\t\t\t}+\t\t\t\t\t}+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;+\t\t\t\t\tvalue = wholeValue + decimalValue;+\t\t\t\t} else {+\t\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t\t}+\t\t\t} else {+\t\t\t\tvalue = Integer.parseInt (string);+\t\t\t}+\t\tif (digits > 0) {+\t\t\tString decimalSeparator = getDecimalSeparator ();+\t\t\tint index = string.length () - digits;+\t\t\tStringBuffer buffer = new StringBuffer ();+\t\t\tif (index > 0) {+\t\t\t\tbuffer.append (string.substring (0, index));+\t\t\t\tbuffer.append (decimalSeparator);+\t\t\t\tbuffer.append (string.substring (index));+\t\t\t} else {+\t\t\t\tbuffer.append (\"0\");+\t\t\t\tbuffer.append (decimalSeparator);+\t\t\t\twhile (index++ < 0) buffer.append (\"0\");+\t\t\t\tbuffer.append (string);+\t\t\t}+\t\t\tstring = buffer.toString ();+\t\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "15e6a2a6f4f260586eba8ec0ff1d0ab3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2f7b25b56baa5857ac82297b9b5ab474f4612d5a",
          "commitId2" : "b39744881f45488dd8a2f2962c5fac3d5881b16d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 32,
          "methodNumber2" : 35
        },
        "pattern" : [ 1003, 4087, 2000, 2006, 1003, 4087, 2000, 1998, 1003, 4087, 2000, 1994, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -20324, -21274, 4067, 1000, 4076, 4087, 1000, 4070, -11372, -31724, 4076, 1000, 4029, 4076, 1000, 4063, 4087, 1000, 4070, 0, 2532, 4063, 1000, 4070, -2464, -13221, 4063, 1000, 4029, 4087, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -13026, 1610, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, -21050, -9500, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, -20324, -21274, 4023, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4137, 4087, 1000, 4070, -20324, -21274, 4137, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -21050, -9500, 4063, 1000, 4070, -16882, 15078, 4063, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4029, 4087, 1000, 4070, 0, 106, 4067, 1000, 4017, 4088, 1000, 4070, 0, 106, 4017, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 106, 4090, 1007, 4061, 4088, 1007, 4077, 4061, 1000, 4070, -21050, -9500, 4077, 1000, 4137, 4077, 1000, 4070, -21050, -9500, 4137, 1000, 4054, 4137, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -10505, 14842, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13026, 1610, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 2920, -1888, 4067, 1000, 4023, 4087, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -21050, -9500, 4023, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4070, -20324, -21274, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4077, 4088, 1000, 4070, -10505, 14842, 4077, 1000, 4029, 4077, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4137, 4077, 1000, 4070, -10505, 14842, 4137, 1000, 4070, 2920, -1888, 4137, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, 1708, -28303, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -10258, 6430, 4063, 1000, 4070, 18124, 9276, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4023, 1901, 2000, 3000, 1000, 4070, 1708, -28303, 4077, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 1531, 10450, 4067, 1000, 4137, 4087, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4070, -20324, -21274, 4137, 1007, 4071, 4061, 1000, 4828, 979, -20136, -3677, 9169, 4068, 1000, 4070, -21029, -27584, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -3677, 9169, 4112, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4023, 4023, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4023, 4023, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4070, 1531, 10450, 4023, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4054, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4109, 4061, 1000, 4017, 4109, 1000, 4090, 4017, 1000, 4070, 1531, 10450, 4090, 1000, 4029, 4017, 1007, 4023, 4109, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4054, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -21532, -12518, 4063, 1000, 4070, -13611, 24593, 4023, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -21029, -27584, 4063, 1000, 4070, -27114, 21100, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 278,
          "moves" : 2,
          "inserts" : 273,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 3
        },
        "treeSize" : 18
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint [] actualSize = new int [1];\n\tint [] ptr = new int [1];\n\tif (OS.GetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr, actualSize) == OS.noErr) {\n\t\tCFRange range = new CFRange ();\n\t\trange.location = 0;\n\t\trange.length = OS.CFStringGetLength (ptr [0]);\n\t\tchar [] buffer= new char [range.length];\n\t\tOS.CFStringGetCharacters (ptr [0], range, buffer);\n\t\tOS.CFRelease (ptr [0]);\n\t\tString string = new String (buffer);\n\t\ttry {\n\t\t\tint value;\n\t\t\tif (digits > 0) {\n\t\t\t\tString decimalSeparator = getDecimalSeparator ();\n\t\t\t\tint index = string.indexOf (decimalSeparator);\n\t\t\t\tif (index != -1)  {\n\t\t\t\t\tString wholePart = string.substring (0, index);\n\t\t\t\t\tString decimalPart = string.substring (index + 1);\n\t\t\t\t\tif (decimalPart.length () > digits) {\n\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint i = digits - decimalPart.length ();\n\t\t\t\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);\n\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);\n\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;\n\t\t\t\t\tvalue = wholeValue + decimalValue;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Integer.parseInt (string);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue = Integer.parseInt (string);\n\t\t\t}\n\t\t\tint max = OS.GetControl32BitMaximum (buttonHandle);\n\t\t\tint min = OS.GetControl32BitMinimum (buttonHandle);\n\t\t\tif (min <= value && value <= max) return value;\n\t\t} catch (NumberFormatException e) {\n\t\t}\n\t}\t\n\treturn OS.GetControl32BitValue (buttonHandle);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 0.9993634627625716
      } ],
      "memberId" : "f191d30bdf175ec5a28508c6cbd91d9b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint length = OS.GetWindowTextLength (hwndText);\n\tTCHAR buffer = new TCHAR (getCodePage (), length + 1);\n\tOS.GetWindowText (hwndText, buffer, length + 1);\n\tString string = buffer.toString (0, length);\n\ttry {\n\t\tint value;\n\t\tif (digits > 0) {\n\t\t\tString decimalSeparator = getDecimalSeparator ();\n\t\t\tint index = string.indexOf (decimalSeparator);\n\t\t\tif (index != -1)  {\n\t\t\t\tString wholePart = string.substring (0, index);\n\t\t\t\tString decimalPart = string.substring (index + 1);\n\t\t\t\tif (decimalPart.length () > digits) {\n\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);\n\t\t\t\t} else {\n\t\t\t\t\tint i = digits - decimalPart.length ();\n\t\t\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint wholeValue = Integer.parseInt (wholePart);\n\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);\n\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;\n\t\t\t\tvalue = wholeValue + decimalValue;\n\t\t\t} else {\n\t\t\t\tvalue = Integer.parseInt (string);\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = Integer.parseInt (string);\n\t\t}\n\t\tint [] max = new int [1], min = new int [1];\n\t\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, max);\n\t\tif (min [0] <= value && value <= max [0]) return value;\n\t} catch (NumberFormatException e) {\n\t}\n\tif (OS.IsWinCE) {\n\t\treturn OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xFFFF;\n\t} else {\n\t\treturn OS.SendMessage (hwndUpDown, OS.UDM_GETPOS32, 0, 0);\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "787a0317e1a4a252a839c28889a05ec8"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tint [] argList = {\n\t\t\tOS.XmNtextField, 0,\t\t/* 1 */\n\t\t\tOS.XmNminimumValue, 0,\t/* 3 */\n\t\t\tOS.XmNmaximumValue, 0,\t/* 5 */\n\t\t\tOS.XmNposition, 0};\t\t/* 7 */\n\tOS.XtGetValues (handle, argList, argList.length / 2);\n\tint ptr = OS.XmTextGetString (argList [1]);\n\tint position = argList [7];\n\tif (ptr != 0) {\n\t\tint length = OS.strlen (ptr);\n\t\tbyte [] buffer = new byte [length];\n\t\tOS.memmove (buffer, ptr, length);\n\t\tOS.XtFree (ptr);\n\t\tString string = new String (Converter.mbcsToWcs (getCodePage (), buffer));\n\t\ttry {\n\t\t\tint value;\n\t\t\tif (digits > 0) {\n\t\t\t\tString decimalSeparator = getDecimalSeparator ();\n\t\t\t\tint index = string.indexOf (decimalSeparator);\n\t\t\t\tif (index != -1)  {\n\t\t\t\t\tString wholePart = string.substring (0, index);\n\t\t\t\t\tString decimalPart = string.substring (index + 1);\n\t\t\t\t\tif (decimalPart.length () > digits) {\n\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint i = digits - decimalPart.length ();\n\t\t\t\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);\n\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);\n\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;\n\t\t\t\t\tvalue = wholeValue + decimalValue;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Integer.parseInt (string);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue = Integer.parseInt (string);\n\t\t\t}\n\t\t\tif (argList [3] <= value && value <= argList [5]) {\n\t\t\t\tposition = value;\n\t\t\t}\n\t\t} catch (NumberFormatException e) {\n\t\t}\n\t}\n\tif (position == argList [7]) {\n\t\tString string = String.valueOf (position);\n\t\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), string, true);\n\t\tboolean warnings = display.getWarnings ();\n\t\tdisplay.setWarnings (false);\n\t\tOS.XmTextSetString (argList [1], buffer);\n\t\tdisplay.setWarnings (warnings);\t\n\t} else {\n\t\tint [] argList2 = {OS.XmNposition, position};\n\t\tOS.XtSetValues (handle, argList2, argList2.length / 2);\n\t}\n}",
        "accuracyTokens" : 0.7837837837837838,
        "accuracyCharacters" : 0.7697608431293068
      } ],
      "memberId" : "15e6a2a6f4f260586eba8ec0ff1d0ab3"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9279279279279279,
    "accuracyCharactersMin" : 0.9230414352972929,
    "patternOriginal" : "\n\t//# match (original, (buffer)) {\n\t//# wildcard expr(ARES0, new String (buffer), 1)\n\tString string = new String (buffer);\n\ttry {\n\t\tint value = Integer.parseInt (string);\n\t\t//# wildcard stmt(ARES1);\n\t} catch (NumberFormatException e) {\n\t}\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\t//# use (ARES0, new String (buffer), 1)\n\tString string = new String (buffer);\n\ttry {\n\t\tint value;\n\t\tif (digits > 0) {\n\t\t\tString decimalSeparator = getDecimalSeparator ();\n\t\t\tint index = string.indexOf (decimalSeparator);\n\t\t\tif (index != -1)  {\n\t\t\t\tString wholePart = string.substring (0, index);\n\t\t\t\tString decimalPart = string.substring (index + 1);\n\t\t\t\tif (decimalPart.length () > digits) {\n\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);\n\t\t\t\t} else {\n\t\t\t\t\tint i = digits - decimalPart.length ();\n\t\t\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint wholeValue = Integer.parseInt (wholePart);\n\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);\n\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;\n\t\t\t\tvalue = wholeValue + decimalValue;\n\t\t\t} else {\n\t\t\t\tvalue = Integer.parseInt (string);\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = Integer.parseInt (string);\n\t\t}\n\t\t//# use (ARES1);\n\t} catch (NumberFormatException e) {\n\t}\n\t//# }",
    "patternCreationTimeInNanoSec" : 4073989649,
    "patternUseTimeInNanoSec" : 15805510447,
    "accuracyTokensMax" : 0.9279279279279279,
    "accuracyCharactersMax" : 0.9230414352972929
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "95409",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "methodModified" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\tif (pattern != null) {+\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\t} else {+\t\tdata.gdipBrush = 0;+\t}",
      "commitMsg" : "fix transparency",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f615434e60b7154ca3cf599ef2a4b0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
          "commitId2" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 81,
          "methodNumber2" : 81
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 14990, 16478, -20254, -5418, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4063, 2539, 2000, 2999, 1000, 4029, 4077, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 19,
          "moves" : 3,
          "inserts" : 8,
          "deletes" : 4,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7fa1ca3ea81f107ce6c80d94370a2a18",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 75,
          "methodNumber2" : 75
        },
        "pattern" : [ 1004, 4017, 1000, 4018, 4027, 1002, 4017, 1910, 2000, 2999, 1002, 4023, 1911, 2000, 2999, 1008, 4027, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 14990, 16478 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 12,
          "moves" : 2,
          "inserts" : 1,
          "deletes" : 8,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tCairo.cairo_set_pattern(cairo, pattern.handle);+\tif (pattern != null) {+\t\tCairo.cairo_set_pattern(cairo, pattern.handle);+\t} else {+\t\tGdkGCValues values = new GdkGCValues();+\t\tOS.gdk_gc_get_values(handle, values);+\t\tGdkColor color = new GdkColor();+\t\tcolor.pixel = values.foreground_pixel;+\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();+\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);+\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4429110aa31b41bb735aff6df96a6f19",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 88,
          "methodNumber2" : 88
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 1, 17008, 0, 2532, 1004, 4070, 14990, 16478, -21059, -11891, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 1476, -11768, 46, 12378, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -3913, -22996, 4068, 1000, 4070, -12571, -25310, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -3913, -22996, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 28041, 24093, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, -12571, -25310, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, 13277, 24821, 4068, 1000, 4070, 1447, 12131, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, 13277, 24821, 4112, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4063, 4077, 1000, 4070, -12571, -25310, 4063, 1000, 4070, -28849, 24714, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -9595, 5913, 4067, 1002, 4023, 2599, 2000, 2996, 1002, 4063, 1999, 2000, 2996, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 13658, 375, 4063, 1000, 4070, -9595, 5913, 4023, 1000, 4063, 4023, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4070, 1447, 12131, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 989, -10456, 4063, 1000, 4070, 23305, 7453, 4063, 1000, 4070, 1440, -14520, 4023, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1, -18287, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1504, -12541, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1850, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 97,
          "moves" : 5,
          "inserts" : 86,
          "deletes" : 0,
          "updates" : 5,
          "aligns" : 1
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0011a80c539260a5b97625d60fa91fb0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 80,
          "methodNumber2" : 80
        },
        "pattern" : [ 1004, 4017, 1000, 4018, 4027, 1002, 4017, 1910, 2000, 2999, 1002, 4023, 1911, 2000, 2999, 1008, 4027, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 14990, 16478 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 12,
          "moves" : 2,
          "inserts" : 1,
          "deletes" : 8,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tCairo.cairo_set_pattern(cairo, pattern.handle);+\tif (pattern != null) {+\t\tCairo.cairo_set_pattern(cairo, pattern.handle);+\t} else {+\t\tint display = data.display;+\t\tXGCValues values = new XGCValues ();+\t\tOS.XGetGCValues (display, handle, OS.GCForeground, values);+\t\tXColor color = new XColor();+\t\tcolor.pixel = values.foreground;+\t\tOS.XQueryColor(display, data.colormap, color);+\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2f9e56a101373119e392439f50b0abc3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 92,
          "methodNumber2" : 92
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 1476, -11768, 1504, -12541, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 14990, 16478, 46, 12378, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 25509, 6338, 4067, 1000, 4063, 4087, 1000, 4070, 46, -4182, 4063, 1000, 4070, 25509, 6338, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, 14213, -23178, 4068, 1000, 4070, -12571, -25310, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, 14213, -23178, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -16263, -10500, 4063, 1000, 4070, 25509, 6338, 4023, 1000, 4070, -18686, 28200, 4023, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 1849, -5313, 4063, 1000, 4070, -12571, -25310, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -26098, -18965, 4068, 1000, 4070, 1447, 12131, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -26098, -18965, 4112, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4063, 4077, 1000, 4070, -12571, -25310, 4063, 1000, 4070, 30280, 26947, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -26148, -19981, 4063, 1000, 4070, 25509, 6338, 4023, 1000, 4063, 4023, 1000, 4070, 46, -4182, 4063, 1000, 4070, -9595, 5913, 4063, 1000, 4070, 1447, 12131, 4023, 1000, 4063, 4023, 1000, 4070, 989, -10456, 4063, 1000, 4070, 23305, 7453, 4063, 1000, 4070, 1440, -14520, 4023, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1, -18287, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1850, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1849, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 100,
          "moves" : 5,
          "inserts" : 89,
          "deletes" : 0,
          "updates" : 5,
          "aligns" : 1
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the foreground pattern.\n *\n * @param pattern the new foreground pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setForegroundPattern (Pattern pattern)",
      "methodModified" : "\n\n/** \n * Sets the foreground pattern.\n *\n * @param pattern the new foreground pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setForegroundPattern (Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tinitGdip(true, false);-\tGdip.Pen_SetBrush(data.gdipPen, pattern.handle);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tinitGdip(false, false);+\tif (pattern != null) {+\t\tif (data.gdipPen != 0) Gdip.Pen_SetBrush(data.gdipPen, pattern.handle);+\t} else {+\t\tif (data.gdipPen != 0) {+\t\t\tGdip.Pen_delete(data.gdipPen);+\t\t\tdata.gdipPen = 0;+\t\t}+\t}",
      "commitMsg" : "fix transparency",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4b482f645115394548384c9c3d51dfa8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
          "commitId2" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 90,
          "methodNumber2" : 90
        },
        "pattern" : [ 1005, 1003, 4119, 2000, 1999, 1004, 4119, 1004, 4017, 1006, 1006, 1002, 4063, 2001, 2000, 2997, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 1476, -11768, -1726, 15285, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 14990, 16478, -1726, 15285, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1726, 15285, 4063, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1726, 15285, 4063, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4063, 2539, 2000, 2997, 1000, 4029, 4077, 1000, 4063, 4023, 1000, 4070, 33, -13596, 4063, 1000, 4070, -13686, -4175, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 37,
          "moves" : 5,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 6,
          "aligns" : 2
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);-\tOS.CGContextSetStrokeColorSpace(handle, colorspace);-\tOS.CGColorSpaceRelease(colorspace);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.forePattern = pattern.createPattern(handle);-\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);+\tif (pattern != null) {+\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);+\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);+\t\tOS.CGColorSpaceRelease(colorspace);+\t\tdata.forePattern = pattern.createPattern(handle);+\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);+\t} else {+\t\tint colorspace = data.device.colorspace;+\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);+\t\tfloat[] color = data.foreground;+\t\tOS.CGContextSetStrokeColor(handle, color);+\t\tdata.forePattern = 0;\t+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6f0d0889d12f51d57bf7c2e99ada68df",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 84,
          "methodNumber2" : 84
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1006, 1006, 1006, 1006, 1004, 4070, 1476, -11768, 30280, 26947, 1002, 4070, 1600, 2001, 3000, 1004, 4070, 1, 17008, -11391, -18476, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1002, 4063, 2399, 2000, 2996, 1002, 4070, 2000, 2000, 2996, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5502, 3474, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 979, -20136, 1488, 8796, 4068, 1000, 4070, 1447, 12131, 4067, 1002, 4063, 2640, 2000, 2997, 1000, 4070, 46, -4182, 4063, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 46, -4182, 4063, 1000, 4070, 30040, -5324, 4063, 1000, 4029, 4077, 1000, 4063, 4023, 1002, 4070, 2001, 2000, 2999, 1000, 4070, 0, 2532, 4063, 1000, 4070, -18686, 28200, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 54,
          "moves" : 12,
          "inserts" : 38,
          "deletes" : 0,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n *\n * @param color the new foreground color for the receiver\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color)",
      "methodModified" : "\n\n/**\n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n *\n * @param color the new foreground color for the receiver\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color)",
      "diff" : "+\tint colorspace = data.device.colorspace;+\tOS.CGContextSetStrokeColorSpace(handle, colorspace);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cfc9dce99786b92b66a574148342f22a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 83,
          "methodNumber2" : 83
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1000, 4063, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5502, 3474, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 17,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);-\tOS.CGContextSetFillColorSpace(handle, colorspace);-\tOS.CGColorSpaceRelease(colorspace);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.backPattern = pattern.createPattern(handle);-\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);+\tif (pattern != null) {+\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);+\t\tOS.CGContextSetFillColorSpace(handle, colorspace);+\t\tOS.CGColorSpaceRelease(colorspace);+\t\tdata.backPattern = pattern.createPattern(handle);+\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);+\t} else {+\t\tint colorspace = data.device.colorspace;+\t\tOS.CGContextSetFillColorSpace(handle, colorspace);+\t\tfloat[] color = data.background;+\t\tOS.CGContextSetFillColor(handle, color);+\t\tdata.backPattern = 0;\t+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9af007235d3489db0fa26edcd81515eb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 73,
          "methodNumber2" : 73
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1006, 1006, 1006, 1006, 1004, 4070, 1476, -11768, -20328, 21806, 1002, 4070, 1600, 2001, 3000, 1004, 4070, 1, 17008, 60, 28073, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1002, 4063, 2399, 2000, 2996, 1002, 4070, 2000, 2000, 2996, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5464, -19235, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 979, -20136, 1488, 8796, 4068, 1000, 4070, 1447, 12131, 4067, 1002, 4063, 2640, 2000, 2997, 1000, 4070, 46, -4182, 4063, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 46, -4182, 4063, 1000, 4070, -31482, 31913, 4063, 1000, 4029, 4077, 1000, 4063, 4023, 1002, 4070, 2001, 2000, 2999, 1000, 4070, 0, 2532, 4063, 1000, 4070, -18686, 28200, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 54,
          "moves" : 12,
          "inserts" : 38,
          "deletes" : 0,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 10
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "methodModified" : "\n\n/** \n * Sets the background pattern.\n *\n * @param pattern the new background pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setBackgroundPattern (Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\tif (pattern != null) {+\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);+\t} else {+\t\tdata.gdipBrush = 0;+\t}",
      "commitMsg" : "fix transparency",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f3f615434e60b7154ca3cf599ef2a4b0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
          "commitId2" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 81,
          "methodNumber2" : 81
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 14990, 16478, -20254, -5418, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4063, 2539, 2000, 2999, 1000, 4029, 4077, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 19,
          "moves" : 3,
          "inserts" : 8,
          "deletes" : 4,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7fa1ca3ea81f107ce6c80d94370a2a18",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 75,
          "methodNumber2" : 75
        },
        "pattern" : [ 1004, 4017, 1000, 4018, 4027, 1002, 4017, 1910, 2000, 2999, 1002, 4023, 1911, 2000, 2999, 1008, 4027, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 14990, 16478 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 12,
          "moves" : 2,
          "inserts" : 1,
          "deletes" : 8,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tCairo.cairo_set_pattern(cairo, pattern.handle);+\tif (pattern != null) {+\t\tCairo.cairo_set_pattern(cairo, pattern.handle);+\t} else {+\t\tGdkGCValues values = new GdkGCValues();+\t\tOS.gdk_gc_get_values(handle, values);+\t\tGdkColor color = new GdkColor();+\t\tcolor.pixel = values.foreground_pixel;+\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();+\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);+\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4429110aa31b41bb735aff6df96a6f19",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 88,
          "methodNumber2" : 88
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1004, 4070, 1, 17008, 0, 2532, 1004, 4070, 14990, 16478, -21059, -11891, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 1476, -11768, 46, 12378, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -3913, -22996, 4068, 1000, 4070, -12571, -25310, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -3913, -22996, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 28041, 24093, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, -12571, -25310, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, 13277, 24821, 4068, 1000, 4070, 1447, 12131, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, 13277, 24821, 4112, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4063, 4077, 1000, 4070, -12571, -25310, 4063, 1000, 4070, -28849, 24714, 4063, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, -9595, 5913, 4067, 1002, 4023, 2599, 2000, 2996, 1002, 4063, 1999, 2000, 2996, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 13658, 375, 4063, 1000, 4070, -9595, 5913, 4023, 1000, 4063, 4023, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4070, 1447, 12131, 4023, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 989, -10456, 4063, 1000, 4070, 23305, 7453, 4063, 1000, 4070, 1440, -14520, 4023, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1, -18287, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1504, -12541, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1850, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 97,
          "moves" : 5,
          "inserts" : 86,
          "deletes" : 0,
          "updates" : 5,
          "aligns" : 1
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0011a80c539260a5b97625d60fa91fb0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 80,
          "methodNumber2" : 80
        },
        "pattern" : [ 1004, 4017, 1000, 4018, 4027, 1002, 4017, 1910, 2000, 2999, 1002, 4023, 1911, 2000, 2999, 1008, 4027, 1008, 4023, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 1476, -11768, 1001, 4063, 1001, 4070, 1, 17008, 1001, 4070, 14990, 16478 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 12,
          "moves" : 2,
          "inserts" : 1,
          "deletes" : 8,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tCairo.cairo_set_pattern(cairo, pattern.handle);+\tif (pattern != null) {+\t\tCairo.cairo_set_pattern(cairo, pattern.handle);+\t} else {+\t\tint display = data.display;+\t\tXGCValues values = new XGCValues ();+\t\tOS.XGetGCValues (display, handle, OS.GCForeground, values);+\t\tXColor color = new XColor();+\t\tcolor.pixel = values.foreground;+\t\tOS.XQueryColor(display, data.colormap, color);+\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2f9e56a101373119e392439f50b0abc3",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 92,
          "methodNumber2" : 92
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 1476, -11768, 1504, -12541, 1004, 4070, 1, 17008, 1447, 12131, 1004, 4070, 14990, 16478, 46, 12378, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 25509, 6338, 4067, 1000, 4063, 4087, 1000, 4070, 46, -4182, 4063, 1000, 4070, 25509, 6338, 4063, 1007, 4071, 4061, 1000, 4828, 979, -20136, 14213, -23178, 4068, 1000, 4070, -12571, -25310, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, 14213, -23178, 4112, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -16263, -10500, 4063, 1000, 4070, 25509, 6338, 4023, 1000, 4070, -18686, 28200, 4023, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, 1849, -5313, 4063, 1000, 4070, -12571, -25310, 4023, 1007, 4071, 4061, 1000, 4828, 979, -20136, -26098, -18965, 4068, 1000, 4070, 1447, 12131, 4067, 1000, 4112, 4087, 1000, 4828, 979, -20136, -26098, -18965, 4112, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1627, -11642, 4063, 1000, 4063, 4077, 1000, 4070, -12571, -25310, 4063, 1000, 4070, 30280, 26947, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -26148, -19981, 4063, 1000, 4070, 25509, 6338, 4023, 1000, 4063, 4023, 1000, 4070, 46, -4182, 4063, 1000, 4070, -9595, 5913, 4063, 1000, 4070, 1447, 12131, 4023, 1000, 4063, 4023, 1000, 4070, 989, -10456, 4063, 1000, 4070, 23305, 7453, 4063, 1000, 4070, 1440, -14520, 4023, 1000, 4039, 4023, 1000, 4008, 4039, 1000, 4063, 4008, 1000, 4070, 1447, 12131, 4063, 1000, 4070, 1, -18287, 4063, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1850, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016, 1000, 4039, 4023, 1000, 4008, 4039, 1002, 4063, 1849, 2000, 2997, 1000, 4029, 4008, 1000, 4016, 4039, 1000, 4029, 4016, 1000, 4828, 979, -20136, 1488, 8796, 4016 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 100,
          "moves" : 5,
          "inserts" : 89,
          "deletes" : 0,
          "updates" : 5,
          "aligns" : 1
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the foreground pattern.\n *\n * @param pattern the new foreground pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setForegroundPattern (Pattern pattern)",
      "methodModified" : "\n\n/** \n * Sets the foreground pattern.\n *\n * @param pattern the new foreground pattern\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the parameter is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see Pattern\n * \n * @since 3.1\n */\npublic void setForegroundPattern (Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tinitGdip(true, false);-\tGdip.Pen_SetBrush(data.gdipPen, pattern.handle);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);+\tinitGdip(false, false);+\tif (pattern != null) {+\t\tif (data.gdipPen != 0) Gdip.Pen_SetBrush(data.gdipPen, pattern.handle);+\t} else {+\t\tif (data.gdipPen != 0) {+\t\t\tGdip.Pen_delete(data.gdipPen);+\t\t\tdata.gdipPen = 0;+\t\t}+\t}",
      "commitMsg" : "fix transparency",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4b482f645115394548384c9c3d51dfa8",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
          "commitId2" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 90,
          "methodNumber2" : 90
        },
        "pattern" : [ 1005, 1003, 4119, 2000, 1999, 1004, 4119, 1004, 4017, 1006, 1006, 1002, 4063, 2001, 2000, 2997, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 1476, -11768, -1726, 15285, 1004, 4070, 1, 17008, 46, -4182, 1004, 4070, 14990, 16478, -1726, 15285, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1726, 15285, 4063, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, -1726, 15285, 4063, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4077, 4061, 1002, 4063, 2539, 2000, 2997, 1000, 4029, 4077, 1000, 4063, 4023, 1000, 4070, 33, -13596, 4063, 1000, 4070, -13686, -4175, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 37,
          "moves" : 5,
          "inserts" : 24,
          "deletes" : 0,
          "updates" : 6,
          "aligns" : 2
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);-\tOS.CGContextSetStrokeColorSpace(handle, colorspace);-\tOS.CGColorSpaceRelease(colorspace);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.forePattern = pattern.createPattern(handle);-\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);+\tif (pattern != null) {+\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);+\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);+\t\tOS.CGColorSpaceRelease(colorspace);+\t\tdata.forePattern = pattern.createPattern(handle);+\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);+\t} else {+\t\tint colorspace = data.device.colorspace;+\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);+\t\tfloat[] color = data.foreground;+\t\tOS.CGContextSetStrokeColor(handle, color);+\t\tdata.forePattern = 0;\t+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6f0d0889d12f51d57bf7c2e99ada68df",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 84,
          "methodNumber2" : 84
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1006, 1006, 1006, 1006, 1004, 4070, 1476, -11768, 30280, 26947, 1002, 4070, 1600, 2001, 3000, 1004, 4070, 1, 17008, -11391, -18476, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1002, 4063, 2399, 2000, 2996, 1002, 4070, 2000, 2000, 2996, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5502, 3474, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 979, -20136, 1488, 8796, 4068, 1000, 4070, 1447, 12131, 4067, 1002, 4063, 2640, 2000, 2997, 1000, 4070, 46, -4182, 4063, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 46, -4182, 4063, 1000, 4070, 30040, -5324, 4063, 1000, 4029, 4077, 1000, 4063, 4023, 1002, 4070, 2001, 2000, 2999, 1000, 4070, 0, 2532, 4063, 1000, 4070, -18686, 28200, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 54,
          "moves" : 12,
          "inserts" : 38,
          "deletes" : 0,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n *\n * @param color the new foreground color for the receiver\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color)",
      "methodModified" : "\n\n/**\n * Sets the foreground color. The foreground color is used\n * for drawing operations including when text is drawn.\n *\n * @param color the new foreground color for the receiver\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the color is null</li>\n *    <li>ERROR_INVALID_ARGUMENT - if the color has been disposed</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n */\npublic void setForeground(Color color)",
      "diff" : "+\tint colorspace = data.device.colorspace;+\tOS.CGContextSetStrokeColorSpace(handle, colorspace);",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "cfc9dce99786b92b66a574148342f22a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 83,
          "methodNumber2" : 83
        },
        "pattern" : [ 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1000, 4063, 4063, 1000, 4070, 46, -4182, 4063, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5502, 3474, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 17,
          "moves" : 0,
          "inserts" : 17,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);-\tOS.CGContextSetFillColorSpace(handle, colorspace);-\tOS.CGColorSpaceRelease(colorspace);+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);-\tdata.backPattern = pattern.createPattern(handle);-\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);+\tif (pattern != null) {+\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);+\t\tOS.CGContextSetFillColorSpace(handle, colorspace);+\t\tOS.CGColorSpaceRelease(colorspace);+\t\tdata.backPattern = pattern.createPattern(handle);+\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);+\t} else {+\t\tint colorspace = data.device.colorspace;+\t\tOS.CGContextSetFillColorSpace(handle, colorspace);+\t\tfloat[] color = data.background;+\t\tOS.CGContextSetFillColor(handle, color);+\t\tdata.backPattern = 0;\t+\t}",
      "commitMsg" : "95409 & 95408",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "9af007235d3489db0fa26edcd81515eb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58f181425ac99cdd29070515e69fe5c833083a71",
          "commitId2" : "dc48a92c114563253a1e08f3f994a95c9605bd20",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 73,
          "methodNumber2" : 73
        },
        "pattern" : [ 1005, 1004, 4017, 1006, 1006, 1006, 1006, 1006, 1006, 1004, 4070, 1476, -11768, -20328, 21806, 1002, 4070, 1600, 2001, 3000, 1004, 4070, 1, 17008, 60, 28073, 1000, 4018, 4027, 1002, 4023, 1911, 2000, 2999, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4061, 4027, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 19958, -6269, 4067, 1000, 4063, 4087, 1002, 4063, 2399, 2000, 2996, 1002, 4070, 2000, 2000, 2996, 1000, 4070, -20373, 7766, 4063, 1000, 4070, 19958, -6269, 4063, 1007, 4023, 4061, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -5464, -19235, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4070, 19958, -6269, 4023, 1007, 4071, 4061, 1000, 4115, 954, 31289, 979, -20136, 1488, 8796, 4068, 1000, 4070, 1447, 12131, 4067, 1002, 4063, 2640, 2000, 2997, 1000, 4070, 46, -4182, 4063, 1007, 4077, 4061, 1000, 4063, 4077, 1000, 4070, 46, -4182, 4063, 1000, 4070, -31482, 31913, 4063, 1000, 4029, 4077, 1000, 4063, 4023, 1002, 4070, 2001, 2000, 2999, 1000, 4070, 0, 2532, 4063, 1000, 4070, -18686, 28200, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 54,
          "moves" : 12,
          "inserts" : 38,
          "deletes" : 0,
          "updates" : 3,
          "aligns" : 1
        },
        "treeSize" : 10
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 72,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tdata.background = color.handle;\n\tOS.CGContextSetFillColor(handle, color.handle);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = 0;\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tOS.CGContextSetFillColor(handle, color.handle);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = 0;\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tOS.CGContextSetFillColor(handle, color.handle);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = 0;\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\tOS.CGColorSpaceRelease(colorspace);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = pattern.createPattern(handle);\n\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.44525547445255476,
        "accuracyCharacters" : 0.49029754204398446
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\tOS.CGColorSpaceRelease(colorspace);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = pattern.createPattern(handle);\n\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5620437956204379,
        "accuracyCharacters" : 0.6002587322121604
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\tOS.CGColorSpaceRelease(colorspace);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = pattern.createPattern(handle);\n\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5401459854014599,
        "accuracyCharacters" : 0.5730918499353169
      } ],
      "memberId" : "9af007235d3489db0fa26edcd81515eb"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 83,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\t\n\tdata.foreground = color.handle;\t\n\tOS.CGContextSetStrokeColor(handle, color.handle);\t\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\t\n\tdata.forePattern = 0;\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : 0.5555555555555556,
        "accuracyCharacters" : 0.5537190082644629
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\t\n\tdata.foreground = color.handle;\t\n\tOS.CGContextSetStrokeColor(handle, color.handle);\t\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\t\n\tdata.forePattern = 0;\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : 0.6777777777777778,
        "accuracyCharacters" : 0.6880165289256198
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\t\n\tdata.foreground = color.handle;\t\n\tOS.CGContextSetStrokeColor(handle, color.handle);\t\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\t\n\tdata.forePattern = 0;\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : 0.8111111111111111,
        "accuracyCharacters" : 0.7975206611570248
      } ],
      "memberId" : "cfc9dce99786b92b66a574148342f22a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 84,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\tOS.CGColorSpaceRelease(colorspace);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tdata.forePattern = pattern.createPattern(handle);\n\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.44525547445255476,
        "accuracyCharacters" : 0.4942381562099872
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\tOS.CGColorSpaceRelease(colorspace);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tdata.forePattern = pattern.createPattern(handle);\n\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5620437956204379,
        "accuracyCharacters" : 0.6030729833546735
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\tOS.CGColorSpaceRelease(colorspace);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tdata.forePattern = pattern.createPattern(handle);\n\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5401459854014599,
        "accuracyCharacters" : 0.5774647887323944
      } ],
      "memberId" : "6f0d0889d12f51d57bf7c2e99ada68df"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 74,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tOS.gdk_gc_set_background(handle, color.handle);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_background(handle, color.handle);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_background(handle, color.handle);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 75,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5428571428571428,
        "accuracyCharacters" : 0.5641025641025641
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.7142857142857143,
        "accuracyCharacters" : 0.7695652173913043
      } ],
      "memberId" : "7fa1ca3ea81f107ce6c80d94370a2a18"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 87,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\t\n\tOS.gdk_gc_set_foreground(handle, color.handle);\t\n\tint /*long*/ cairo = data.cairo;\t\n\tif (cairo != 0) {\n\t\tGdkColor gdkColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (gdkColor.red & 0xFFFF) / (float)0xFFFF, (gdkColor.green & 0xFFFF) / (float)0xFFFF, (gdkColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\t\n\tOS.gdk_gc_set_foreground(handle, color.handle);\t\n\tint /*long*/ cairo = data.cairo;\t\n\tif (cairo != 0) {\n\t\tGdkColor gdkColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (gdkColor.red & 0xFFFF) / (float)0xFFFF, (gdkColor.green & 0xFFFF) / (float)0xFFFF, (gdkColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\t\n\tOS.gdk_gc_set_foreground(handle, color.handle);\t\n\tint /*long*/ cairo = data.cairo;\t\n\tif (cairo != 0) {\n\t\tGdkColor gdkColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (gdkColor.red & 0xFFFF) / (float)0xFFFF, (gdkColor.green & 0xFFFF) / (float)0xFFFF, (gdkColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.2482758620689655,
        "accuracyCharacters" : 0.2594086021505376
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.3586206896551724,
        "accuracyCharacters" : 0.3736559139784946
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.2896551724137931,
        "accuracyCharacters" : 0.32526881720430106
      } ],
      "memberId" : "4429110aa31b41bb735aff6df96a6f19"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tdata.background = color.handle;\n\tdirtyBits |= DIRTY_BACKGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tdirtyBits |= DIRTY_BACKGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tdirtyBits |= DIRTY_BACKGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 81,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tdata.foreground = color.handle;\n\tdirtyBits |= DIRTY_FOREGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tdirtyBits |= DIRTY_FOREGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tdirtyBits |= DIRTY_FOREGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 79,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tOS.XSetBackground(data.display, handle, color.handle.pixel);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetBackground(data.display, handle, color.handle.pixel);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetBackground(data.display, handle, color.handle.pixel);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 80,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5428571428571428,
        "accuracyCharacters" : 0.5641025641025641
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.7142857142857143,
        "accuracyCharacters" : 0.7695652173913043
      } ],
      "memberId" : "0011a80c539260a5b97625d60fa91fb0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 91,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tOS.XSetForeground(data.display, handle, color.handle.pixel);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor xColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (xColor.red & 0xFFFF) / (float)0xFFFF, (xColor.green & 0xFFFF) / (float)0xFFFF, (xColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetForeground(data.display, handle, color.handle.pixel);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor xColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (xColor.red & 0xFFFF) / (float)0xFFFF, (xColor.green & 0xFFFF) / (float)0xFFFF, (xColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetForeground(data.display, handle, color.handle.pixel);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor xColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (xColor.red & 0xFFFF) / (float)0xFFFF, (xColor.green & 0xFFFF) / (float)0xFFFF, (xColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 92,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.24324324324324326,
        "accuracyCharacters" : 0.2699300699300699
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.35135135135135137,
        "accuracyCharacters" : 0.3888111888111888
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.28378378378378377,
        "accuracyCharacters" : 0.32867132867132864
      } ],
      "memberId" : "2f9e56a101373119e392439f50b0abc3"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 80,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.backgroundPattern == null && OS.GetBkColor(handle) == color.handle) return;\n\tdata.background = color.handle;\n\tOS.SetBkColor (handle, color.handle);\n\tint newBrush = OS.CreateSolidBrush (color.handle);\n\tOS.SelectObject (handle, newBrush);\n\tif (data.hBrush != 0) OS.DeleteObject (data.hBrush);\n\tdata.hBrush = newBrush;\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backgroundPattern == null && OS.GetBkColor(handle) == color.handle) return;\n\tdata.background = color.handle;\n\tOS.SetBkColor (handle, color.handle);\n\tint newBrush = OS.CreateSolidBrush (color.handle);\n\tOS.SelectObject (handle, newBrush);\n\tif (data.hBrush != 0) OS.DeleteObject (data.hBrush);\n\tdata.hBrush = newBrush;\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backgroundPattern == null && OS.GetBkColor(handle) == color.handle) return;\n\tdata.background = color.handle;\n\tOS.SetBkColor (handle, color.handle);\n\tint newBrush = OS.CreateSolidBrush (color.handle);\n\tOS.SelectObject (handle, newBrush);\n\tif (data.hBrush != 0) OS.DeleteObject (data.hBrush);\n\tdata.hBrush = newBrush;\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 81,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitGdip(false, false);\n\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.6142857142857143,
        "accuracyCharacters" : 0.6164021164021164
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.8428571428571429,
        "accuracyCharacters" : 0.8412698412698413
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.6714285714285714,
        "accuracyCharacters" : 0.701058201058201
      } ],
      "memberId" : "f3f615434e60b7154ca3cf599ef2a4b0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 89,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.foregroundPattern == null && OS.GetTextColor(handle) == color.handle) return;\n\tdata.foreground = color.handle;\n\tOS.SetTextColor(handle, color.handle);\n\tsetPen(color.handle, -1, -1, -1, -1, data.dashes);\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.foregroundPattern == null && OS.GetTextColor(handle) == color.handle) return;\n\tdata.foreground = color.handle;\n\tOS.SetTextColor(handle, color.handle);\n\tsetPen(color.handle, -1, -1, -1, -1, data.dashes);\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.foregroundPattern == null && OS.GetTextColor(handle) == color.handle) return;\n\tdata.foreground = color.handle;\n\tOS.SetTextColor(handle, color.handle);\n\tsetPen(color.handle, -1, -1, -1, -1, data.dashes);\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "0e6f96d1df103688568679efe5c6f52eb4baa86c",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitGdip(true, false);\n\tGdip.Pen_SetBrush(data.gdipPen, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.38461538461538464,
        "accuracyCharacters" : 0.4143920595533499
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(true, false);\n\tGdip.Pen_SetBrush(data.gdipPen, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5897435897435898,
        "accuracyCharacters" : 0.6253101736972705
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(true, false);\n\tGdip.Pen_SetBrush(data.gdipPen, pattern.handle);\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.47435897435897434,
        "accuracyCharacters" : 0.49379652605459057
      } ],
      "memberId" : "4b482f645115394548384c9c3d51dfa8"
    } ],
    "foundMembers" : 9,
    "numberOfRecommendationSets" : 18,
    "precision" : 0.5,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.4469112215986954,
    "accuracyCharactersMin" : 0.4696214091955151,
    "patternOriginal" : "\n\t//# match (original, (pattern,backgroundPattern)) {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t//# wildcard stmt(ARES0);\n\t//# wildcard expr(ARES1, pattern, 1)\n\tdata.backgroundPattern = pattern;\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//# choice {\n\t//# case {\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t//# }\n\t//# case {\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t//# }\n\t//# }\n\t//# use (ARES0);\n\t//# use (ARES1, pattern, 1)\n\tdata.backgroundPattern = pattern;\n\t//# }",
    "patternCreationTimeInNanoSec" : 2183693000,
    "patternUseTimeInNanoSec" : 12181766052,
    "accuracyTokensMax" : 0.6753079417732493,
    "accuracyCharactersMax" : 0.6922110549422948
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "97981",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "98198",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f17871ff615dfb52a62f74dc95989707",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "commitId2" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 31,
          "methodNumber2" : 31
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "61cbbbfd8ff41e0faf0cf9e6df87e37f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "61213e1d33be6df09651589941b1e8eb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 25,
          "methodNumber2" : 25
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "89c72f5250d7bf261892d4e14a35badc",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 39,
          "methodNumber2" : 39
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "98198",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f17871ff615dfb52a62f74dc95989707",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "commitId2" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 31,
          "methodNumber2" : 31
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "61cbbbfd8ff41e0faf0cf9e6df87e37f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "61213e1d33be6df09651589941b1e8eb",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 25,
          "methodNumber2" : 25
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid fixFocus (Control focusControl)",
      "methodModified" : "\n\nvoid fixFocus (Control focusControl)",
      "diff" : "-\twhile ((control = control.parent) != null) {+\twhile (control != shell && (control = control.parent) != null) {-\t\tif (control == shell) break;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "89c72f5250d7bf261892d4e14a35badc",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "2107acef664dfb32a22e6982da0f5e6d022c012c",
          "commitId2" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java",
          "methodNumber1" : 39,
          "methodNumber2" : 39
        },
        "pattern" : [ 1000, 4018, 4109, 1002, 4017, 1091, 2000, 2999, 1000, 4017, 4018, 1002, 4070, 2000, 2000, 3001, 1002, 4070, 2000, 2000, 3001, 1008, 4027, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 7,
          "moves" : 3,
          "inserts" : 2,
          "deletes" : 2,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tShell shell = getShell ();\n\tControl control = this;\n\twhile (control != shell && (control = control.parent) != null) {\n\t\tif (control.setFocus ()) return;\n\t}\n\tshell.setSavedFocus (focusControl);\n\tint /*long*/ focusHandle = shell.fixedHandle;\n\tOS.GTK_WIDGET_SET_FLAGS (focusHandle, OS.GTK_CAN_FOCUS);\n\tOS.gtk_widget_grab_focus (focusHandle);\n\tOS.GTK_WIDGET_UNSET_FLAGS (focusHandle, OS.GTK_CAN_FOCUS);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "61cbbbfd8ff41e0faf0cf9e6df87e37f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tShell shell = getShell ();\n\tControl control = this;\n\twhile (control != shell && (control = control.parent) != null) {\n\t\tif (control.setFocus ()) return;\n\t}\n\tshell.setSavedFocus (focusControl);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "61213e1d33be6df09651589941b1e8eb"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java",
      "methodNumber" : 31,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tShell shell = getShell ();\n\tControl control = this;\n\twhile (control != shell && (control = control.parent) != null) {\n\t\tif (control.setFocus ()) return;\n\t}\n\tshell.setSavedFocus (focusControl);\n\tint window = OS.GetControlOwner (handle);\n\tOS.ClearKeyboardFocus (window);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "f17871ff615dfb52a62f74dc95989707"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java",
      "methodNumber" : 39,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tShell shell = getShell ();\n\tControl control = this;\n\twhile (control != shell && (control = control.parent) != null) {\n\t\tif (control.setFixedFocus ()) return;\n\t}\n\tshell.setSavedFocus (focusControl);\n\tOS.SetFocus (0);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "89c72f5250d7bf261892d4e14a35badc"
    } ],
    "foundMembers" : 4,
    "numberOfRecommendationSets" : 4,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 1.0,
    "accuracyCharactersMin" : 1.0,
    "patternOriginal" : "\n\t//# match (original, (setFixedFocus)) {\n\tShell shell = getShell ();\n\tControl control = this;\n\twhile ((control = control.parent) != null) {\n\t\tif (control.setFixedFocus ()) return;\n\t\tif (control == shell) break;\n\t}\n\tshell.setSavedFocus (focusControl);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tShell shell = getShell ();\n\tControl control = this;\n\twhile (control != shell && (control = control.parent) != null) {\n\t\tif (control.setFixedFocus ()) return;\n\t}\n\tshell.setSavedFocus (focusControl);\n\t//# }",
    "patternCreationTimeInNanoSec" : 128961962,
    "patternUseTimeInNanoSec" : 16479151530,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 1.0
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "76391",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "methodModified" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "91ba23341e2b8170b088d3c495ae209a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "methodModified" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d633a5811af620ef9eb35aa8dceaeb1c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 11,
          "methodNumber2" : 11
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "methodModified" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "113c78ecbf4f7de1e9be9cb14918575a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 13,
          "methodNumber2" : 13
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "methodModified" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "64b684aac3fadcdac6f7988443e47f63",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "methodModified" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "97359d1f70cf99912f8b8f5bf83a51e6",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 12,
          "methodNumber2" : 12
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "methodModified" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5c5f1975e599ef503eb3eca53077499",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 14,
          "methodNumber2" : 14
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "methodModified" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "91ba23341e2b8170b088d3c495ae209a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 7,
          "methodNumber2" : 7
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "methodModified" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d633a5811af620ef9eb35aa8dceaeb1c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 11,
          "methodNumber2" : 11
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "methodModified" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "15239",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "113c78ecbf4f7de1e9be9cb14918575a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
          "commitId2" : "8aa00f0b2575f0b62293c5c61031b0d91e980d29",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 13,
          "methodNumber2" : 13
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "methodModified" : "\n\n/**\n * Returns the background color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the background color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getBackground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "64b684aac3fadcdac6f7988443e47f63",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 8,
          "methodNumber2" : 8
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "methodModified" : "\n\n/**\n * Returns the font that the receiver will use to paint textual information\n * for the specified cell in this item.\n *\n * @param index the column index\n * @return the receiver's font\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @since 3.0\n */\npublic Font getFont (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "97359d1f70cf99912f8b8f5bf83a51e6",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 12,
          "methodNumber2" : 12
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "methodModified" : "\n\n/**\n * \n * Returns the foreground color at the given column index in the receiver.\n *\n * @param index the column index\n * @return the foreground color\n *\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * \n * @since 3.0\n */\npublic Color getForeground (int index)",
      "diff" : "+\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "f5c5f1975e599ef503eb3eca53077499",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "7f67eb669b60899d5d864f36db7609da8aaa74f8",
          "commitId2" : "943e636872bc8a03295d2687608e23eaccf0ef31",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
          "methodNumber1" : 14,
          "methodNumber2" : 14
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4118, 4027, 1000, 4023, 4118, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, 6074, -31534, 4063, 1000, 4132, 4023, 1000, 4119, 4023, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, -22051, -25239, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.columnCount);\n\tif (0 > index || index > count -1) return getBackground ();\n\tif (cellBackground == null || cellBackground [index] == null) return getBackground ();\n\treturn cellBackground [index];\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "64b684aac3fadcdac6f7988443e47f63"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 12,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.columnCount);\n\tif (0 > index || index > count -1) return getFont ();\n\tif (cellFont == null || cellFont [index] == null) return getFont ();\n\treturn cellFont [index];\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "97359d1f70cf99912f8b8f5bf83a51e6"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 14,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.columnCount);\n\tif (0 > index || index > count -1) return getForeground ();\n\tif (cellForeground == null || cellForeground [index] == null) return getForeground ();\n\treturn cellForeground [index];\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "f5c5f1975e599ef503eb3eca53077499"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.getColumnCount ());\n\tif (0 > index || index > count - 1) return getBackground ();\n\tint pixel = cellBackground != null ? cellBackground [index] : -1;\n\treturn pixel == -1 ? getBackground () : Color.win32_new (display, pixel);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "91ba23341e2b8170b088d3c495ae209a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 11,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.getColumnCount ());\n\tif (0 > index || index > count -1) return getFont ();\n\tint hFont = (cellFont != null) ? cellFont [index] : font;\n\treturn hFont == -1 ? getFont () : Font.win32_new (display, hFont);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "d633a5811af620ef9eb35aa8dceaeb1c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 13,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.getColumnCount ());\n\tif (0 > index || index > count -1) return getForeground ();\n\tint pixel = cellForeground != null ? cellForeground [index] : -1;\n\treturn pixel == -1 ? getForeground () : Color.win32_new (display, pixel);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "113c78ecbf4f7de1e9be9cb14918575a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.columnCount);\n\tif (0 > index || index > count - 1) return getBackground ();\n\tint /*long*/ [] ptr = new int /*long*/ [1];\n\tint modelIndex = parent.columnCount == 0 ? Table.FIRST_COLUMN : parent.columns [index].modelIndex;\n\tOS.gtk_tree_model_get (parent.modelHandle, handle, modelIndex + 3, ptr, -1);\n\tif (ptr [0] == 0) return getBackground ();\n\tGdkColor gdkColor = new GdkColor ();\n\tOS.memmove (gdkColor, ptr [0], GdkColor.sizeof);\n\treturn Color.gtk_new (display, gdkColor);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 11,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.columnCount);\n\tif (0 > index || index > count - 1) return getFont ();\n\tint /*long*/ [] ptr = new int /*long*/ [1];\n\tint modelIndex = parent.columnCount == 0 ? Table.FIRST_COLUMN : parent.columns [index].modelIndex;\n\tOS.gtk_tree_model_get (parent.modelHandle, handle, modelIndex + 4, ptr, -1);\n\tif (ptr [0] == 0) return getFont ();\n\treturn Font.gtk_new (display, ptr[0]);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "b10fc3c27723af8f6e6e1256887d4d0fbd2060e2",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java",
      "methodNumber" : 13,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\tint count = Math.max (1, parent.columnCount);\n\tif (0 > index || index > count - 1) return getForeground ();\n\tint /*long*/ [] ptr = new int /*long*/ [1];\n\tint modelIndex =  parent.columnCount == 0 ? Table.FIRST_COLUMN : parent.columns [index].modelIndex;\n\tOS.gtk_tree_model_get (parent.modelHandle, handle, modelIndex + 2, ptr, -1);\n\tif (ptr [0] == 0) return getForeground ();\n\tGdkColor gdkColor = new GdkColor ();\n\tOS.memmove (gdkColor, ptr [0], GdkColor.sizeof);\n\treturn Color.gtk_new (display, gdkColor);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    } ],
    "foundMembers" : 6,
    "numberOfRecommendationSets" : 9,
    "precision" : 0.6666666666666666,
    "recall" : 1.0,
    "accuracyTokensMin" : 1.0,
    "accuracyCharactersMin" : 1.0,
    "patternOriginal" : "\n\t//# match (original, (columnCount,getBackground,cellBackground)) {\n\tcheckWidget ();\n\t//# wildcard expr(ARES0, parent.columnCount, 1)\n\tint count = Math.max (1, parent.columnCount);\n\t//# wildcard expr(ARES1, getBackground (), 1)\n\tif (0 > index || index > count -1) return getBackground ();\n\t//# wildcard stmt(ARES2);\n\t//# wildcard expr(ARES3, cellBackground [index], 1)\n\treturn cellBackground [index];\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tcheckWidget ();\n\tif (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);\n\t//# use (ARES0, parent.columnCount, 1)\n\tint count = Math.max (1, parent.columnCount);\n\t//# use (ARES1, getBackground (), 1)\n\tif (0 > index || index > count -1) return getBackground ();\n\t//# use (ARES2);\n\t//# use (ARES3, cellBackground [index], 1)\n\treturn cellBackground [index];\n\t//# }",
    "patternCreationTimeInNanoSec" : 354370439,
    "patternUseTimeInNanoSec" : 19350477401,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 1.0
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "89785",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0c1167592a08867eebb1243936ed7056",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 14,
          "methodNumber2" : 15
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid releaseWidget ()",
      "methodModified" : "\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "abd11a5e3885523702b6c6e494f5e58b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 8,
          "methodNumber2" : 9
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\nvoid releaseWidget ()",
      "diff" : "+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d2856e652d7a3f40203630053aa00678",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 13,
          "methodNumber2" : 13
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 3,
          "moves" : 0,
          "inserts" : 3,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;\t",
      "commitMsg" : "89785",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "519c31b9348e6f4e90c278b665c38a55",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "commitId2" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+    if (linkDisabledColor != null) linkDisabledColor.dispose ();+    linkDisabledColor = null;",
      "commitMsg" : "89785",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "dc726bdd228b406be08aea3385b4d297",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
          "commitId2" : "99ebdda9366dd7a5b6b26ca3eb47fbdcbb78a927",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 15,
          "methodNumber2" : 16
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0c1167592a08867eebb1243936ed7056",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 14,
          "methodNumber2" : 15
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nvoid releaseWidget ()",
      "methodModified" : "\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "abd11a5e3885523702b6c6e494f5e58b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 8,
          "methodNumber2" : 9
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\nvoid releaseWidget ()",
      "diff" : "+\tlinkDisabledColor = null;",
      "commitMsg" : "fix for Toolbar flicker on non-XP",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d2856e652d7a3f40203630053aa00678",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e3044a41893dace052525d17ede27b288332bdf6",
          "commitId2" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 13,
          "methodNumber2" : 13
        },
        "pattern" : [ 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 3,
          "moves" : 0,
          "inserts" : 3,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+\tif (linkDisabledColor != null) linkDisabledColor.dispose ();+\tlinkDisabledColor = null;\t",
      "commitMsg" : "89785",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "519c31b9348e6f4e90c278b665c38a55",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "883639aa511080e7ba7d36640dc0e1b1051f2026",
          "commitId2" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 16,
          "methodNumber2" : 17
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nvoid releaseWidget ()",
      "methodModified" : "\n\n/**\n * Removes the listener from the collection of listeners who will\n * be notified when the control is selected.\n *\n * @param listener the listener which should no longer be notified\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the listener is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n *\n * @see SelectionListener\n * @see #addSelectionListener\n */\npublic void removeSelectionListener (SelectionListener listener)",
      "diff" : "+    if (linkDisabledColor != null) linkDisabledColor.dispose ();+    linkDisabledColor = null;",
      "commitMsg" : "89785",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "dc726bdd228b406be08aea3385b4d297",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4cce1b57af8cc4188e8a0da934fe9746147f7583",
          "commitId2" : "99ebdda9366dd7a5b6b26ca3eb47fbdcbb78a927",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java",
          "methodNumber1" : 15,
          "methodNumber2" : 16
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -22462, -1939, 4017, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4063, 4023, 1000, 4070, -22462, -1939, 4063, 1000, 4070, 25509, 9759, 4063, 1007, 4077, 4061, 1000, 4070, -22462, -1939, 4077, 1000, 4120, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 5
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 14,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null)\tlayout.dispose ();\n\tlayout = null;\n\tif (linkColor != null)\tlinkColor.dispose ();\n\tlinkColor = null;\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 0.84,
        "accuracyCharacters" : 0.7947019867549668
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null)\tlayout.dispose ();\n\tlayout = null;\n\tif (linkColor != null)\tlinkColor.dispose ();\n\tlinkColor = null;\n\tif (linkDisabledColor != null) linkDisabledColor.dispose ();\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "0c1167592a08867eebb1243936ed7056"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tlinkDisabledColor = null;\n\toffsets = null;\t\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 0.84,
        "accuracyCharacters" : 0.7953795379537953
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tif (linkDisabledColor != null) linkDisabledColor.dispose ();\n\tlinkDisabledColor = null;\n\toffsets = null;\t\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "abd11a5e3885523702b6c6e494f5e58b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 0.84,
        "accuracyCharacters" : 0.7920792079207921
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tif (linkDisabledColor != null) linkDisabledColor.dispose ();\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 0.9966996699669967
      } ],
      "memberId" : "519c31b9348e6f4e90c278b665c38a55"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 15,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 0.84,
        "accuracyCharacters" : 0.775974025974026
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tif (linkDisabledColor != null) linkDisabledColor.dispose ();\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 0.974025974025974
      } ],
      "memberId" : "dc726bdd228b406be08aea3385b4d297"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "e3044a41893dace052525d17ede27b288332bdf6",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java",
      "methodNumber" : 13,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper.releaseWidget ();\n\tif (layout != null) layout.dispose ();\n\tlayout = null;\n\tif (linkColor != null) linkColor.dispose ();\n\tlinkColor = null;\n\tif (linkDisabledColor != null) linkDisabledColor.dispose ();\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n}",
        "accuracyTokens" : 0.84,
        "accuracyCharacters" : 0.7947019867549668
      } ],
      "memberId" : "d2856e652d7a3f40203630053aa00678"
    } ],
    "foundMembers" : 5,
    "numberOfRecommendationSets" : 5,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.8400000000000001,
    "accuracyCharactersMin" : 0.7905673490717094,
    "patternOriginal" : "\n\t//# match (original) {\n\tsuper.releaseWidget ();\n\tif (layout != null)\tlayout.dispose ();\n\tlayout = null;\n\tif (linkColor != null)\tlinkColor.dispose ();\n\tlinkColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tsuper.releaseWidget ();\n\tif (layout != null)\tlayout.dispose ();\n\tlayout = null;\n\tif (linkColor != null)\tlinkColor.dispose ();\n\tlinkColor = null;\n\t//# choice {\n\t//# case {\n\tif (linkDisabledColor != null) linkDisabledColor.dispose ();\n\t//# }\n\t//# }\n\tlinkDisabledColor = null;\n\toffsets = null;\n\tids = null;\n\tmnemonics = null;\n\ttext = null;\n\t//# }",
    "patternCreationTimeInNanoSec" : 110641896,
    "patternUseTimeInNanoSec" : 39283893259,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 0.9941451287985942
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "79107",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_NULL_ARGUMENT);+\t}-\t\tif (string == null) break;",
      "commitMsg" : "Produces java objects mapping to XPCOM header files",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6163731106df272c8694c28edfa21751",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
          "commitId2" : "7460f398f4aff7bc31e8034651e2181376b83e54",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 51,
          "methodNumber2" : 51
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 14990, 16478, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_NULL_ARGUMENT);+\t}",
      "commitMsg" : "Produces java objects mapping to XPCOM header files",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "42a0282a3d4875ce3a2d0c455507943c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
          "commitId2" : "7460f398f4aff7bc31e8034651e2181376b83e54",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 42,
          "methodNumber2" : 42
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 14990, 16478, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break; ",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c477c8769f1bc45dacb08ac61745a889",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
          "commitId2" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 46,
          "methodNumber2" : 46
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break; ",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "88334e1d359304d3db98e229db6a6da7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
          "commitId2" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 46,
          "methodNumber2" : 46
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break;",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e3ccf759fa2bbef053b6a20adca3083a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "commitId2" : "5aa729a4435cbc3bc39b7010a99ea938c612d744",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 61,
          "methodNumber2" : 61
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) {-\t\t\tOS.g_free (iter);-\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);-\t\t}",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a46ec5596b8618a6f9138da080feab71",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "commitId2" : "5aa729a4435cbc3bc39b7010a99ea938c612d744",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 50,
          "methodNumber2" : 50
        },
        "pattern" : [ 1006, 1004, 4070, 0, 2532, 1533, -6208, 1004, 4070, -19155, -2236, -16882, 15078, 1006, 1006, 1004, 4070, 49, 31512, 1533, -6208, 1004, 4070, -13611, 24593, 0, 105, 1004, 4070, 11864, -7841, 29746, 14748, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1002, 4063, 1941, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1000, 4076, 4017, 1002, 4070, 2529, 2000, 3000, 1002, 4070, 2591, 2000, 2999, 1008, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 26,
          "moves" : 6,
          "inserts" : 14,
          "deletes" : 1,
          "updates" : 5,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) continue;",
      "commitMsg" : "79191",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "b789e73145cde035a1547f804b4c440b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
          "commitId2" : "f302f87369c16404fa6c4d15137c2070c9b0c600",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4083 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "79191",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7bd8ddb4d7290d6640b7e213591eef0d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
          "commitId2" : "f302f87369c16404fa6c4d15137c2070c9b0c600",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2f8ef6d6d1405000acb93fcb3ea4fe43",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f9bded957dc1b6446661cc9d0425e4171068b116",
          "commitId2" : "3e1412832c437c4b4192bd508a7ca98ba639ef47",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 41,
          "methodNumber2" : 41
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "60cd2c2d473c4149b06a0c920ca9e1a6",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f9bded957dc1b6446661cc9d0425e4171068b116",
          "commitId2" : "3e1412832c437c4b4192bd508a7ca98ba639ef47",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 48,
          "methodNumber2" : 48
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_NULL_ARGUMENT);+\t}-\t\tif (string == null) break;",
      "commitMsg" : "Produces java objects mapping to XPCOM header files",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "6163731106df272c8694c28edfa21751",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
          "commitId2" : "7460f398f4aff7bc31e8034651e2181376b83e54",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 51,
          "methodNumber2" : 51
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 14990, 16478, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_NULL_ARGUMENT);+\t}",
      "commitMsg" : "Produces java objects mapping to XPCOM header files",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "42a0282a3d4875ce3a2d0c455507943c",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
          "commitId2" : "7460f398f4aff7bc31e8034651e2181376b83e54",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 42,
          "methodNumber2" : 42
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 14990, 16478, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break; ",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "c477c8769f1bc45dacb08ac61745a889",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
          "commitId2" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 46,
          "methodNumber2" : 46
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break; ",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "88334e1d359304d3db98e229db6a6da7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "02dc114b9675bb653f66a27101cc4acf22e3be3f",
          "commitId2" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 46,
          "methodNumber2" : 46
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) break;",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e3ccf759fa2bbef053b6a20adca3083a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "commitId2" : "5aa729a4435cbc3bc39b7010a99ea938c612d744",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 61,
          "methodNumber2" : 61
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4080 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) {-\t\t\tOS.g_free (iter);-\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);-\t\t}",
      "commitMsg" : "bug 79107",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a46ec5596b8618a6f9138da080feab71",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "19d2569ce5ee65765596a132b9028fabd8dd8542",
          "commitId2" : "5aa729a4435cbc3bc39b7010a99ea938c612d744",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 50,
          "methodNumber2" : 50
        },
        "pattern" : [ 1006, 1004, 4070, 0, 2532, 1533, -6208, 1004, 4070, -19155, -2236, -16882, 15078, 1006, 1006, 1004, 4070, 49, 31512, 1533, -6208, 1004, 4070, -13611, 24593, 0, 105, 1004, 4070, 11864, -7841, 29746, 14748, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1002, 4063, 1941, 2000, 3003, 1000, 4070, 0, 105, 4017, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1000, 4076, 4017, 1002, 4070, 2529, 2000, 3000, 1002, 4070, 2591, 2000, 2999, 1008, 4023 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 26,
          "moves" : 6,
          "inserts" : 14,
          "deletes" : 1,
          "updates" : 5,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}-\t\tif (string == null) continue;",
      "commitMsg" : "79191",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "b789e73145cde035a1547f804b4c440b",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
          "commitId2" : "f302f87369c16404fa6c4d15137c2070c9b0c600",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1006, 1004, 4070, -13611, 24593, 0, 105, 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063, 1000, 4076, 4017, 1002, 4070, 2591, 2000, 2999, 1000, 4070, 1533, -6208, 4076, 1008, 4083 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 2,
          "inserts" : 24,
          "deletes" : 1,
          "updates" : 1,
          "aligns" : 0
        },
        "treeSize" : 11
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "79191",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "7bd8ddb4d7290d6640b7e213591eef0d",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "fc6e2bfda76cef32fe5c0cd57a555cf8e546d8f1",
          "commitId2" : "f302f87369c16404fa6c4d15137c2070c9b0c600",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 52,
          "methodNumber2" : 52
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 8
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's items to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2f8ef6d6d1405000acb93fcb3ea4fe43",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f9bded957dc1b6446661cc9d0425e4171068b116",
          "commitId2" : "3e1412832c437c4b4192bd508a7ca98ba639ef47",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/List.java",
          "methodNumber1" : 41,
          "methodNumber2" : 41
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "methodModified" : "\n\n/**\n * Sets the receiver's list to be the given array of items.\n *\n * @param items the array of items\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_NULL_ARGUMENT - if the items array is null</li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>\n *    <li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>\n * </ul>\n * @exception SWTError <ul>\n *    <li>ERROR_ITEM_NOT_ADDED - if the operation fails because of an operating system failure</li>\n * </ul>\n */\npublic void setItems (String [] items)",
      "diff" : "+\tfor (int i=0; i<items.length; i++) {+\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "60cd2c2d473c4149b06a0c920ca9e1a6",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "f9bded957dc1b6446661cc9d0425e4171068b116",
          "commitId2" : "3e1412832c437c4b4192bd508a7ca98ba639ef47",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Combo.java",
          "methodNumber1" : 48,
          "methodNumber2" : 48
        },
        "pattern" : [ 1007, 4088, 4061, 1000, 4071, 4088, 1000, 4114, 960, -9170, 1, -28594, 4068, 1000, 4070, 0, 105, 4067, 1000, 4029, 4087, 1000, 4017, 4088, 1000, 4070, 0, 105, 4017, 1000, 4063, 4017, 1000, 4070, 1533, -6208, 4063, 1000, 4070, -16882, 15078, 4063, 1000, 4069, 4088, 1000, 4090, 4069, 1000, 4070, 0, 105, 4090, 1007, 4061, 4088, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4076, 4017, 1000, 4070, 1533, -6208, 4076, 1000, 4070, 0, 105, 4076, 1000, 4120, 4017, 1007, 4023, 4027, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 28,
          "moves" : 0,
          "inserts" : 28,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java",
      "methodNumber" : 53,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdeselectAll ();\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;\n\tint[] ids = new int [length];\n\tfor (int i=0; i<length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t\tif (items [i].isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);\n\t\tids [i] = items [i].id;\n\t\tshowItem (items [i], false);\n\t}\n\tignoreSelect = true;\n\t/*\n\t* Bug in the Macintosh.  When the DataBroswer selection flags includes\n\t* both kDataBrowserNeverEmptySelectionSet and kDataBrowserSelectOnlyOne,\n    * two items are selected when SetDataBrowserSelectedItems() is called\n    * with kDataBrowserItemsAssign to assign a new seletion despite the fact\n\t* that kDataBrowserSelectOnlyOne was specified.  The fix is to save and\n\t* restore kDataBrowserNeverEmptySelectionSet around each call to\n\t* SetDataBrowserSelectedItems().\n\t*/\n\tint [] selectionFlags = null;\n\tif ((style & SWT.SINGLE) != 0) {\n\t\tselectionFlags = new int [1];\n\t\tOS.GetDataBrowserSelectionFlags (handle, selectionFlags);\n\t\tOS.SetDataBrowserSelectionFlags (handle, selectionFlags [0] & ~OS.kDataBrowserNeverEmptySelectionSet);\n\t}\n\tOS.SetDataBrowserSelectedItems (handle, ids.length, ids, OS.kDataBrowserItemsAssign);\n\tif ((style & SWT.SINGLE) != 0) {\n\t\tOS.SetDataBrowserSelectionFlags (handle, selectionFlags [0]);\n\t}\n\tignoreSelect = false;\n\tif (length > 0) showItem (items [0], true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//NOT DONE - range check\n\tint length = items.length;\n\tint [] ids = new int [length];\n\tfor (int i=0; i<length; i++) ids [i] = indexOf (items [length - i - 1]) + 1;\n\tselect (ids, length, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.RemoveDataBrowserItems (handle, OS.kDataBrowserNoItem, 0, null, 0);\n\tif (OS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, items.length, null, OS.kDataBrowserItemNoProperty) != OS.noErr) {\n\t\terror (SWT.ERROR_ITEM_NOT_ADDED);\n\t}\n\tthis.items = new String [items.length];\n\tSystem.arraycopy (items, 0, this.items, 0, items.length);\n\titemCount = items.length;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "7bd8ddb4d7290d6640b7e213591eef0d"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 57,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdeselectAll ();\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;\n\tint count = 0;\n\tint [] ids = new int [length];\n\tfor (int i=0; i<length; i++) {\n\t\tString string = items [length - i - 1];\n\t\tif ((style & SWT.SINGLE) != 0) {\n\t\t\tint index = indexOf (string, 0);\n\t\t\tif (index != -1) {\n\t\t\t\tcount = 1;\n\t\t\t\tids = new int [] {index + 1};\n\t\t\t}\n\t\t} else {\n\t\t\tint index = 0;\n\t\t\twhile ((index = indexOf (string, index)) != -1) {\n\t\t\t\tif (count == ids.length) {\n\t\t\t\t\tint [] newIds = new int [ids.length + 4];\n\t\t\t\t\tSystem.arraycopy (ids, 0, newIds, 0, ids.length);\n\t\t\t\t\tids = newIds;\n\t\t\t\t}\n\t\t\t\tids [count++] = index + 1;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\tif (count > 0) {\n\t\tselect (ids, count, true);\n\t\tshowIndex (ids [0] - 1);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 50,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);\n\tOS.g_signal_handlers_block_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);\n\tOS.gtk_list_store_clear (modelHandle);\n\tOS.g_signal_handlers_unblock_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);\n\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());\n\tif (iter == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\n\tfor (int i=0; i<items.length; i++) {\n\t\tString string = items [i];\n\t\tif (string == null) {\n\t\t\tOS.g_free (iter);\n\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);\n\t\t}\n\t\tbyte [] buffer = Converter.wcsToMbcs (null, string, true);\n\t\tOS.gtk_list_store_append (modelHandle, iter);\n\t\tOS.gtk_list_store_set (modelHandle, iter, TEXT_COLUMN, buffer, -1);\n\t}\n\tOS.g_free (iter);\n}",
        "accuracyTokens" : 0.9175824175824175,
        "accuracyCharacters" : 0.9082177161152615
      } ],
      "memberId" : "a46ec5596b8618a6f9138da080feab71"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 54,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdeselectAll ();\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;\n\tboolean first = true;\n\tfor (int i = 0; i < length; i++) {\n\t\tint index = 0;\n\t\tString string = items [i];\n\t\tif (string != null) {\n\t\t\twhile ((index = indexOf (string, index)) != -1) {\n\t\t\t\tif ((style & SWT.MULTI) != 0) {\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\tselectFocusIndex (index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselect (index);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tselectFocusIndex (index);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\tshowSelection ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 61,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tlockText = ignoreSelect = true;\n\tOS.gtk_list_clear_items (listHandle, 0, -1);\n\tint /*long*/ font = getFontDescription ();\n\tGdkColor color = getForegroundColor ();\n\tint i = 0;\n\twhile (i < items.length) {\n\t\tString string = items [i];\n\t\tif (string == null) break;\n\t\tbyte [] buffer = Converter.wcsToMbcs (null, string, true);\n\t\tint /*long*/ item = OS.gtk_list_item_new_with_label (buffer);\n\t\tint /*long*/ label = OS.gtk_bin_get_child (item); \n\t\tOS.gtk_widget_modify_fg (label, OS.GTK_STATE_NORMAL, color);\n\t\tOS.gtk_widget_modify_font (label, font);\n\t\tOS.gtk_container_add (listHandle, item);\n\t\tOS.gtk_widget_show (item);\n\t\ti++;\n\t}\n\tthis.items = new String [items.length];\n\tSystem.arraycopy (items, 0, this.items, 0, i);\n\tlockText = ignoreSelect = false;\n\tOS.gtk_entry_set_text (entryHandle, new byte[0]);\n}",
        "accuracyTokens" : 0.9748743718592965,
        "accuracyCharacters" : 0.970317297850563
      } ],
      "memberId" : "e3ccf759fa2bbef053b6a20adca3083a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : 26,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (items.length == 0) {\n\t\tsetSelection (-1, false);\n\t} else {\n\t\tfor (int i=items.length - 1; i>=0; --i) {\n\t\t\tint index = indexOf (items [i]);\n\t\t\tif (index != -1) setSelection (index, false);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.PtListDeleteAllItems (handle);\n\tint[] itemsPtr = new int [items.length];\n\tfor (int i=0; i<itemsPtr.length; i++) {\n\t\tbyte [] buffer = Converter.wcsToMbcs (null, items [i], true);\n\t\tint ptr = OS.malloc (buffer.length);\n\t\tOS.memmove (ptr, buffer, buffer.length);\n\t\titemsPtr [i] = ptr;\n\t}\n\tOS.PtListAddItems (handle, itemsPtr, itemsPtr.length, 0);\n\tfor (int i=0; i<itemsPtr.length; i++) {\n\t\tOS.free (itemsPtr [i]);\n\t}\n\tOS.PtSetResource (handle, OS.Pt_ARG_TEXT_STRING, 0, 0);\n\tsendEvent (SWT.Modify);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "60cd2c2d473c4149b06a0c920ca9e1a6"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (items.length == 0) {\n\t\tsetSelection (-1, false);\n\t} else {\n\t\tfor (int i=items.length-1; i>=0; --i) {\n\t\t\tint index = indexOf (items [i]);\n\t\t\tif (index != -1) setSelection (index, false);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (items.length == 0) {\n\t\tsetSelection (-1, false);\n\t} else {\n\t\tfor (int i=items.length-1; i>=0; --i) {\n\t\t\tint index = indexOf (items [i]);\n\t\t\tif (index != -1) setSelection (index, false);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tif (items.length == 0) {\n\t\tremoveAll();\n\t\treturn;\n\t}\n\t\n\tint index = 0;\n\tint [] table = new int [items.length];\n\tString codePage = getCodePage ();\n\twhile (index < items.length) {\n\t\tString string = items [index];\n\t\tif (string == null) break; \n\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, encodeString(string), true);\n\t\tint xmString = OS.XmStringCreateLocalized (buffer);\n\t\tif (xmString == 0) break;\n\t\ttable [index++] = xmString;\n\t}\n\tint ptr = OS.XtMalloc (index * 4);\n\tOS.memmove (ptr, table, index * 4);\n\tint [] argList1 = {OS.XmNitems, ptr, OS.XmNitemCount, index};\n\tOS.XtSetValues (handle, argList1, argList1.length / 2);\n\tfor (int i=0; i<index; i++) OS.XmStringFree (table [i]);\n\tOS.XtFree (ptr);\n\tif (index < items.length) error (SWT.ERROR_ITEM_NOT_ADDED);\n\t\n\tint [] argList2 = {OS.XmNtextField, 0};\n\tOS.XtGetValues (handle, argList2, argList2.length / 2);\n\tboolean warnings = display.getWarnings ();\n\tdisplay.setWarnings (false);\n\tOS.XmTextSetString (argList2[1], new byte[1]);\n\tdisplay.setWarnings(warnings);\n\tint [] argList3 = {OS.XmNlist, 0};\n\tOS.XtGetValues (handle, argList3, argList3.length / 2);\n\tint [] argList4 = {OS.XmNselectedItemCount, 0, OS.XmNselectedItems, 0};\n\tOS.XtSetValues (argList3 [1], argList4, argList4.length / 2);\n}",
        "accuracyTokens" : 0.9852507374631269,
        "accuracyCharacters" : 0.9789473684210527
      } ],
      "memberId" : "c477c8769f1bc45dacb08ac61745a889"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t/*\n\t* Bug in AIX.  When all list items are replaced\n\t* in a scrolled list that is currently showing a\n\t* horizontal scroll bar, the horizontal scroll bar\n\t* is hidden, but the list does not grow to take up\n\t* the space once occupied by the bar.  The fix is\n\t* of force the horizontal bar to be recomputed by\n\t* removing all items and resizing the list.\n\t*/\n\tOS.XmListSetPos (handle, 0);\n\tOS.XmListDeselectAllItems (handle);\n\tif ((style & SWT.H_SCROLL) != 0) {\n\t\tOS.XmListDeleteAllItems (handle);\n\t}\n\tint index = 0;\n\tint [] table = new int [items.length];\n\tString codePage = getCodePage ();\n\twhile (index < items.length) {\n\t\tString string = items [index];\n\t\tif (string == null) break; \n\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, string, true);\n\t\tint xmString = OS.XmStringCreateLocalized (buffer);\n\t\tif (xmString == 0) break;\n\t\ttable [index++] = xmString;\n\t}\n\tint ptr = OS.XtMalloc (index * 4);\n\tOS.memmove (ptr, table, index * 4);\n\tint [] argList = {OS.XmNitems, ptr, OS.XmNitemCount, index};\n\tOS.XtSetValues (handle, argList, argList.length / 2);\n\tfor (int i=0; i<index; i++) OS.XmStringFree (table [i]);\n\tOS.XtFree (ptr);\n\t/*\n\t* Bug in Motif.  Resize the list to work around\n\t* the horizontal scroll bar display bug described\n\t* above.\n\t*/\n\tif ((style & SWT.H_SCROLL) != 0) {\n\t\tOS.XtResizeWindow (handle);\n\t}\n\tif (index < items.length) error (SWT.ERROR_ITEM_NOT_ADDED);\n}",
        "accuracyTokens" : 0.9803921568627451,
        "accuracyCharacters" : 0.9807073954983923
      } ],
      "memberId" : "88334e1d359304d3db98e229db6a6da7"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 50,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n\t\tdeselectAll ();\n\t\treturn;\n\t}\n\tString codePage = getCodePage ();\n\tif ((style & SWT.SINGLE) != 0) {\n\t\tString string = items [0];\n\t\tif (string != null) {\n\t\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, string, true);\n\t\t\tint xmString = OS.XmStringCreateLocalized (buffer);\n\t\t\tif (xmString != 0) {\n\t\t\t\tint index = OS.XmListItemPos (handle, xmString);\n\t\t\t\tif (index != 0) OS.XmListSelectPos (handle, index, false);\n\t\t\t\tOS.XmStringFree (xmString);\n\t\t\t\tif (index != 0 && OS.XmListPosSelected (handle, index)) {\n\t\t\t\t\tshowSelection ();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdeselectAll ();\n\t\treturn;\n\t}\n\tdeselectAll ();\n\tint count = 0;\n\tint [] table = new int [length];\n\tfor (int i=0; i<length; i++) {\n\t\tString string = items [i];\n\t\tif (string != null) {\n\t\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, string, true);\n\t\t\tint xmString = OS.XmStringCreateLocalized (buffer);\n\t\t\tif (xmString != 0) table [count++] = xmString;\n\t\t}\n\t}\n\tint ptr = OS.XtMalloc (count * 4);\n\tOS.memmove (ptr, table, count * 4);\n\tint [] argList = {OS.XmNselectedItems, ptr, OS.XmNselectedItemCount, count};\n\tOS.XtSetValues (handle, argList, argList.length / 2);\n\tboolean focusSet = false;\n\tfor (int i = 0; i < count; i++) {\n\t\tif (!focusSet) {\n\t\t\tint index = OS.XmListItemPos (handle, table [i]);\n\t\t\tif (index > 0) {\n\t\t\t\tfocusSet = true;\n\t\t\t\tsetFocusIndex (index - 1);\n\t\t\t}\n\t\t}\n\t\tOS.XmStringFree (table [i]);\n\t}\n\tOS.XtFree (ptr);\n\tOS.XmListUpdateSelectedList (handle);\n\tshowSelection ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tremoveAll();\n\tif (items.length == 0) return;\n\tfor (int i= 0; i < items.length; i++) {\n\t\tString string = items[i];\n\t\tif (string == null) continue;\n\t\tchar [] buffer = new char [string.length ()];\n\t\tstring.getChars (0, buffer.length, buffer, 0);\n\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);\n\t\tif (ptr == 0) error (SWT.ERROR_ITEM_NOT_ADDED);\n\t\tint result;\n\t\tif ((style & SWT.READ_ONLY) != 0) {\n\t\t\tresult = OS.AppendMenuItemTextWithCFString (menuHandle, ptr, 0, 0, null);\n\t\t} else {\n\t\t\tint [] outIndex = new int[1];\n\t\t\tresult = OS.HIComboBoxAppendTextItem (handle, ptr, outIndex);\n\t\t}\n\t\tOS.CFRelease(ptr);\n\t\tif (result != OS.noErr) error (SWT.ERROR_ITEM_NOT_ADDED);\n\t}\n}",
        "accuracyTokens" : 0.9740932642487047,
        "accuracyCharacters" : 0.963963963963964
      } ],
      "memberId" : "b789e73145cde035a1547f804b4c440b"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java",
      "methodNumber" : 51,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.SendMessage (handle, OS.CB_RESETCONTENT, 0, 0);\n\tint codePage = getCodePage ();\n\tfor (int i=0; i<items.length; i++) {\n\t\tString string = items [i];\n\t\tif (string == null) break;\n\t\tTCHAR buffer = new TCHAR (codePage, string, true);\n\t\tint code = OS.SendMessage (handle, OS.CB_ADDSTRING, 0, buffer);\n\t\tif (code == OS.CB_ERR) error (SWT.ERROR_ITEM_NOT_ADDED);\n\t\tif (code == OS.CB_ERRSPACE) error (SWT.ERROR_ITEM_NOT_ADDED);\n\t}\n\t// widget could be disposed at this point\n\tsendEvent (SWT.Modify);\n}",
        "accuracyTokens" : 0.958904109589041,
        "accuracyCharacters" : 0.9491778774289985
      } ],
      "memberId" : "6163731106df272c8694c28edfa21751"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/TabFolder.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (items.length == 0) {\n\t\tsetSelection (-1, false);\n\t} else {\n\t\tfor (int i=items.length-1; i>=0; --i) {\n\t\t\tint index = indexOf (items [i]);\n\t\t\tif (index != -1) setSelection (index, false);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java",
      "methodNumber" : 126,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n\t\tdeselectAll ();\n\t\treturn;\n\t}\n\tsetSelectableSelection(items);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdeselectAll ();\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;\n\tboolean first = true;\n\tfor (int i = 0; i < length; i++) {\n\t\tint index = indexOf (items [i]);\n\t\tif (index != -1) {\n\t\t\tif (first) {\n\t\t\t\tfirst = false;\n\t\t\t\tselectFocusIndex (index);\n\t\t\t} else {\n\t\t\t\tselect (index);\n\t\t\t}\n\t\t}\n\t}\n\tshowSelection ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdeselectAll ();\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;\n\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);\n\tOS.g_signal_handlers_block_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);\n\tboolean first = true;\n\tfor (int i = 0; i < length; i++) {\n\t\tTreeItem item = items [i];\n\t\tif (item == null) continue;\n\t\tif (item.isDisposed ()) break;\n\t\tif (item.parent != this) continue;\n\t\tint /*long*/ path = OS.gtk_tree_model_get_path (modelHandle, item.handle);\n\t\tshowItem (path, first);\n\t\tif (first) {\n\t\t\tOS.gtk_tree_view_set_cursor (handle, path, 0, false);\n\t\t}\n\t\tOS.gtk_tree_selection_select_iter (selection, item.handle);\n\t\tOS.gtk_tree_path_free (path);\n\t\tfirst = false;\n\t}\n\tOS.g_signal_handlers_unblock_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n\t\tdeselectAll ();\n\t\treturn;\n\t}\n\tsetSelectableSelection(items);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint oldProc = OS.GetWindowLong (handle, OS.GWL_WNDPROC);\n\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, ListProc);\n\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);\n\tif (redraw) {\n\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\n\t}\n\tRECT rect = null;\n\tint hDC = 0, oldFont = 0, newFont = 0, newWidth = 0;\n\tif ((style & SWT.H_SCROLL) != 0) {\n\t\trect = new RECT ();\n\t\thDC = OS.GetDC (handle);\n\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);\n\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);\n\t\tOS.SendMessage (handle, OS.LB_SETHORIZONTALEXTENT, 0, 0);\n\t}\n\tint length = items.length;\n\tOS.SendMessage (handle, OS.LB_RESETCONTENT, 0, 0);\n\tOS.SendMessage (handle, OS.LB_INITSTORAGE, length, length * 32);\n\tint index = 0;\n\tint cp = getCodePage ();\n\twhile (index < length) {\n\t\tString string = items [index];\n\t\tif (string == null) break;\n\t\tTCHAR buffer = new TCHAR (cp, string, true);\n\t\tint result = OS.SendMessage (handle, OS.LB_ADDSTRING, 0, buffer);\n\t\tif (result == OS.LB_ERR || result == OS.LB_ERRSPACE) break;\n\t\tif ((style & SWT.H_SCROLL) != 0) {\n\t\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE | OS.DT_NOPREFIX;\n\t\t\tOS.DrawText (hDC, buffer, buffer.length (), rect, flags);\n\t\t\tnewWidth = Math.max (newWidth, rect.right - rect.left);\n\t\t}\n\t\tindex++;\n\t}\n\tif ((style & SWT.H_SCROLL) != 0) {\n\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);\n\t\tOS.ReleaseDC (handle, hDC);\n\t\tOS.SendMessage (handle, OS.LB_SETHORIZONTALEXTENT, newWidth + 3, 0);\n\t}\n\tif (redraw) {\n\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);\n\t\t/*\n\t\t* This code is intentionally commented.  The window proc\n\t\t* for the list box implements WM_SETREDRAW to invalidate\n\t\t* and erase the widget.  This is undocumented behavior.\n\t\t* The commented code below shows what is actually happening\n\t\t* and reminds us that we are relying on this undocumented\n\t\t* behavior.\n\t\t*/\n//\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE;\n//\t\tOS.RedrawWindow (handle, null, 0, flags);\n\t}\n\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, oldProc);\n\tif (index < items.length) error (SWT.ERROR_ITEM_NOT_ADDED);\n}",
        "accuracyTokens" : 0.9975308641975309,
        "accuracyCharacters" : 0.997791519434629
      } ],
      "memberId" : "42a0282a3d4875ce3a2d0c455507943c"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdeselectAll ();\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;\n\tint focusIndex = -1;\n\tfor (int i=length-1; i>=0; --i) {\n\t\tString string = items [i];\n\t\tint index = 0;\n\t\tif (string != null) {\n\t\t\tint localFocus = -1;\n\t\t\twhile ((index = indexOf (string, index)) != -1) {\n\t\t\t\tif (localFocus == -1) localFocus = index;\n\t\t\t\tselect (index, false);\n\t\t\t\tif ((style & SWT.SINGLE) != 0 && isSelected (index)) {\n\t\t\t\t\tshowSelection ();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tif (localFocus != -1) focusIndex = localFocus;\n\t\t}\n\t}\n\tif ((style & SWT.MULTI) != 0) {\n\t\tif (focusIndex >= 0) setFocusIndex (focusIndex);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 41,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.PtListDeleteAllItems (handle);\n\tint[] itemsPtr = new int [items.length];\n\tfor (int i=0; i<itemsPtr.length; i++) {\n\t\tbyte [] buffer = Converter.wcsToMbcs (null, items [i], true);\n\t\tint ptr = OS.malloc (buffer.length);\n\t\tOS.memmove (ptr, buffer, buffer.length);\n\t\titemsPtr [i] = ptr;\n\t}\n\tOS.PtListAddItems (handle, itemsPtr, itemsPtr.length, 0);\n\tfor (int i=0; i<itemsPtr.length; i++) {\n\t\tOS.free (itemsPtr [i]);\n\t}\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "2f8ef6d6d1405000acb93fcb3ea4fe43"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/List.java",
      "methodNumber" : 45,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n\t\tdeselectAll ();\n\t\treturn;\n\t}\n\tif ((style & SWT.MULTI) != 0) deselectAll ();\n\tfor (int i=length-1; i>=0; --i) {\n\t\tint index = 0;\n\t\tString string = items [i];\n\t\tif (string != null) {\n\t\t\twhile ((index = indexOf (string, index)) != -1) {\n\t\t\t\tselect (index);\n\t\t\t\tif ((style & SWT.SINGLE) != 0) return;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t}\n\tif ((style & SWT.SINGLE) != 0) deselectAll ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java",
      "methodNumber" : 72,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdeselectAll ();\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) return;\n\tint focusIndex = -1;\n\tfor (int i=length-1; i>=0; --i) {\n\t\tint index = indexOf (items [i]);\n\t\tif (index != -1) {\n\t\t\tselect (focusIndex = index);\n\t\t}\n\t}\n\tif (focusIndex != -1) setFocusIndex (focusIndex);\n\tshowSelection ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "fd86572b4a7b84fb8287bcacf0d2a5ca58c9eeb9",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java",
      "methodNumber" : 41,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tcheckWidget ();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint length = items.length;\n\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {\n\t\tdeselectAll();\n\t\treturn;\n\t}\n\t\t\n\t/* Select/deselect the first item */\n\tTreeItem item = items [0];\n\tif (item != null) {\n\t\tif (item.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);\n\t\tint hOldItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);\n\t\tint hNewItem = hAnchor = item.handle;\n\t\t\n\t\t/*\n\t\t* Bug in Windows.  When TVM_SELECTITEM is used to select and\n\t\t* scroll an item to be visible and the client area of the tree\n\t\t* is smaller that the size of one item, TVM_SELECTITEM makes\n\t\t* the next item in the tree visible by making it the top item\n\t\t* instead of making the desired item visible.  The fix is to\n\t\t* detect the case when the client area is too small and make\n\t\t* the desired visible item be the top item in the tree.\n\t\t* \n\t\t* Note that TVM_SELECTITEM when called with TVGN_FIRSTVISIBLE\n\t\t* also requires the work around for scrolling.\n\t\t*/\n\t\tboolean fixScroll = checkScroll (hNewItem);\n\t\tif (fixScroll) {\n\t\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);\n\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);\n\t\t}\n\t\tignoreSelect = true;\n\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);\n\t\tignoreSelect = false;\n\t\tif (OS.SendMessage (handle, OS.TVM_GETVISIBLECOUNT, 0, 0) == 0) {\n\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_FIRSTVISIBLE, hNewItem);\n\t\t}\n\t\tif (fixScroll) {\n\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);\n\t\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\n\t\t}\n\t\t\n\t\t/*\n\t\t* Feature in Windows.  When the old and new focused item\n\t\t* are the same, Windows does not check to make sure that\n\t\t* the item is actually selected, not just focused.  The\n\t\t* fix is to force the item to draw selected by setting\n\t\t* the state mask, and to ensure that it is visible.\n\t\t*/\n\t\tif (hOldItem == hNewItem) {\n\t\t\tTVITEM tvItem = new TVITEM ();\n\t\t\ttvItem.mask = OS.TVIF_STATE;\n\t\t\ttvItem.state = OS.TVIS_SELECTED;\n\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;\n\t\t\ttvItem.hItem = hNewItem;\n\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\n\t\t\tshowItem (hNewItem);\n\t\t}\n\t}\n\tif ((style & SWT.SINGLE) != 0) return;\n\n\t/* Select/deselect the rest of the items */\n\tTVITEM tvItem = new TVITEM ();\n\ttvItem.mask = OS.TVIF_STATE;\n\ttvItem.stateMask = OS.TVIS_SELECTED;\n\tint oldProc = OS.GetWindowLong (handle, OS.GWL_WNDPROC);\n\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, TreeProc);\n\tfor (int i=0; i<this.items.length; i++) {\n\t\titem = this.items [i];\n\t\tif (item != null) {\n\t\t\tint index = 0;\n\t\t\twhile (index < length) {\n\t\t\t\tif (items [index] == item) break;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\ttvItem.hItem = item.handle;\n\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);\n\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {\n\t\t\t\tif (index == length) {\n\t\t\t\t\ttvItem.state = 0;\n\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (index != length) {\n\t\t\t\t\ttvItem.state = OS.TVIS_SELECTED;\n\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, oldProc);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    } ],
    "foundMembers" : 10,
    "numberOfRecommendationSets" : 27,
    "precision" : 0.37037037037037035,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.9788627921802864,
    "accuracyCharactersMin" : 0.9749123138712861,
    "patternOriginal" : "\n\t//# match (original, (SWT)) {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tcheckWidget();\n\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);\n\tfor (int i=0; i<items.length; i++) {\n\t\tif (items [i] == null) error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//# }",
    "patternCreationTimeInNanoSec" : 15417885424,
    "patternUseTimeInNanoSec" : 35187348483,
    "accuracyTokensMax" : 0.9788627921802864,
    "accuracyCharactersMax" : 0.9749123138712861
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "86079_2",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "\n\nLRESULT WM_ERASEBKGND (int wParam, int lParam)",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4f0d95964b4788e870d780c728cd8763",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 42,
          "methodNumber2" : 45
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 46,
          "moves" : 0,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "994f370afa6a3db9325028573466b41a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 47,
          "methodNumber2" : 50
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 46,
          "moves" : 0,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end)",
      "methodModified" : "",
      "diff" : "+\tif (OS.gtk_spin_button_get_digits (handle) > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "12c5a42fd4061ef7a4451f757e26b4ff",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e9b2a3f1566e55718bdac644a0b8c42a42baa7cb",
          "commitId2" : "109dd991548420f954abe996a5e2c0884a026ea5",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 47,
          "methodNumber2" : 50
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -2981, 27296, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 50,
          "moves" : 0,
          "inserts" : 50,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "\n\nLRESULT WM_ERASEBKGND (int wParam, int lParam)",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "dispose of items then dispose of columns when disposing the Table and Tree widgetsSee bugs 87997, 87559",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "4f0d95964b4788e870d780c728cd8763",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "085b889af5650eb15e24717fe078a26cb6d8533a",
          "commitId2" : "9c94269eb43e2e67e93d662b8919b206ca18babb",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 42,
          "methodNumber2" : 45
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 46,
          "moves" : 0,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end, Event keyEvent)",
      "methodModified" : "",
      "diff" : "+\tif (digits > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "spinner w/ floats",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "994f370afa6a3db9325028573466b41a",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "9398276ef7890fb963ae6fb4242cd394f40225d4",
          "commitId2" : "f4b153b8cd5fc521d6acd1694cd0ea86f7ec8ee1",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 47,
          "methodNumber2" : 50
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, -20324, -21274, 4017, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 46,
          "moves" : 0,
          "inserts" : 46,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nString verifyText (String string, int start, int end)",
      "methodModified" : "",
      "diff" : "+\tif (OS.gtk_spin_button_get_digits (handle) > 0) {+\t\tString decimalSeparator = getDecimalSeparator ();+\t\tindex = string.indexOf (decimalSeparator);+\t\tif (index != -1) {+\t\t\tstring = string.substring (0, index) + string.substring (index + 1);+\t\t}+\t\tindex = 0;+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "12c5a42fd4061ef7a4451f757e26b4ff",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "e9b2a3f1566e55718bdac644a0b8c42a42baa7cb",
          "commitId2" : "109dd991548420f954abe996a5e2c0884a026ea5",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Spinner.java",
          "methodNumber1" : 47,
          "methodNumber2" : 50
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4023, 4017, 1000, 4063, 4023, 1000, 4070, 0, 2532, 4063, 1000, 4070, -2981, 27296, 4063, 1000, 4070, -18686, 28200, 4023, 1000, 4029, 4017, 1007, 4061, 4027, 1007, 4071, 4061, 1000, 4828, 979, -20136, -27590, 19505, 4068, 1000, 4070, 23568, 6804, 4067, 1000, 4023, 4087, 1000, 4070, 1000, -32246, 4023, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4023, 4077, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 29652, 17993, 4063, 1000, 4070, 23568, 6804, 4023, 1007, 4027, 4061, 1000, 4017, 4027, 1000, 4070, 1531, 10450, 4017, 1000, 4118, 4017, 1000, 4029, 4118, 1007, 4061, 4027, 1007, 4077, 4061, 1000, 4070, -13611, 24593, 4077, 1000, 4137, 4077, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4029, 4023, 1000, 4070, 1531, 10450, 4023, 1000, 4023, 4137, 1000, 4063, 4023, 1000, 4070, -13611, 24593, 4063, 1000, 4070, 8095, 28241, 4063, 1000, 4137, 4023, 1000, 4070, 1531, 10450, 4137, 1000, 4029, 4137, 1007, 4077, 4061, 1000, 4070, 1531, 10450, 4077, 1000, 4029, 4077 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 50,
          "moves" : 0,
          "inserts" : 50,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tif (keyEvent != null) {\n\t\tevent.character = keyEvent.character;\n\t\tevent.keyCode = keyEvent.keyCode;\n\t\tevent.stateMask = keyEvent.stateMask;\n\t}\n\tint index = 0;\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\t\n\t/*\n\t * It is possible (but unlikely), that application\n\t * code could have disposed the widget in the verify\n\t * event.  If this happens, answer null to cancel\n\t * the operation.\n\t */\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 0.7070063694267515,
        "accuracyCharacters" : 0.7505446623093682
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tif (keyEvent != null) {\n\t\tevent.character = keyEvent.character;\n\t\tevent.keyCode = keyEvent.keyCode;\n\t\tevent.stateMask = keyEvent.stateMask;\n\t}\n\tint index = 0;\n\tif (digits > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\t\n\t/*\n\t * It is possible (but unlikely), that application\n\t * code could have disposed the widget in the verify\n\t * event.  If this happens, answer null to cancel\n\t * the operation.\n\t */\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tif (keyEvent != null) {\n\t\tevent.character = keyEvent.character;\n\t\tevent.keyCode = keyEvent.keyCode;\n\t\tevent.stateMask = keyEvent.stateMask;\n\t}\n\tint index = 0;\n\tif (OS.gtk_spin_button_get_digits (handle) > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\t\n\t/*\n\t * It is possible (but unlikely), that application\n\t * code could have disposed the widget in the verify\n\t * event.  If this happens, answer null to cancel\n\t * the operation.\n\t */\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 0.968944099378882,
        "accuracyCharacters" : 0.9663157894736842
      } ],
      "memberId" : "994f370afa6a3db9325028573466b41a"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string.length () == 0 && start == end) return null;\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tint /*long*/ eventPtr = OS.gtk_get_current_event ();\n\tif (eventPtr != 0) {\n\t\tGdkEventKey gdkEvent = new GdkEventKey ();\n\t\tOS.memmove (gdkEvent, eventPtr, GdkEventKey.sizeof);\n\t\tswitch (gdkEvent.type) {\n\t\t\tcase OS.GDK_KEY_PRESS:\n\t\t\t\tsetKeyState (event, gdkEvent);\n\t\t\t\tbreak;\n\t\t}\n\t\tOS.gdk_event_free (eventPtr);\n\t}\n\tint index = 0;\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\n\t/*\n\t * It is possible (but unlikely), that application\n\t * code could have disposed the widget in the verify\n\t * event.  If this happens, answer null to cancel\n\t * the operation.\n\t */\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 0.7512437810945274,
        "accuracyCharacters" : 0.7780612244897959
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string.length () == 0 && start == end) return null;\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tint /*long*/ eventPtr = OS.gtk_get_current_event ();\n\tif (eventPtr != 0) {\n\t\tGdkEventKey gdkEvent = new GdkEventKey ();\n\t\tOS.memmove (gdkEvent, eventPtr, GdkEventKey.sizeof);\n\t\tswitch (gdkEvent.type) {\n\t\t\tcase OS.GDK_KEY_PRESS:\n\t\t\t\tsetKeyState (event, gdkEvent);\n\t\t\t\tbreak;\n\t\t}\n\t\tOS.gdk_event_free (eventPtr);\n\t}\n\tint index = 0;\n\tif (digits > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\n\t/*\n\t * It is possible (but unlikely), that application\n\t * code could have disposed the widget in the verify\n\t * event.  If this happens, answer null to cancel\n\t * the operation.\n\t */\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 0.9751243781094527,
        "accuracyCharacters" : 0.9727891156462585
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (string.length () == 0 && start == end) return null;\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tint /*long*/ eventPtr = OS.gtk_get_current_event ();\n\tif (eventPtr != 0) {\n\t\tGdkEventKey gdkEvent = new GdkEventKey ();\n\t\tOS.memmove (gdkEvent, eventPtr, GdkEventKey.sizeof);\n\t\tswitch (gdkEvent.type) {\n\t\t\tcase OS.GDK_KEY_PRESS:\n\t\t\t\tsetKeyState (event, gdkEvent);\n\t\t\t\tbreak;\n\t\t}\n\t\tOS.gdk_event_free (eventPtr);\n\t}\n\tint index = 0;\n\tif (OS.gtk_spin_button_get_digits (handle) > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\n\t/*\n\t * It is possible (but unlikely), that application\n\t * code could have disposed the widget in the verify\n\t * event.  If this happens, answer null to cancel\n\t * the operation.\n\t */\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "12c5a42fd4061ef7a4451f757e26b4ff"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "085b889af5650eb15e24717fe078a26cb6d8533a",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tif (keyEvent != null) {\n\t\tevent.character = keyEvent.character;\n\t\tevent.keyCode = keyEvent.keyCode;\n\t\tevent.stateMask = keyEvent.stateMask;\n\t}\n\tint index = 0;\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\n\tif (OS.IsDBLocale) {\n\t\tevent.start = mbcsToWcsPos (start);\n\t\tevent.end = mbcsToWcsPos (end);\n\t}\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 0.7386363636363636,
        "accuracyCharacters" : 0.7237635705669482
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tif (keyEvent != null) {\n\t\tevent.character = keyEvent.character;\n\t\tevent.keyCode = keyEvent.keyCode;\n\t\tevent.stateMask = keyEvent.stateMask;\n\t}\n\tint index = 0;\n\tif (digits > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\n\tif (OS.IsDBLocale) {\n\t\tevent.start = mbcsToWcsPos (start);\n\t\tevent.end = mbcsToWcsPos (end);\n\t}\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\tif (keyEvent != null) {\n\t\tevent.character = keyEvent.character;\n\t\tevent.keyCode = keyEvent.keyCode;\n\t\tevent.stateMask = keyEvent.stateMask;\n\t}\n\tint index = 0;\n\tif (OS.gtk_spin_button_get_digits (handle) > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\n\tif (OS.IsDBLocale) {\n\t\tevent.start = mbcsToWcsPos (start);\n\t\tevent.end = mbcsToWcsPos (end);\n\t}\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n}",
        "accuracyTokens" : 0.9722222222222222,
        "accuracyCharacters" : 0.9628339140534262
      } ],
      "memberId" : "4f0d95964b4788e870d780c728cd8763"
    } ],
    "foundMembers" : 3,
    "numberOfRecommendationSets" : 3,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.7322955047192142,
    "accuracyCharactersMin" : 0.7507898191220375,
    "patternOriginal" : "\n\t//# match (original) {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\t//# wildcard stmt(ARES0);\n\tint index = 0;\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\t\n\t\n\t//# wildcard stmt(ARES1);\t\n\t\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tEvent event = new Event ();\n\tevent.text = string;\n\tevent.start = start;\n\tevent.end = end;\n\t//# use (ARES0);\n\tint index = 0;\n\t//# choice {\n\t//# case {\n\tif (digits > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\t//# }\n\t//# case {\n\tif (OS.gtk_spin_button_get_digits (handle) > 0) {\n\t\tString decimalSeparator = getDecimalSeparator ();\n\t\tindex = string.indexOf (decimalSeparator);\n\t\tif (index != -1) {\n\t\t\tstring = string.substring (0, index) + string.substring (index + 1);\n\t\t}\n\t\tindex = 0;\n\t}\n\t//# }\n\t//# }\n\twhile (index < string.length ()) {\n\t\tif (!Character.isDigit (string.charAt (index))) break;\n\t\tindex++;\n\t}\n\tevent.doit = index == string.length ();\t\n\t\n\t//# use (ARES1);\t\n\t\n\tsendEvent (SWT.Verify, event);\n\tif (!event.doit || isDisposed ()) return null;\n\treturn event.text;\n\t//# }",
    "patternCreationTimeInNanoSec" : 216410316,
    "patternUseTimeInNanoSec" : 15528440386,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 1.0
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "95116",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "check for null, -1",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "bd0abdddbcf77c4a01d95aeb1645887f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
          "commitId2" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2df091ca67c7ea781d124da39cc5e370",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
          "commitId2" : "dfb5b97348dcb47d15a018bd61bd8926d1f2b725",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "be020405db6f10ef43a3f6a2e09e6fb5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "db8f2540c3006f1d6270ba3a897a8900f04bd0ad",
          "commitId2" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2e9fb8cef5eb2f04622e423de9a387cd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "db8f2540c3006f1d6270ba3a897a8900f04bd0ad",
          "commitId2" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "5e3b2715b021a2217a88cfec0df91d75",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "commitId2" : "c9a1a51b1a6fc91cbd073d165d9eedfc6dd71a4d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "check for null, -1",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "bd0abdddbcf77c4a01d95aeb1645887f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
          "commitId2" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int /*long*/ handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2df091ca67c7ea781d124da39cc5e370",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "1d769ea1b1176c74ff50ae53f326ed416ae43a78",
          "commitId2" : "dfb5b97348dcb47d15a018bd61bd8926d1f2b725",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "be020405db6f10ef43a3f6a2e09e6fb5",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "db8f2540c3006f1d6270ba3a897a8900f04bd0ad",
          "commitId2" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "*** empty log message ***",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2e9fb8cef5eb2f04622e423de9a387cd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "db8f2540c3006f1d6270ba3a897a8900f04bd0ad",
          "commitId2" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "methodModified" : "\n\nShell (Display display, Shell parent, int style, int handle)",
      "diff" : "+\tif (parent != null && parent.isDisposed ()) {+\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t+\t}",
      "commitMsg" : "95116",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "5e3b2715b021a2217a88cfec0df91d75",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "73a5742f06398093d2dddcaa322139e840c55a5d",
          "commitId2" : "c9a1a51b1a6fc91cbd073d165d9eedfc6dd71a4d",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java",
          "methodNumber1" : 4,
          "methodNumber2" : 4
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4070, -15189, 2218, 4017, 1000, 4120, 4017, 1000, 4023, 4018, 1000, 4063, 4023, 1000, 4070, -15189, 2218, 4063, 1000, 4070, -7753, 17775, 4063, 1007, 4061, 4027, 1007, 4023, 4061, 1000, 4070, 1476, -11768, 4023, 1000, 4063, 4023, 1000, 4070, 1, 17008, 4063, 1000, 4070, 29746, 14748, 4063 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 15,
          "moves" : 0,
          "inserts" : 15,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper ();\n\tif (display == null) display = Display.getCurrent ();\n\tif (display == null) display = Display.getDefault ();\n\tif (!display.isValidThread ()) {\n\t\terror (SWT.ERROR_THREAD_INVALID_ACCESS);\n\t}\n\tif (parent != null && parent.isDisposed ()) {\n\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t\n\t}\n\tthis.style = checkStyle (style);\n\tthis.parent = parent;\n\tthis.display = display;\n\tthis.handle = handle;\n\tcreateWidget (0);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "2e9fb8cef5eb2f04622e423de9a387cd"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper ();\n\tcheckSubclass ();\n\tif (display == null) display = Display.getCurrent ();\n\tif (display == null) display = Display.getDefault ();\n\tif (!display.isValidThread ()) {\n\t\terror (SWT.ERROR_THREAD_INVALID_ACCESS);\n\t}\n\tif (parent != null && parent.isDisposed ()) {\n\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t\n\t}\n\tthis.style = checkStyle (style);\n\tthis.parent = parent;\n\tthis.display = display;\n\tthis.handle = handle;\n\tcreateWidget (0);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "be020405db6f10ef43a3f6a2e09e6fb5"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper ();\n\tcheckSubclass ();\n\tif (display == null) display = Display.getCurrent ();\n\tif (display == null) display = Display.getDefault ();\n\tif (!display.isValidThread ()) {\n\t\terror (SWT.ERROR_THREAD_INVALID_ACCESS);\n\t}\n\tif (parent != null && parent.isDisposed ()) {\n\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t\n\t}\n\tthis.style = checkStyle (style);\n\tthis.parent = parent;\n\tthis.display = display;\n\tthis.handle = handle;\n\tcreateWidget (0);\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "2df091ca67c7ea781d124da39cc5e370"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper ();\n\tcheckSubclass ();\n\tif (display == null) display = Display.getCurrent ();\n\tif (display == null) display = Display.getDefault ();\n\tif (!display.isValidThread ()) {\n\t\terror (SWT.ERROR_THREAD_INVALID_ACCESS);\n\t}\n\tif (parent != null && parent.isDisposed ()) {\n\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t\n\t}\n\tthis.style = checkStyle (style);\n\tthis.parent = parent;\n\tthis.display = display;\n\tthis.handle = handle;\n\tcreateWidget ();\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "bd0abdddbcf77c4a01d95aeb1645887f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "4195e48827d53562edb689aa69e4dc96f3b3e6d5",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tsuper ();\n\tcheckSubclass ();\n\tif (display == null) display = Display.getCurrent ();\n\tif (display == null) display = Display.getDefault ();\n\tif (!display.isValidThread ()) {\n\t\terror (SWT.ERROR_THREAD_INVALID_ACCESS);\n\t}\n\tif (parent != null && parent.isDisposed ()) {\n\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t\n\t}\n\tthis.style = checkStyle (style);\n\tthis.parent = parent;\n\tthis.display = display;\n\tthis.handle = handle;\n\tcreateWidget ();\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      } ],
      "memberId" : "5e3b2715b021a2217a88cfec0df91d75"
    } ],
    "foundMembers" : 5,
    "numberOfRecommendationSets" : 5,
    "precision" : 1.0,
    "recall" : 1.0,
    "accuracyTokensMin" : 1.0,
    "accuracyCharactersMin" : 1.0,
    "patternOriginal" : "\n\t//# match (original) {\n\tsuper ();\n\t//# wildcard stmt(ARES0);\n\tif (display == null) display = Display.getCurrent ();\n\tif (display == null) display = Display.getDefault ();\n\tif (!display.isValidThread ()) {\n\t\terror (SWT.ERROR_THREAD_INVALID_ACCESS);\n\t}\n\tthis.style = checkStyle (style);\n\tthis.parent = parent;\n\tthis.display = display;\n\tthis.handle = handle;\n\t//# wildcard expr(ARES1, 0, 1)\n\tcreateWidget (0);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tsuper ();\n\t//# use (ARES0);\n\tif (display == null) display = Display.getCurrent ();\n\tif (display == null) display = Display.getDefault ();\n\tif (!display.isValidThread ()) {\n\t\terror (SWT.ERROR_THREAD_INVALID_ACCESS);\n\t}\n\tif (parent != null && parent.isDisposed ()) {\n\t\terror (SWT.ERROR_INVALID_ARGUMENT);\t\n\t}\n\tthis.style = checkStyle (style);\n\tthis.parent = parent;\n\tthis.display = display;\n\tthis.handle = handle;\n\t//# use (ARES1, 0, 1)\n\tcreateWidget (0);\n\t//# }",
    "patternCreationTimeInNanoSec" : 135111740,
    "patternUseTimeInNanoSec" : 39569854568,
    "accuracyTokensMax" : 1.0,
    "accuracyCharactersMax" : 1.0
  }, {
    "@class" : "de.fau.cs.inf2.cas.ares.io.RecommendationResult",
    "name" : "98198",
    "allMembers" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing for all\n * <em>non-text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setTextAntialias()\n * \n * @since 3.1\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * Sets the receiver's anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing for all\n * <em>non-text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setTextAntialias()\n * \n * @since 3.1\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.gdipGraphics == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "1594c47d340c9ce46b1f3707cdf3d9b7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 83,
          "methodNumber2" : 83
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the receiver's interpolation setting to the parameter, which\n * must be one of <code>SWT.DEFAULT</code>, <code>SWT.NONE</code>, \n * <code>SWT.LOW</code> or <code>SWT.HIGH</code>.\n *\n * @param interpolation the new interpolation setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.DEFAULT</code>, \n *                                 <code>SWT.NONE</code>, <code>SWT.LOW</code> or <code>SWT.HIGH</code>\n * </ul> \n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @since 3.1\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n\n/** \n * Sets the receiver's interpolation setting to the parameter, which\n * must be one of <code>SWT.DEFAULT</code>, <code>SWT.NONE</code>, \n * <code>SWT.LOW</code> or <code>SWT.HIGH</code>.\n *\n * @param interpolation the new interpolation setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.DEFAULT</code>, \n *                                 <code>SWT.NONE</code>, <code>SWT.LOW</code> or <code>SWT.HIGH</code>\n * </ul> \n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @since 3.1\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.gdipGraphics == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d575c0201ab41f98613eb841117799bd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 96,
          "methodNumber2" : 96
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2c712e6c916f981c4c3f91c6fc8318d4",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 75,
          "methodNumber2" : 75
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.cairo == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a09c6f29d1ae78bf6f362270ab8c5006",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 91,
          "methodNumber2" : 91
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d8a2ba24403db54b04ecc9f689655250",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 78,
          "methodNumber2" : 78
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.cairo == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "49885cfc0e72d45dedfd9565cdedc55f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 95,
          "methodNumber2" : 95
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias()\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias()\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.gdipGraphics == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8a7d1655e9cb5f1b42f5ca371de1769f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 104,
          "methodNumber2" : 104
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "59bfb550d3377219b9363ff6be8faf41",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 103,
          "methodNumber2" : 103
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "3138e6f9a55300d28a2c49e4243b61f2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 98,
          "methodNumber2" : 98
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "diff" : "+\tif (data.cairo == 0 && transform == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a942be0836709c71c5fad636ffc15bba",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 104,
          "methodNumber2" : 104
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 16062, 27500, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0fba188f6128f7bd8f6fd684dc2bf13e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 77,
          "methodNumber2" : 77
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "diff" : "+\tif (data.cairo == 0 && transform == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "674189c6a33feeef0ccc77ff4bdabb0e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 99,
          "methodNumber2" : 99
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 16062, 27500, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "87130bd669e96b2a276ee2680a9a6796",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 82,
          "methodNumber2" : 82
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "250098d8c1699e8fea54ff002bbc8b38",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 94,
          "methodNumber2" : 94
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e82be26b5083599db67cf513c561fdf0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 90,
          "methodNumber2" : 90
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    } ],
    "inputs" : [ {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing for all\n * <em>non-text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setTextAntialias()\n * \n * @since 3.1\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * Sets the receiver's anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing for all\n * <em>non-text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setTextAntialias()\n * \n * @since 3.1\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.gdipGraphics == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "1594c47d340c9ce46b1f3707cdf3d9b7",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 83,
          "methodNumber2" : 83
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/** \n * Sets the receiver's interpolation setting to the parameter, which\n * must be one of <code>SWT.DEFAULT</code>, <code>SWT.NONE</code>, \n * <code>SWT.LOW</code> or <code>SWT.HIGH</code>.\n *\n * @param interpolation the new interpolation setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.DEFAULT</code>, \n *                                 <code>SWT.NONE</code>, <code>SWT.LOW</code> or <code>SWT.HIGH</code>\n * </ul> \n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @since 3.1\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n\n/** \n * Sets the receiver's interpolation setting to the parameter, which\n * must be one of <code>SWT.DEFAULT</code>, <code>SWT.NONE</code>, \n * <code>SWT.LOW</code> or <code>SWT.HIGH</code>.\n *\n * @param interpolation the new interpolation setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the rule is not one of <code>SWT.DEFAULT</code>, \n *                                 <code>SWT.NONE</code>, <code>SWT.LOW</code> or <code>SWT.HIGH</code>\n * </ul> \n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @since 3.1\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.gdipGraphics == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d575c0201ab41f98613eb841117799bd",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 96,
          "methodNumber2" : 96
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "2c712e6c916f981c4c3f91c6fc8318d4",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 75,
          "methodNumber2" : 75
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.cairo == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a09c6f29d1ae78bf6f362270ab8c5006",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 91,
          "methodNumber2" : 91
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "d8a2ba24403db54b04ecc9f689655250",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 78,
          "methodNumber2" : 78
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setInterpolation(int interpolation)",
      "diff" : "+\tif (data.cairo == 0 && interpolation == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "49885cfc0e72d45dedfd9565cdedc55f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 95,
          "methodNumber2" : 95
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 8534, -18012, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias()\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * Sets the receiver's text anti-aliasing value to the parameter, \n * which must be one of <code>SWT.DEFAULT</code>, <code>SWT.OFF</code>\n * or <code>SWT.ON</code>. Note that this controls anti-aliasing only\n * for all <em>text drawing</em> operations.\n *\n * @param antialias the anti-aliasing setting\n *\n * @exception IllegalArgumentException <ul>\n *    <li>ERROR_INVALID_ARGUMENT - if the parameter is not one of <code>SWT.DEFAULT</code>,\n *                                 <code>SWT.OFF</code> or <code>SWT.ON</code></li>\n * </ul>\n * @exception SWTException <ul>\n *    <li>ERROR_GRAPHIC_DISPOSED - if the receiver has been disposed</li>\n * </ul>\n * \n * @see #setAntialias()\n * \n * @since 3.1\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.gdipGraphics == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "98286",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "8a7d1655e9cb5f1b42f5ca371de1769f",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "5cbbc879318e05f5113c60527173d0db03d6a035",
          "commitId2" : "58b7822b4b9e52dd0ae940a321a7dff625afbc97",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 104,
          "methodNumber2" : 104
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 23482, 24943, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "59bfb550d3377219b9363ff6be8faf41",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 103,
          "methodNumber2" : 103
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTextAntialias(int antialias)",
      "diff" : "+\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "3138e6f9a55300d28a2c49e4243b61f2",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 98,
          "methodNumber2" : 98
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -32328, -24530, 4017, 1000, 4063, 4017, 1000, 4070, 1, 17008, 4063, 1000, 4070, -31009, 25121, 4063, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 13,
          "moves" : 0,
          "inserts" : 13,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 6
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "diff" : "+\tif (data.cairo == 0 && transform == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "a942be0836709c71c5fad636ffc15bba",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 104,
          "methodNumber2" : 104
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 16062, 27500, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 10
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "0fba188f6128f7bd8f6fd684dc2bf13e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 77,
          "methodNumber2" : 77
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setTransform(Transform transform)",
      "diff" : "+\tif (data.cairo == 0 && transform == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "674189c6a33feeef0ccc77ff4bdabb0e",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 99,
          "methodNumber2" : 99
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, 16062, 27500, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 12
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setBackgroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "87130bd669e96b2a276ee2680a9a6796",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 82,
          "methodNumber2" : 82
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 7
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "250098d8c1699e8fea54ff002bbc8b38",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 94,
          "methodNumber2" : 94
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    }, {
      "@class" : "de.fau.cs.inf2.cas.common.io.ReadableEncodedScript",
      "methodOriginal" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "methodModified" : "\n\n/**\n * WARNING API STILL UNDER CONSTRUCTION AND SUBJECT TO CHANGE\n */\npublic void setForegroundPattern(Pattern pattern)",
      "diff" : "+\tif (data.cairo == 0 && pattern == null) return;",
      "commitMsg" : "97981",
      "script" : {
        "@class" : "de.fau.cs.inf2.cas.common.io.EncodedScript",
        "pair" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.CommitPairIdentifier",
          "id" : "e82be26b5083599db67cf513c561fdf0",
          "idx" : -1,
          "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
          "commitId1" : "495c0a18b56ea908339395b8c4aa4efe276bbb2e",
          "commitId2" : "8a47a76c81edb5c63edf206007ad3aea8f3ed163",
          "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
          "methodNumber1" : 90,
          "methodNumber2" : 90
        },
        "pattern" : [ 1007, 4027, 4061, 1000, 4018, 4027, 1000, 4017, 4018, 1000, 4063, 4017, 1000, 4070, 46, -4182, 4063, 1000, 4070, 1440, -14520, 4063, 1000, 4029, 4017, 1000, 4017, 4018, 1000, 4070, -12072, -5232, 4017, 1000, 4120, 4017, 1007, 4047, 4027 ],
        "operations" : {
          "@class" : "de.fau.cs.inf2.cas.common.io.EditOperationCounts",
          "all" : 11,
          "moves" : 0,
          "inserts" : 11,
          "deletes" : 0,
          "updates" : 0,
          "aligns" : 0
        },
        "treeSize" : 9
      }
    } ],
    "recommendationSets" : [ {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint width = OS.CGImageGetWidth(handle);\n\tint height = OS.CGImageGetHeight(handle);\n\tint bpc = OS.CGImageGetBitsPerComponent(handle);\n\tint bpr = OS.CGImageGetBytesPerRow(handle);\n\tint colorspace = OS.CGImageGetColorSpace(handle);\n\tint context = OS.CGBitmapContextCreate(this.data, width, height, bpc, bpr, colorspace, OS.kCGImageAlphaNoneSkipFirst);\n\tif (context == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.CGContextScaleCTM(context, 1, -1);\n\tOS.CGContextTranslateCTM(context, 0, -height);\n\tif (data != null) {\n\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\t\tif ((data.style & mask) == 0) {\n\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t\t}\n\t\tdata.device = device;\n\t\tdata.background = device.COLOR_WHITE.handle;\n\t\tdata.foreground = device.COLOR_BLACK.handle;\n\t\tdata.font = device.systemFont;\n\t\tdata.image = this;\n\t}\n\treturn context;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint width = OS.CGImageGetWidth(handle);\n\tint height = OS.CGImageGetHeight(handle);\n\tint bpc = OS.CGImageGetBitsPerComponent(handle);\n\tint bpr = OS.CGImageGetBytesPerRow(handle);\n\tint colorspace = OS.CGImageGetColorSpace(handle);\n\tint context = OS.CGBitmapContextCreate(this.data, width, height, bpc, bpr, colorspace, OS.kCGImageAlphaNoneSkipFirst);\n\tif (context == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.CGContextScaleCTM(context, 1, -1);\n\tOS.CGContextTranslateCTM(context, 0, -height);\n\tif (data != null) {\n\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\t\tif ((data.style & mask) == 0) {\n\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t\t}\n\t\tdata.device = device;\n\t\tdata.background = device.COLOR_WHITE.handle;\n\t\tdata.foreground = device.COLOR_BLACK.handle;\n\t\tdata.font = device.systemFont;\n\t\tdata.image = this;\n\t}\n\treturn context;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint width = OS.CGImageGetWidth(handle);\n\tint height = OS.CGImageGetHeight(handle);\n\tint bpc = OS.CGImageGetBitsPerComponent(handle);\n\tint bpr = OS.CGImageGetBytesPerRow(handle);\n\tint colorspace = OS.CGImageGetColorSpace(handle);\n\tint context = OS.CGBitmapContextCreate(this.data, width, height, bpc, bpr, colorspace, OS.kCGImageAlphaNoneSkipFirst);\n\tif (context == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.CGContextScaleCTM(context, 1, -1);\n\tOS.CGContextTranslateCTM(context, 0, -height);\n\tif (data != null) {\n\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\t\tif ((data.style & mask) == 0) {\n\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t\t}\n\t\tdata.device = device;\n\t\tdata.background = device.COLOR_WHITE.handle;\n\t\tdata.foreground = device.COLOR_BLACK.handle;\n\t\tdata.font = device.systemFont;\n\t\tdata.image = this;\n\t}\n\treturn context;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t/*\n\t* Create a new GC that can draw into the image.\n\t* Only supported for bitmaps.\n\t*/\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tPhImage_t phImage = new PhImage_t();\n\tOS.memmove(phImage, handle, PhImage_t.sizeof);\n\tPhDim_t dim = new PhDim_t();\n\tdim.w = phImage.size_w;\n\tdim.h = phImage.size_h;\n\tPhPoint_t trans = new PhPoint_t();\n\tint pmMC = OS.PmMemCreateMC(handle, dim, trans);\n\tif (pmMC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\tif ((data.style & mask) == 0) {\n\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t}\n\n\tdata.device = device;\n\tdata.image = this;\n\treturn pmMC;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t/*\n\t* Create a new GC that can draw into the image.\n\t* Only supported for bitmaps.\n\t*/\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tPhImage_t phImage = new PhImage_t();\n\tOS.memmove(phImage, handle, PhImage_t.sizeof);\n\tPhDim_t dim = new PhDim_t();\n\tdim.w = phImage.size_w;\n\tdim.h = phImage.size_h;\n\tPhPoint_t trans = new PhPoint_t();\n\tint pmMC = OS.PmMemCreateMC(handle, dim, trans);\n\tif (pmMC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\tif ((data.style & mask) == 0) {\n\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t}\n\n\tdata.device = device;\n\tdata.image = this;\n\treturn pmMC;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t/*\n\t* Create a new GC that can draw into the image.\n\t* Only supported for bitmaps.\n\t*/\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\n\tPhImage_t phImage = new PhImage_t();\n\tOS.memmove(phImage, handle, PhImage_t.sizeof);\n\tPhDim_t dim = new PhDim_t();\n\tdim.w = phImage.size_w;\n\tdim.h = phImage.size_h;\n\tPhPoint_t trans = new PhPoint_t();\n\tint pmMC = OS.PmMemCreateMC(handle, dim, trans);\n\tif (pmMC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\tif ((data.style & mask) == 0) {\n\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t}\n\n\tdata.device = device;\n\tdata.image = this;\n\treturn pmMC;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t/*\n\t* Create a new GC that can draw into the image.\n\t* Only supported for bitmaps.\n\t*/\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\t/* Create a compatible HDC for the device */\n\tint hDC = device.internal_new_GC(null);\n\tint imageDC = OS.CreateCompatibleDC(hDC);\n\tdevice.internal_dispose_GC(hDC, null);\n\tif (imageDC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\n\tif (data != null) {\n\t\t/* Set the GCData fields */\n\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\t\tif ((data.style & mask) != 0) {\n\t\t\tdata.layout = (data.style & SWT.RIGHT_TO_LEFT) != 0 ? OS.LAYOUT_RTL : 0;\n\t\t} else {\n\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t\t}\n\t\tdata.device = device;\n\t\tdata.image = this;\n\t\tdata.hFont = device.systemFont;\n\t}\n\treturn imageDC;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t/*\n\t* Create a new GC that can draw into the image.\n\t* Only supported for bitmaps.\n\t*/\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\t/* Create a compatible HDC for the device */\n\tint hDC = device.internal_new_GC(null);\n\tint imageDC = OS.CreateCompatibleDC(hDC);\n\tdevice.internal_dispose_GC(hDC, null);\n\tif (imageDC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\n\tif (data != null) {\n\t\t/* Set the GCData fields */\n\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\t\tif ((data.style & mask) != 0) {\n\t\t\tdata.layout = (data.style & SWT.RIGHT_TO_LEFT) != 0 ? OS.LAYOUT_RTL : 0;\n\t\t} else {\n\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t\t}\n\t\tdata.device = device;\n\t\tdata.image = this;\n\t\tdata.hFont = device.systemFont;\n\t}\n\treturn imageDC;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t/*\n\t* Create a new GC that can draw into the image.\n\t* Only supported for bitmaps.\n\t*/\n\tif (type != SWT.BITMAP || memGC != null) {\n\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t\n\t/* Create a compatible HDC for the device */\n\tint hDC = device.internal_new_GC(null);\n\tint imageDC = OS.CreateCompatibleDC(hDC);\n\tdevice.internal_dispose_GC(hDC, null);\n\tif (imageDC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\n\tif (data != null) {\n\t\t/* Set the GCData fields */\n\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;\n\t\tif ((data.style & mask) != 0) {\n\t\t\tdata.layout = (data.style & SWT.RIGHT_TO_LEFT) != 0 ? OS.LAYOUT_RTL : 0;\n\t\t} else {\n\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;\n\t\t}\n\t\tdata.device = device;\n\t\tdata.image = this;\n\t\tdata.hFont = device.systemFont;\n\t}\n\treturn imageDC;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.control != 0) {\n\t\tint[] offscreen = new int[1];\n\t\tOS.HIViewCreateOffscreenImage(data.control, 0, null, offscreen);\n\t\tcopyArea(image, x, y, offscreen[0]);\n\t\tif (offscreen[0] != 0) OS.CGImageRelease(offscreen[0]);\n\t} else if (data.image != null) {\n\t\tcopyArea(image, x, y, data.image.handle);\n\t} else if (data.window != 0) {\n\t\tint imageHandle = image.handle;\n\t\tCGRect rect = new CGRect();\n\t\trect.x = x;\n\t\trect.y = y;\n\t\trect.width = OS.CGImageGetWidth(imageHandle);\n\t\trect.height = OS.CGImageGetHeight(imageHandle);\n\t\tint[] displays = new int[16];\n\t\tint[] count = new int[1];\n\t\tif (OS.CGGetDisplaysWithRect(rect, displays.length, displays, count) != 0) return;\n\t\tfor (int i = 0; i < count[0]; i++) {\n\t\t\tint display = displays[i];\n\t\t\tint address = OS.CGDisplayBaseAddress(display);\n\t\t\tif (address != 0) {\n\t\t\t\tint width = OS.CGDisplayPixelsWide(display);\n\t\t\t\tint height = OS.CGDisplayPixelsHigh(display);\n\t\t\t\tint bpr = OS.CGDisplayBytesPerRow(display);\n\t\t\t\tint bpp = OS.CGDisplayBitsPerPixel(display);\n\t\t\t\tint bps = OS.CGDisplayBitsPerSample(display);\n\t\t\t\tint provider = OS.CGDataProviderCreateWithData(0, address, bpr * height, 0);\n\t\t\t\tint srcImage = OS.CGImageCreate(width, height, bps, bpp, bpr, data.device.colorspace, OS.kCGImageAlphaNoneSkipFirst, provider, null, true, 0);\n\t\t\t\tOS.CGDataProviderRelease(provider);\n\t\t\t\tcopyArea(image, x, y, srcImage);\n\t\t\t\tif (srcImage != 0) OS.CGImageRelease(srcImage);\n\t\t\t}\n\t\t}\n\t}\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.control != 0) {\n\t\tint[] offscreen = new int[1];\n\t\tOS.HIViewCreateOffscreenImage(data.control, 0, null, offscreen);\n\t\tcopyArea(image, x, y, offscreen[0]);\n\t\tif (offscreen[0] != 0) OS.CGImageRelease(offscreen[0]);\n\t} else if (data.image != null) {\n\t\tcopyArea(image, x, y, data.image.handle);\n\t} else if (data.window != 0) {\n\t\tint imageHandle = image.handle;\n\t\tCGRect rect = new CGRect();\n\t\trect.x = x;\n\t\trect.y = y;\n\t\trect.width = OS.CGImageGetWidth(imageHandle);\n\t\trect.height = OS.CGImageGetHeight(imageHandle);\n\t\tint[] displays = new int[16];\n\t\tint[] count = new int[1];\n\t\tif (OS.CGGetDisplaysWithRect(rect, displays.length, displays, count) != 0) return;\n\t\tfor (int i = 0; i < count[0]; i++) {\n\t\t\tint display = displays[i];\n\t\t\tint address = OS.CGDisplayBaseAddress(display);\n\t\t\tif (address != 0) {\n\t\t\t\tint width = OS.CGDisplayPixelsWide(display);\n\t\t\t\tint height = OS.CGDisplayPixelsHigh(display);\n\t\t\t\tint bpr = OS.CGDisplayBytesPerRow(display);\n\t\t\t\tint bpp = OS.CGDisplayBitsPerPixel(display);\n\t\t\t\tint bps = OS.CGDisplayBitsPerSample(display);\n\t\t\t\tint provider = OS.CGDataProviderCreateWithData(0, address, bpr * height, 0);\n\t\t\t\tint srcImage = OS.CGImageCreate(width, height, bps, bpp, bpr, data.device.colorspace, OS.kCGImageAlphaNoneSkipFirst, provider, null, true, 0);\n\t\t\t\tOS.CGDataProviderRelease(provider);\n\t\t\t\tcopyArea(image, x, y, srcImage);\n\t\t\t\tif (srcImage != 0) OS.CGImageRelease(srcImage);\n\t\t\t}\n\t\t}\n\t}\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.control != 0) {\n\t\tint[] offscreen = new int[1];\n\t\tOS.HIViewCreateOffscreenImage(data.control, 0, null, offscreen);\n\t\tcopyArea(image, x, y, offscreen[0]);\n\t\tif (offscreen[0] != 0) OS.CGImageRelease(offscreen[0]);\n\t} else if (data.image != null) {\n\t\tcopyArea(image, x, y, data.image.handle);\n\t} else if (data.window != 0) {\n\t\tint imageHandle = image.handle;\n\t\tCGRect rect = new CGRect();\n\t\trect.x = x;\n\t\trect.y = y;\n\t\trect.width = OS.CGImageGetWidth(imageHandle);\n\t\trect.height = OS.CGImageGetHeight(imageHandle);\n\t\tint[] displays = new int[16];\n\t\tint[] count = new int[1];\n\t\tif (OS.CGGetDisplaysWithRect(rect, displays.length, displays, count) != 0) return;\n\t\tfor (int i = 0; i < count[0]; i++) {\n\t\t\tint display = displays[i];\n\t\t\tint address = OS.CGDisplayBaseAddress(display);\n\t\t\tif (address != 0) {\n\t\t\t\tint width = OS.CGDisplayPixelsWide(display);\n\t\t\t\tint height = OS.CGDisplayPixelsHigh(display);\n\t\t\t\tint bpr = OS.CGDisplayBytesPerRow(display);\n\t\t\t\tint bpp = OS.CGDisplayBitsPerPixel(display);\n\t\t\t\tint bps = OS.CGDisplayBitsPerSample(display);\n\t\t\t\tint provider = OS.CGDataProviderCreateWithData(0, address, bpr * height, 0);\n\t\t\t\tint srcImage = OS.CGImageCreate(width, height, bps, bpp, bpr, data.device.colorspace, OS.kCGImageAlphaNoneSkipFirst, provider, null, true, 0);\n\t\t\t\tOS.CGDataProviderRelease(provider);\n\t\t\t\tcopyArea(image, x, y, srcImage);\n\t\t\t\tif (srcImage != 0) OS.CGImageRelease(srcImage);\n\t\t\t}\n\t\t}\n\t}\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tif (data.image != null) {\n \t\tOS.CGContextSaveGState(handle);\n \t\tOS.CGContextScaleCTM(handle, 1, -1);\n \t\tOS.CGContextTranslateCTM(handle, 0, -(height + 2 * destY));\n \t\tCGRect rect = new CGRect();\n \t\trect.x = destX;\n \t\trect.y = destY;\n \t\trect.width = width;\n\t\trect.height = height;\n\t\t//NOT DONE - transparency\n \t\tOS.CGContextDrawImage(handle, rect, data.image.handle);\n \t\tOS.CGContextRestoreGState(handle);\n \t\treturn;\n\t}\n\tif (data.control != 0) {\n\t\tint port = data.port;\n\t\tint window = OS.GetControlOwner(data.control);\n\t\tif (port == 0) port = OS.GetWindowPort(window);\n\n\t\t/* Calculate src and dest rectangles/regions */\n\t\tRect rect = new Rect();\n\t\tOS.GetControlBounds(data.control, rect);\t\t\n\t\tRect srcRect = new Rect();\n\t\tint left = rect.left + srcX;\n\t\tint top = rect.top + srcY;\n\t\tOS.SetRect(srcRect, (short)left, (short)top, (short)(left + width), (short)(top + height));\n\t\tint srcRgn = OS.NewRgn();\n\t\tOS.RectRgn(srcRgn, srcRect);\t\t\n\t\tOS.SectRect(rect, srcRect, srcRect);\n\t\tRect destRect = new Rect ();\n\t\tOS.SetRect(destRect, srcRect.left, srcRect.top, srcRect.right, srcRect.bottom);\n\t\tOS.OffsetRect(destRect, (short)deltaX, (short)deltaY);\n\t\tint destRgn = OS.NewRgn();\n\t\tOS.RectRgn(destRgn, destRect);\n\t\t\n\t\t/* Copy bits with appropriated clipping region */\n\t\tif (!OS.EmptyRect(srcRect)) {\n\t\t\tif (data.visibleRgn == 0 || OS.RectInRgn(srcRect, data.visibleRgn)) {\n\t\t\t\tint clipRgn = data.visibleRgn;\n\t\t\t\tif (data.clipRgn != 0) {\n\t\t\t\t\tclipRgn = OS.NewRgn();\n\t\t\t\t\tOS.SectRgn(data.clipRgn, data.visibleRgn, clipRgn);\n\t\t\t\t}\n\t\n\t\t\t\t/*\n\t\t\t\t* Feature in the Macintosh.  ScrollRect() only copies bits\n\t\t\t\t* that are inside the specified rectangle.  This means that\n\t\t\t\t* it is not possible to copy non overlaping bits without\n\t\t\t\t* copying the bits in between the source and destination\n\t\t\t\t* rectangles.  The fix is to check if the source and\n\t\t\t\t* destination rectangles are disjoint and use CopyBits()\n\t\t\t\t* instead.\n\t\t\t\t*/\n\t\t\t\tif (!OS.EmptyRgn(clipRgn)) {\n\t\t\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\t\t\t\tif (!disjoint && (deltaX == 0 || deltaY == 0)) {\n\t\t\t\t\t\tint[] currentPort = new int[1];\n\t\t\t\t\t\tOS.GetPort(currentPort);\n\t\t\t\t\t\tOS.SetPort(port);\n\t\t\t\t\t\tint oldClip = OS.NewRgn();\n\t\t\t\t\t\tOS.GetClip(oldClip);\n\t\t\t\t\t\tOS.SetClip(clipRgn);\n\t\t\t\t\t\tOS.UnionRect(srcRect, destRect, rect);\n\t\t\t\t\t\tOS.ScrollRect(rect, (short)deltaX, (short)deltaY, 0);\n\t\t\t\t\t\tOS.SetClip(oldClip);\n\t\t\t\t\t\tOS.DisposeRgn(oldClip);\n\t\t\t\t\t\tOS.SetPort(currentPort[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint portBitMap = OS.GetPortBitMapForCopyBits (port);\n\t\t\t\t\t\tOS.CopyBits(portBitMap, portBitMap, srcRect, destRect, (short)OS.srcCopy, clipRgn);\n\t\t\t\t\t\tOS.QDFlushPortBuffer(port, destRgn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (clipRgn != data.visibleRgn) OS.DisposeRgn(clipRgn);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Invalidate src and obscured areas */\n\t\tif (paint) {\n\t\t\tint invalRgn = OS.NewRgn();\n\t\t\tOS.DiffRgn(srcRgn, data.visibleRgn, invalRgn);\n\t\t\tOS.OffsetRgn(invalRgn, (short)deltaX, (short)deltaY);\n\t\t\tOS.DiffRgn(srcRgn, destRgn, srcRgn);\n\t\t\tOS.UnionRgn(srcRgn, invalRgn, invalRgn);\n\t\t\tOS.SectRgn(data.visibleRgn, invalRgn, invalRgn);\n\t\t\tOS.InvalWindowRgn(window, invalRgn);\n\t\t\tOS.DisposeRgn(invalRgn);\n\t\t}\n\t\t\n\t\t/* Dispose src and dest regions */\n\t\tOS.DisposeRgn(destRgn);\n\t\tOS.DisposeRgn(srcRgn);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tif (data.image != null) {\n \t\tOS.CGContextSaveGState(handle);\n \t\tOS.CGContextScaleCTM(handle, 1, -1);\n \t\tOS.CGContextTranslateCTM(handle, 0, -(height + 2 * destY));\n \t\tCGRect rect = new CGRect();\n \t\trect.x = destX;\n \t\trect.y = destY;\n \t\trect.width = width;\n\t\trect.height = height;\n\t\t//NOT DONE - transparency\n \t\tOS.CGContextDrawImage(handle, rect, data.image.handle);\n \t\tOS.CGContextRestoreGState(handle);\n \t\treturn;\n\t}\n\tif (data.control != 0) {\n\t\tint port = data.port;\n\t\tint window = OS.GetControlOwner(data.control);\n\t\tif (port == 0) port = OS.GetWindowPort(window);\n\n\t\t/* Calculate src and dest rectangles/regions */\n\t\tRect rect = new Rect();\n\t\tOS.GetControlBounds(data.control, rect);\t\t\n\t\tRect srcRect = new Rect();\n\t\tint left = rect.left + srcX;\n\t\tint top = rect.top + srcY;\n\t\tOS.SetRect(srcRect, (short)left, (short)top, (short)(left + width), (short)(top + height));\n\t\tint srcRgn = OS.NewRgn();\n\t\tOS.RectRgn(srcRgn, srcRect);\t\t\n\t\tOS.SectRect(rect, srcRect, srcRect);\n\t\tRect destRect = new Rect ();\n\t\tOS.SetRect(destRect, srcRect.left, srcRect.top, srcRect.right, srcRect.bottom);\n\t\tOS.OffsetRect(destRect, (short)deltaX, (short)deltaY);\n\t\tint destRgn = OS.NewRgn();\n\t\tOS.RectRgn(destRgn, destRect);\n\t\t\n\t\t/* Copy bits with appropriated clipping region */\n\t\tif (!OS.EmptyRect(srcRect)) {\n\t\t\tif (data.visibleRgn == 0 || OS.RectInRgn(srcRect, data.visibleRgn)) {\n\t\t\t\tint clipRgn = data.visibleRgn;\n\t\t\t\tif (data.clipRgn != 0) {\n\t\t\t\t\tclipRgn = OS.NewRgn();\n\t\t\t\t\tOS.SectRgn(data.clipRgn, data.visibleRgn, clipRgn);\n\t\t\t\t}\n\t\n\t\t\t\t/*\n\t\t\t\t* Feature in the Macintosh.  ScrollRect() only copies bits\n\t\t\t\t* that are inside the specified rectangle.  This means that\n\t\t\t\t* it is not possible to copy non overlaping bits without\n\t\t\t\t* copying the bits in between the source and destination\n\t\t\t\t* rectangles.  The fix is to check if the source and\n\t\t\t\t* destination rectangles are disjoint and use CopyBits()\n\t\t\t\t* instead.\n\t\t\t\t*/\n\t\t\t\tif (!OS.EmptyRgn(clipRgn)) {\n\t\t\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\t\t\t\tif (!disjoint && (deltaX == 0 || deltaY == 0)) {\n\t\t\t\t\t\tint[] currentPort = new int[1];\n\t\t\t\t\t\tOS.GetPort(currentPort);\n\t\t\t\t\t\tOS.SetPort(port);\n\t\t\t\t\t\tint oldClip = OS.NewRgn();\n\t\t\t\t\t\tOS.GetClip(oldClip);\n\t\t\t\t\t\tOS.SetClip(clipRgn);\n\t\t\t\t\t\tOS.UnionRect(srcRect, destRect, rect);\n\t\t\t\t\t\tOS.ScrollRect(rect, (short)deltaX, (short)deltaY, 0);\n\t\t\t\t\t\tOS.SetClip(oldClip);\n\t\t\t\t\t\tOS.DisposeRgn(oldClip);\n\t\t\t\t\t\tOS.SetPort(currentPort[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint portBitMap = OS.GetPortBitMapForCopyBits (port);\n\t\t\t\t\t\tOS.CopyBits(portBitMap, portBitMap, srcRect, destRect, (short)OS.srcCopy, clipRgn);\n\t\t\t\t\t\tOS.QDFlushPortBuffer(port, destRgn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (clipRgn != data.visibleRgn) OS.DisposeRgn(clipRgn);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Invalidate src and obscured areas */\n\t\tif (paint) {\n\t\t\tint invalRgn = OS.NewRgn();\n\t\t\tOS.DiffRgn(srcRgn, data.visibleRgn, invalRgn);\n\t\t\tOS.OffsetRgn(invalRgn, (short)deltaX, (short)deltaY);\n\t\t\tOS.DiffRgn(srcRgn, destRgn, srcRgn);\n\t\t\tOS.UnionRgn(srcRgn, invalRgn, invalRgn);\n\t\t\tOS.SectRgn(data.visibleRgn, invalRgn, invalRgn);\n\t\t\tOS.InvalWindowRgn(window, invalRgn);\n\t\t\tOS.DisposeRgn(invalRgn);\n\t\t}\n\t\t\n\t\t/* Dispose src and dest regions */\n\t\tOS.DisposeRgn(destRgn);\n\t\tOS.DisposeRgn(srcRgn);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tif (data.image != null) {\n \t\tOS.CGContextSaveGState(handle);\n \t\tOS.CGContextScaleCTM(handle, 1, -1);\n \t\tOS.CGContextTranslateCTM(handle, 0, -(height + 2 * destY));\n \t\tCGRect rect = new CGRect();\n \t\trect.x = destX;\n \t\trect.y = destY;\n \t\trect.width = width;\n\t\trect.height = height;\n\t\t//NOT DONE - transparency\n \t\tOS.CGContextDrawImage(handle, rect, data.image.handle);\n \t\tOS.CGContextRestoreGState(handle);\n \t\treturn;\n\t}\n\tif (data.control != 0) {\n\t\tint port = data.port;\n\t\tint window = OS.GetControlOwner(data.control);\n\t\tif (port == 0) port = OS.GetWindowPort(window);\n\n\t\t/* Calculate src and dest rectangles/regions */\n\t\tRect rect = new Rect();\n\t\tOS.GetControlBounds(data.control, rect);\t\t\n\t\tRect srcRect = new Rect();\n\t\tint left = rect.left + srcX;\n\t\tint top = rect.top + srcY;\n\t\tOS.SetRect(srcRect, (short)left, (short)top, (short)(left + width), (short)(top + height));\n\t\tint srcRgn = OS.NewRgn();\n\t\tOS.RectRgn(srcRgn, srcRect);\t\t\n\t\tOS.SectRect(rect, srcRect, srcRect);\n\t\tRect destRect = new Rect ();\n\t\tOS.SetRect(destRect, srcRect.left, srcRect.top, srcRect.right, srcRect.bottom);\n\t\tOS.OffsetRect(destRect, (short)deltaX, (short)deltaY);\n\t\tint destRgn = OS.NewRgn();\n\t\tOS.RectRgn(destRgn, destRect);\n\t\t\n\t\t/* Copy bits with appropriated clipping region */\n\t\tif (!OS.EmptyRect(srcRect)) {\n\t\t\tif (data.visibleRgn == 0 || OS.RectInRgn(srcRect, data.visibleRgn)) {\n\t\t\t\tint clipRgn = data.visibleRgn;\n\t\t\t\tif (data.clipRgn != 0) {\n\t\t\t\t\tclipRgn = OS.NewRgn();\n\t\t\t\t\tOS.SectRgn(data.clipRgn, data.visibleRgn, clipRgn);\n\t\t\t\t}\n\t\n\t\t\t\t/*\n\t\t\t\t* Feature in the Macintosh.  ScrollRect() only copies bits\n\t\t\t\t* that are inside the specified rectangle.  This means that\n\t\t\t\t* it is not possible to copy non overlaping bits without\n\t\t\t\t* copying the bits in between the source and destination\n\t\t\t\t* rectangles.  The fix is to check if the source and\n\t\t\t\t* destination rectangles are disjoint and use CopyBits()\n\t\t\t\t* instead.\n\t\t\t\t*/\n\t\t\t\tif (!OS.EmptyRgn(clipRgn)) {\n\t\t\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\t\t\t\tif (!disjoint && (deltaX == 0 || deltaY == 0)) {\n\t\t\t\t\t\tint[] currentPort = new int[1];\n\t\t\t\t\t\tOS.GetPort(currentPort);\n\t\t\t\t\t\tOS.SetPort(port);\n\t\t\t\t\t\tint oldClip = OS.NewRgn();\n\t\t\t\t\t\tOS.GetClip(oldClip);\n\t\t\t\t\t\tOS.SetClip(clipRgn);\n\t\t\t\t\t\tOS.UnionRect(srcRect, destRect, rect);\n\t\t\t\t\t\tOS.ScrollRect(rect, (short)deltaX, (short)deltaY, 0);\n\t\t\t\t\t\tOS.SetClip(oldClip);\n\t\t\t\t\t\tOS.DisposeRgn(oldClip);\n\t\t\t\t\t\tOS.SetPort(currentPort[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint portBitMap = OS.GetPortBitMapForCopyBits (port);\n\t\t\t\t\t\tOS.CopyBits(portBitMap, portBitMap, srcRect, destRect, (short)OS.srcCopy, clipRgn);\n\t\t\t\t\t\tOS.QDFlushPortBuffer(port, destRgn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (clipRgn != data.visibleRgn) OS.DisposeRgn(clipRgn);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Invalidate src and obscured areas */\n\t\tif (paint) {\n\t\t\tint invalRgn = OS.NewRgn();\n\t\t\tOS.DiffRgn(srcRgn, data.visibleRgn, invalRgn);\n\t\t\tOS.OffsetRgn(invalRgn, (short)deltaX, (short)deltaY);\n\t\t\tOS.DiffRgn(srcRgn, destRgn, srcRgn);\n\t\t\tOS.UnionRgn(srcRgn, invalRgn, invalRgn);\n\t\t\tOS.SectRgn(data.visibleRgn, invalRgn, invalRgn);\n\t\t\tOS.InvalWindowRgn(window, invalRgn);\n\t\t\tOS.DisposeRgn(invalRgn);\n\t\t}\n\t\t\n\t\t/* Dispose src and dest regions */\n\t\tOS.DisposeRgn(destRgn);\n\t\tOS.DisposeRgn(srcRgn);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 12,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, x + offset + width / 2f, y + offset + height / 2f);\n\tOS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n\tOS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, x + offset + width / 2f, y + offset + height / 2f);\n\tOS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n\tOS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, x + offset + width / 2f, y + offset + height / 2f);\n\tOS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n\tOS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 13,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\t//NOT DONE\n//\tdrawRectangle (x, y, width - 1, height - 1);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\t//NOT DONE\n//\tdrawRectangle (x, y, width - 1, height - 1);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\t//NOT DONE\n//\tdrawRectangle (x, y, width - 1, height - 1);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 14,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 15,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (x1 == x2 && y1 == y2 && data.lineWidth <= 1) {\n\t\tdrawPoint(x1, y1);\n\t\treturn;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextMoveToPoint(handle, x1 + offset, y1 + offset);\n\tOS.CGContextAddLineToPoint(handle, x2 + offset, y2 + offset);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (x1 == x2 && y1 == y2 && data.lineWidth <= 1) {\n\t\tdrawPoint(x1, y1);\n\t\treturn;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextMoveToPoint(handle, x1 + offset, y1 + offset);\n\tOS.CGContextAddLineToPoint(handle, x2 + offset, y2 + offset);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (x1 == x2 && y1 == y2 && data.lineWidth <= 1) {\n\t\tdrawPoint(x1, y1);\n\t\treturn;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextMoveToPoint(handle, x1 + offset, y1 + offset);\n\tOS.CGContextAddLineToPoint(handle, x2 + offset, y2 + offset);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, x + offset + width / 2f, y + offset + height / 2f);\n\tOS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n\tOS.CGContextMoveToPoint(handle, 1, 0);\n\tOS.CGContextAddArc(handle, 0, 0, 1, 0, (float)(2 *Compatibility.PI), true);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, x + offset + width / 2f, y + offset + height / 2f);\n\tOS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n\tOS.CGContextMoveToPoint(handle, 1, 0);\n\tOS.CGContextAddArc(handle, 0, 0, 1, 0, (float)(2 *Compatibility.PI), true);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, x + offset + width / 2f, y + offset + height / 2f);\n\tOS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n\tOS.CGContextMoveToPoint(handle, 1, 0);\n\tOS.CGContextAddArc(handle, 0, 0, 1, 0, (float)(2 *Compatibility.PI), true);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, offset, offset);\n\tOS.CGContextAddPath(handle, path.handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, offset, offset);\n\tOS.CGContextAddPath(handle, path.handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, offset, offset);\n\tOS.CGContextAddPath(handle, path.handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tCGRect rect = new CGRect();\n\trect.x = x;\n\trect.y = y;\n\trect.width = 1;\n\trect.height = 1;\n\tOS.CGContextSetFillColor(handle, data.foreground);\n\tOS.CGContextFillRect(handle, rect);\n\tOS.CGContextSetFillColor(handle, data.background);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tCGRect rect = new CGRect();\n\trect.x = x;\n\trect.y = y;\n\trect.width = 1;\n\trect.height = 1;\n\tOS.CGContextSetFillColor(handle, data.foreground);\n\tOS.CGContextFillRect(handle, rect);\n\tOS.CGContextSetFillColor(handle, data.background);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tCGRect rect = new CGRect();\n\trect.x = x;\n\trect.y = y;\n\trect.width = 1;\n\trect.height = 1;\n\tOS.CGContextSetFillColor(handle, data.foreground);\n\tOS.CGContextFillRect(handle, rect);\n\tOS.CGContextSetFillColor(handle, data.background);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i] + offset;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i] + offset;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i] + offset;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i] + offset;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i] + offset;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i] + offset;\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tCGRect rect = new CGRect();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\trect.x = x + offset;\n\trect.y = y + offset;\n\trect.width = width;\n\trect.height = height;\n\tOS.CGContextStrokeRect(handle, rect);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tCGRect rect = new CGRect();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\trect.x = x + offset;\n\trect.y = y + offset;\n\trect.width = width;\n\trect.height = height;\n\tOS.CGContextStrokeRect(handle, rect);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tCGRect rect = new CGRect();\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\trect.x = x + offset;\n\trect.y = y + offset;\n\trect.width = width;\n\trect.height = height;\n\tOS.CGContextStrokeRect(handle, rect);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (arcWidth == 0 || arcHeight == 0) {\n\t\tdrawRectangle(x, y, width, height);\n    \treturn;\n\t}\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\t\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tif (naw > nw) naw = nw;\n\tif (nah > nh) nah = nh;\t\n\tfloat naw2 = naw / 2f;\n\tfloat nah2 = nah / 2f;\n\tfloat fw = nw / naw2;\n\tfloat fh = nh / nah2;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, nx + offset, ny + offset);\n\tOS.CGContextScaleCTM(handle, naw2, nah2);\n\tOS.CGContextMoveToPoint(handle, fw - 1, 0);\n\tOS.CGContextAddArcToPoint(handle, 0, 0, 0, 1, 1);\n\tOS.CGContextAddArcToPoint(handle, 0, fh, 1, fh, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, fh, fw, fh - 1, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, 0, fw - 1, 0, 1);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (arcWidth == 0 || arcHeight == 0) {\n\t\tdrawRectangle(x, y, width, height);\n    \treturn;\n\t}\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\t\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tif (naw > nw) naw = nw;\n\tif (nah > nh) nah = nh;\t\n\tfloat naw2 = naw / 2f;\n\tfloat nah2 = nah / 2f;\n\tfloat fw = nw / naw2;\n\tfloat fh = nh / nah2;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, nx + offset, ny + offset);\n\tOS.CGContextScaleCTM(handle, naw2, nah2);\n\tOS.CGContextMoveToPoint(handle, fw - 1, 0);\n\tOS.CGContextAddArcToPoint(handle, 0, 0, 0, 1, 1);\n\tOS.CGContextAddArcToPoint(handle, 0, fh, 1, fh, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, fh, fw, fh - 1, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, 0, fw - 1, 0, 1);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (arcWidth == 0 || arcHeight == 0) {\n\t\tdrawRectangle(x, y, width, height);\n    \treturn;\n\t}\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\t\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tif (naw > nw) naw = nw;\n\tif (nah > nh) nah = nh;\t\n\tfloat naw2 = naw / 2f;\n\tfloat nah2 = nah / 2f;\n\tfloat fw = nw / naw2;\n\tfloat fh = nh / nah2;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tOS.CGContextTranslateCTM(handle, nx + offset, ny + offset);\n\tOS.CGContextScaleCTM(handle, naw2, nah2);\n\tOS.CGContextMoveToPoint(handle, fw - 1, 0);\n\tOS.CGContextAddArcToPoint(handle, 0, 0, 0, 1, 1);\n\tOS.CGContextAddArcToPoint(handle, 0, fh, 1, fh, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, fh, fw, fh - 1, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, 0, fw - 1, 0, 1);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextStrokePath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 30,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tint length = string.length();\n\tif (length == 0) return;\n\tOS.CGContextSaveGState(handle);\n\tOS.CGContextScaleCTM(handle, 1, -1);\n\tboolean mode = true;\n\tswitch (data.textAntialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\tif (data.window != 0 && data.control == 0) mode = false;\n\t\t\tbreak;\n\t\tcase SWT.OFF: mode = false; break;\n\t}\n\tOS.CGContextSetShouldAntialias(handle, mode);\n\tlength = setString(string, flags);\n\tif ((flags & SWT.DRAW_DELIMITER) != 0) {\n\t\tint layout = data.layout;\n\t\tint[] breakCount = new int[1];\n\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, 0, null, breakCount);\n\t\tint[] breaks = new int[breakCount[0] + 1];\n\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, breakCount[0], breaks, breakCount);\n\t\tbreaks[breakCount[0]] = length;\n\t\tfor (int i=0, start=0; i<breaks.length; i++) {\n\t\t\tint lineBreak = breaks[i];\n\t\t\tdrawText(x, y, start, lineBreak - start, flags);\n\t\t\ty += data.fontAscent + data.fontDescent;\n\t\t\tstart = lineBreak;\n\t\t}\n\t} else {\n\t\tdrawText(x, y, 0, length, flags);\n\t}\n\tOS.CGContextRestoreGState(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tint length = string.length();\n\tif (length == 0) return;\n\tOS.CGContextSaveGState(handle);\n\tOS.CGContextScaleCTM(handle, 1, -1);\n\tboolean mode = true;\n\tswitch (data.textAntialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\tif (data.window != 0 && data.control == 0) mode = false;\n\t\t\tbreak;\n\t\tcase SWT.OFF: mode = false; break;\n\t}\n\tOS.CGContextSetShouldAntialias(handle, mode);\n\tlength = setString(string, flags);\n\tif ((flags & SWT.DRAW_DELIMITER) != 0) {\n\t\tint layout = data.layout;\n\t\tint[] breakCount = new int[1];\n\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, 0, null, breakCount);\n\t\tint[] breaks = new int[breakCount[0] + 1];\n\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, breakCount[0], breaks, breakCount);\n\t\tbreaks[breakCount[0]] = length;\n\t\tfor (int i=0, start=0; i<breaks.length; i++) {\n\t\t\tint lineBreak = breaks[i];\n\t\t\tdrawText(x, y, start, lineBreak - start, flags);\n\t\t\ty += data.fontAscent + data.fontDescent;\n\t\t\tstart = lineBreak;\n\t\t}\n\t} else {\n\t\tdrawText(x, y, 0, length, flags);\n\t}\n\tOS.CGContextRestoreGState(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tint length = string.length();\n\tif (length == 0) return;\n\tOS.CGContextSaveGState(handle);\n\tOS.CGContextScaleCTM(handle, 1, -1);\n\tboolean mode = true;\n\tswitch (data.textAntialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\tif (data.window != 0 && data.control == 0) mode = false;\n\t\t\tbreak;\n\t\tcase SWT.OFF: mode = false; break;\n\t}\n\tOS.CGContextSetShouldAntialias(handle, mode);\n\tlength = setString(string, flags);\n\tif ((flags & SWT.DRAW_DELIMITER) != 0) {\n\t\tint layout = data.layout;\n\t\tint[] breakCount = new int[1];\n\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, 0, null, breakCount);\n\t\tint[] breaks = new int[breakCount[0] + 1];\n\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, breakCount[0], breaks, breakCount);\n\t\tbreaks[breakCount[0]] = length;\n\t\tfor (int i=0, start=0; i<breaks.length; i++) {\n\t\t\tint lineBreak = breaks[i];\n\t\t\tdrawText(x, y, start, lineBreak - start, flags);\n\t\t\ty += data.fontAscent + data.fontDescent;\n\t\t\tstart = lineBreak;\n\t\t}\n\t} else {\n\t\tdrawText(x, y, 0, length, flags);\n\t}\n\tOS.CGContextRestoreGState(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tOS.CGContextBeginPath(handle);\n    OS.CGContextSaveGState(handle);\n    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);\n    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n    OS.CGContextMoveToPoint(handle, 0, 0);\n    OS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);\n    OS.CGContextClosePath(handle);\n    OS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tOS.CGContextBeginPath(handle);\n    OS.CGContextSaveGState(handle);\n    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);\n    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n    OS.CGContextMoveToPoint(handle, 0, 0);\n    OS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);\n    OS.CGContextClosePath(handle);\n    OS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tOS.CGContextBeginPath(handle);\n    OS.CGContextSaveGState(handle);\n    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);\n    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n    OS.CGContextMoveToPoint(handle, 0, 0);\n    OS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);\n    OS.CGContextClosePath(handle);\n    OS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 34,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif ((width == 0) || (height == 0)) return;\n\t\n\t/* Rewrite this to use GdkPixbuf */\n\n\tRGB backgroundRGB, foregroundRGB;\n\tbackgroundRGB = getBackground().getRGB();\n\tforegroundRGB = getForeground().getRGB();\n\n\tRGB fromRGB, toRGB;\n\tfromRGB = foregroundRGB;\n\ttoRGB   = backgroundRGB;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfromRGB = backgroundRGB;\n\t\ttoRGB   = foregroundRGB;\n\t}\n\tif (fromRGB.equals(toRGB)) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\t8, 8, 8);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif ((width == 0) || (height == 0)) return;\n\t\n\t/* Rewrite this to use GdkPixbuf */\n\n\tRGB backgroundRGB, foregroundRGB;\n\tbackgroundRGB = getBackground().getRGB();\n\tforegroundRGB = getForeground().getRGB();\n\n\tRGB fromRGB, toRGB;\n\tfromRGB = foregroundRGB;\n\ttoRGB   = backgroundRGB;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfromRGB = backgroundRGB;\n\t\ttoRGB   = foregroundRGB;\n\t}\n\tif (fromRGB.equals(toRGB)) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\t8, 8, 8);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif ((width == 0) || (height == 0)) return;\n\t\n\t/* Rewrite this to use GdkPixbuf */\n\n\tRGB backgroundRGB, foregroundRGB;\n\tbackgroundRGB = getBackground().getRGB();\n\tforegroundRGB = getForeground().getRGB();\n\n\tRGB fromRGB, toRGB;\n\tfromRGB = foregroundRGB;\n\ttoRGB   = backgroundRGB;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfromRGB = backgroundRGB;\n\t\ttoRGB   = foregroundRGB;\n\t}\n\tif (fromRGB.equals(toRGB)) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\t8, 8, 8);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tOS.CGContextBeginPath(handle);\n    OS.CGContextSaveGState(handle);\n    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);\n    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n    OS.CGContextMoveToPoint(handle, 1, 0);\n    OS.CGContextAddArc(handle, 0, 0, 1, 0,  (float)(Compatibility.PI * 2), false);\n    OS.CGContextClosePath(handle);\n    OS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tOS.CGContextBeginPath(handle);\n    OS.CGContextSaveGState(handle);\n    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);\n    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n    OS.CGContextMoveToPoint(handle, 1, 0);\n    OS.CGContextAddArc(handle, 0, 0, 1, 0,  (float)(Compatibility.PI * 2), false);\n    OS.CGContextClosePath(handle);\n    OS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tOS.CGContextBeginPath(handle);\n    OS.CGContextSaveGState(handle);\n    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);\n    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);\n    OS.CGContextMoveToPoint(handle, 1, 0);\n    OS.CGContextAddArc(handle, 0, 0, 1, 0,  (float)(Compatibility.PI * 2), false);\n    OS.CGContextClosePath(handle);\n    OS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 36,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddPath(handle, path.handle);\n\tif (data.fillRule == SWT.FILL_WINDING) {\n\t\tOS.CGContextFillPath(handle);\n\t} else {\n\t\tOS.CGContextEOFillPath(handle);\n\t}\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddPath(handle, path.handle);\n\tif (data.fillRule == SWT.FILL_WINDING) {\n\t\tOS.CGContextFillPath(handle);\n\t} else {\n\t\tOS.CGContextEOFillPath(handle);\n\t}\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddPath(handle, path.handle);\n\tif (data.fillRule == SWT.FILL_WINDING) {\n\t\tOS.CGContextFillPath(handle);\n\t} else {\n\t\tOS.CGContextEOFillPath(handle);\n\t}\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 37,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i];\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextClosePath(handle);\n\tif (data.fillRule == SWT.FILL_WINDING) {\n\t\tOS.CGContextFillPath(handle);\n\t} else {\n\t\tOS.CGContextEOFillPath(handle);\n\t}\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i];\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextClosePath(handle);\n\tif (data.fillRule == SWT.FILL_WINDING) {\n\t\tOS.CGContextFillPath(handle);\n\t} else {\n\t\tOS.CGContextEOFillPath(handle);\n\t}\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.updateClip) setCGClipping();\n\tfloat[] points = new float[pointArray.length];\n\tfor (int i=0; i<points.length; i++) {\n\t\tpoints[i] = pointArray[i];\n\t}\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextAddLines(handle, points, points.length / 2);\n\tOS.CGContextClosePath(handle);\n\tif (data.fillRule == SWT.FILL_WINDING) {\n\t\tOS.CGContextFillPath(handle);\n\t} else {\n\t\tOS.CGContextEOFillPath(handle);\n\t}\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 38,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tCGRect rect = new CGRect();\n\trect.x = x;\n\trect.y = y;\n\trect.width = width;\n\trect.height = height;\n\tOS.CGContextFillRect(handle, rect);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tCGRect rect = new CGRect();\n\trect.x = x;\n\trect.y = y;\n\trect.width = width;\n\trect.height = height;\n\tOS.CGContextFillRect(handle, rect);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tCGRect rect = new CGRect();\n\trect.x = x;\n\trect.y = y;\n\trect.width = width;\n\trect.height = height;\n\tOS.CGContextFillRect(handle, rect);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 39,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (rect == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfillRectangle(rect.x, rect.y, rect.width, rect.height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (rect == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfillRectangle(rect.x, rect.y, rect.width, rect.height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (rect == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfillRectangle(rect.x, rect.y, rect.width, rect.height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 40,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.updateClip) setCGClipping();\n\tif (arcWidth == 0 || arcHeight == 0) {\n\t\tfillRectangle(x, y, width, height);\n    \treturn;\n\t}\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\t\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tif (naw > nw) naw = nw;\n\tif (nah > nh) nah = nh;\t\n\tfloat naw2 = naw / 2f;\n\tfloat nah2 = nah / 2f;\n\tfloat fw = nw / naw2;\n\tfloat fh = nh / nah2;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tOS.CGContextTranslateCTM(handle, nx, ny);\n\tOS.CGContextScaleCTM(handle, naw2, nah2);\n\tOS.CGContextMoveToPoint(handle, fw - 1, 0);\n\tOS.CGContextAddArcToPoint(handle, 0, 0, 0, 1, 1);\n\tOS.CGContextAddArcToPoint(handle, 0, fh, 1, fh, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, fh, fw, fh - 1, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, 0, fw - 1, 0, 1);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.updateClip) setCGClipping();\n\tif (arcWidth == 0 || arcHeight == 0) {\n\t\tfillRectangle(x, y, width, height);\n    \treturn;\n\t}\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\t\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tif (naw > nw) naw = nw;\n\tif (nah > nh) nah = nh;\t\n\tfloat naw2 = naw / 2f;\n\tfloat nah2 = nah / 2f;\n\tfloat fw = nw / naw2;\n\tfloat fh = nh / nah2;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tOS.CGContextTranslateCTM(handle, nx, ny);\n\tOS.CGContextScaleCTM(handle, naw2, nah2);\n\tOS.CGContextMoveToPoint(handle, fw - 1, 0);\n\tOS.CGContextAddArcToPoint(handle, 0, 0, 0, 1, 1);\n\tOS.CGContextAddArcToPoint(handle, 0, fh, 1, fh, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, fh, fw, fh - 1, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, 0, fw - 1, 0, 1);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.updateClip) setCGClipping();\n\tif (arcWidth == 0 || arcHeight == 0) {\n\t\tfillRectangle(x, y, width, height);\n    \treturn;\n\t}\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\t\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tif (naw > nw) naw = nw;\n\tif (nah > nh) nah = nh;\t\n\tfloat naw2 = naw / 2f;\n\tfloat nah2 = nah / 2f;\n\tfloat fw = nw / naw2;\n\tfloat fh = nh / nah2;\n\tOS.CGContextBeginPath(handle);\n\tOS.CGContextSaveGState(handle);\n\tOS.CGContextTranslateCTM(handle, nx, ny);\n\tOS.CGContextScaleCTM(handle, naw2, nah2);\n\tOS.CGContextMoveToPoint(handle, fw - 1, 0);\n\tOS.CGContextAddArcToPoint(handle, 0, 0, 0, 1, 1);\n\tOS.CGContextAddArcToPoint(handle, 0, fh, 1, fh, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, fh, fw, fh - 1, 1);\n\tOS.CGContextAddArcToPoint(handle, fw, 0, fw - 1, 0, 1);\n\tOS.CGContextClosePath(handle);\n\tOS.CGContextRestoreGState(handle);\n\tOS.CGContextFillPath(handle);\n\tflush();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//NOT DONE\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t//NOT DONE\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t//NOT DONE\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 43,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn Color.carbon_new (data.device, data.background);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn Color.carbon_new (data.device, data.background);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn Color.carbon_new (data.device, data.background);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 45,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn true;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn true;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn true;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.alpha;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.alpha;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.alpha;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//NOT DONE\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t//NOT DONE\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t//NOT DONE\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 49,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tRect rect = new Rect();\n\tint width = 0, height = 0;\n\tif (data.control != 0) {\n\t\tOS.GetControlBounds(data.control, rect);\n\t\twidth = rect.right - rect.left;\n\t\theight = rect.bottom - rect.top;\n\t} else {\n\t\tif (data.image != null) {\n\t\t\tint image = data.image.handle;\n\t\t\twidth = OS.CGImageGetWidth(image);\n\t\t\theight = OS.CGImageGetHeight(image);\n\t\t}\n\t}\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width, height);\n\t} else {\n\t\tint rgn = OS.NewRgn();\n\t\tOS.SetRectRgn(rgn, (short)0, (short)0, (short)width, (short)height);\n\t\tOS.SectRgn(rgn, clipRgn, rgn);\n\t\tOS.GetRegionBounds(rgn, rect);\n\t\tOS.DisposeRgn(rgn);\n\t\treturn new Rectangle(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tRect rect = new Rect();\n\tint width = 0, height = 0;\n\tif (data.control != 0) {\n\t\tOS.GetControlBounds(data.control, rect);\n\t\twidth = rect.right - rect.left;\n\t\theight = rect.bottom - rect.top;\n\t} else {\n\t\tif (data.image != null) {\n\t\t\tint image = data.image.handle;\n\t\t\twidth = OS.CGImageGetWidth(image);\n\t\t\theight = OS.CGImageGetHeight(image);\n\t\t}\n\t}\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width, height);\n\t} else {\n\t\tint rgn = OS.NewRgn();\n\t\tOS.SetRectRgn(rgn, (short)0, (short)0, (short)width, (short)height);\n\t\tOS.SectRgn(rgn, clipRgn, rgn);\n\t\tOS.GetRegionBounds(rgn, rect);\n\t\tOS.DisposeRgn(rgn);\n\t\treturn new Rectangle(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tRect rect = new Rect();\n\tint width = 0, height = 0;\n\tif (data.control != 0) {\n\t\tOS.GetControlBounds(data.control, rect);\n\t\twidth = rect.right - rect.left;\n\t\theight = rect.bottom - rect.top;\n\t} else {\n\t\tif (data.image != null) {\n\t\t\tint image = data.image.handle;\n\t\t\twidth = OS.CGImageGetWidth(image);\n\t\t\theight = OS.CGImageGetHeight(image);\n\t\t}\n\t}\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width, height);\n\t} else {\n\t\tint rgn = OS.NewRgn();\n\t\tOS.SetRectRgn(rgn, (short)0, (short)0, (short)width, (short)height);\n\t\tOS.SectRgn(rgn, clipRgn, rgn);\n\t\tOS.GetRegionBounds(rgn, rect);\n\t\tOS.DisposeRgn(rgn);\n\t\treturn new Rectangle(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 50,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRect bounds = null;\n\tint clipping = region.handle;\n\tif (data.clipRgn == 0) {\n\t\tint width = 0, height = 0;\n\t\tif (data.control != 0) {\n\t\t\tif (bounds == null) bounds = new Rect();\n\t\t\tOS.GetControlBounds(data.control, bounds);\n\t\t\twidth = bounds.right - bounds.left;\n\t\t\theight = bounds.bottom - bounds.top;\n\t\t} else {\n\t\t\tif (data.image != null) {\n\t\t\t\tint image = data.image.handle;\n\t\t\t\twidth = OS.CGImageGetWidth(image);\n\t\t\t\theight = OS.CGImageGetHeight(image);\n\t\t\t}\n\t\t}\n\t\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);\n\t} else {\n\t\tOS.CopyRgn(data.clipRgn, clipping);\n\t\tif (!isIdentity(data.transform)) return;\n\t}\n\tif (data.paintEvent != 0 && data.visibleRgn != 0) {\n\t\tif (bounds == null) bounds = new Rect();\n\t\tOS.GetControlBounds(data.control, bounds);\n\t\tOS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);\n\t\tOS.SectRgn(data.visibleRgn, clipping, clipping);\n\t\tOS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRect bounds = null;\n\tint clipping = region.handle;\n\tif (data.clipRgn == 0) {\n\t\tint width = 0, height = 0;\n\t\tif (data.control != 0) {\n\t\t\tif (bounds == null) bounds = new Rect();\n\t\t\tOS.GetControlBounds(data.control, bounds);\n\t\t\twidth = bounds.right - bounds.left;\n\t\t\theight = bounds.bottom - bounds.top;\n\t\t} else {\n\t\t\tif (data.image != null) {\n\t\t\t\tint image = data.image.handle;\n\t\t\t\twidth = OS.CGImageGetWidth(image);\n\t\t\t\theight = OS.CGImageGetHeight(image);\n\t\t\t}\n\t\t}\n\t\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);\n\t} else {\n\t\tOS.CopyRgn(data.clipRgn, clipping);\n\t\tif (!isIdentity(data.transform)) return;\n\t}\n\tif (data.paintEvent != 0 && data.visibleRgn != 0) {\n\t\tif (bounds == null) bounds = new Rect();\n\t\tOS.GetControlBounds(data.control, bounds);\n\t\tOS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);\n\t\tOS.SectRgn(data.visibleRgn, clipping, clipping);\n\t\tOS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRect bounds = null;\n\tint clipping = region.handle;\n\tif (data.clipRgn == 0) {\n\t\tint width = 0, height = 0;\n\t\tif (data.control != 0) {\n\t\t\tif (bounds == null) bounds = new Rect();\n\t\t\tOS.GetControlBounds(data.control, bounds);\n\t\t\twidth = bounds.right - bounds.left;\n\t\t\theight = bounds.bottom - bounds.top;\n\t\t} else {\n\t\t\tif (data.image != null) {\n\t\t\t\tint image = data.image.handle;\n\t\t\t\twidth = OS.CGImageGetWidth(image);\n\t\t\t\theight = OS.CGImageGetHeight(image);\n\t\t\t}\n\t\t}\n\t\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);\n\t} else {\n\t\tOS.CopyRgn(data.clipRgn, clipping);\n\t\tif (!isIdentity(data.transform)) return;\n\t}\n\tif (data.paintEvent != 0 && data.visibleRgn != 0) {\n\t\tif (bounds == null) bounds = new Rect();\n\t\tOS.GetControlBounds(data.control, bounds);\n\t\tOS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);\n\t\tOS.SectRgn(data.visibleRgn, clipping, clipping);\n\t\tOS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 51,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.fillRule;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.fillRule;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.fillRule;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.font;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.font;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.font;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 53,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tFont font = data.font;\n\tFontInfo info = new FontInfo();\n\tOS.FetchFontInfo(font.id, font.size, font.style, info);\n\tint ascent = info.ascent;\n\tint descent = info.descent;\n\tint leading = info.leading;\n\t/* This code is intentionaly comment. Not right for fixed width fonts. */\n\t//fm.averageCharWidth = info.widMax / 3;\n\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"; \n\tint averageCharWidth = stringExtent(s).x / s.length();\n\treturn FontMetrics.carbon_new(ascent, descent, averageCharWidth, leading, ascent + leading + descent);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tFont font = data.font;\n\tFontInfo info = new FontInfo();\n\tOS.FetchFontInfo(font.id, font.size, font.style, info);\n\tint ascent = info.ascent;\n\tint descent = info.descent;\n\tint leading = info.leading;\n\t/* This code is intentionaly comment. Not right for fixed width fonts. */\n\t//fm.averageCharWidth = info.widMax / 3;\n\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"; \n\tint averageCharWidth = stringExtent(s).x / s.length();\n\treturn FontMetrics.carbon_new(ascent, descent, averageCharWidth, leading, ascent + leading + descent);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tFont font = data.font;\n\tFontInfo info = new FontInfo();\n\tOS.FetchFontInfo(font.id, font.size, font.style, info);\n\tint ascent = info.ascent;\n\tint descent = info.descent;\n\tint leading = info.leading;\n\t/* This code is intentionaly comment. Not right for fixed width fonts. */\n\t//fm.averageCharWidth = info.widMax / 3;\n\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"; \n\tint averageCharWidth = stringExtent(s).x / s.length();\n\treturn FontMetrics.carbon_new(ascent, descent, averageCharWidth, leading, ascent + leading + descent);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 56,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint interpolation = OS.CGContextGetInterpolationQuality(handle);\n\tswitch (interpolation) {\n\t\tcase OS.kCGInterpolationDefault: return SWT.DEFAULT;\n\t\tcase OS.kCGInterpolationNone: return SWT.NONE;\n\t\tcase OS.kCGInterpolationLow: return SWT.LOW;\n\t\tcase OS.kCGInterpolationHigh: return SWT.HIGH;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint interpolation = OS.CGContextGetInterpolationQuality(handle);\n\tswitch (interpolation) {\n\t\tcase OS.kCGInterpolationDefault: return SWT.DEFAULT;\n\t\tcase OS.kCGInterpolationNone: return SWT.NONE;\n\t\tcase OS.kCGInterpolationLow: return SWT.LOW;\n\t\tcase OS.kCGInterpolationHigh: return SWT.HIGH;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint interpolation = OS.CGContextGetInterpolationQuality(handle);\n\tswitch (interpolation) {\n\t\tcase OS.kCGInterpolationDefault: return SWT.DEFAULT;\n\t\tcase OS.kCGInterpolationNone: return SWT.NONE;\n\t\tcase OS.kCGInterpolationLow: return SWT.LOW;\n\t\tcase OS.kCGInterpolationHigh: return SWT.HIGH;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 57,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineCap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineCap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineCap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 58,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint[] lengths = data.dashes;\n\tif (lengths == null) return null;\n\tint[] dashes = new int[lengths.length];\n\tSystem.arraycopy(lengths, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint[] lengths = data.dashes;\n\tif (lengths == null) return null;\n\tint[] dashes = new int[lengths.length];\n\tSystem.arraycopy(lengths, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint[] lengths = data.dashes;\n\tif (lengths == null) return null;\n\tint[] dashes = new int[lengths.length];\n\tSystem.arraycopy(lengths, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 59,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineJoin;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineJoin;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineJoin;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 60,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 61,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineWidth;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineWidth;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineWidth;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 62,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 63,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 64,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat[] cmt = data.transform; \n\ttransform.setElements(cmt[0], cmt[1], cmt[2], cmt[3], cmt[4], cmt[5]);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat[] cmt = data.transform; \n\ttransform.setElements(cmt[0], cmt[1], cmt[2], cmt[3], cmt[4], cmt[5]);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tfloat[] cmt = data.transform; \n\ttransform.setElements(cmt[0], cmt[1], cmt[2], cmt[3], cmt[4], cmt[5]);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 65,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.xorMode;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.xorMode;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.xorMode;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 68,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 71,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (!advanced) {\n\t\tsetAlpha(0xFF);\n\t\tsetAntialias(SWT.DEFAULT);\n\t\tsetBackgroundPattern(null);\n\t\tsetClipping(0);\n\t\tsetForegroundPattern(null);\n\t\tsetInterpolation(SWT.DEFAULT);\n\t\tsetTextAntialias(SWT.DEFAULT);\n\t\tsetTransform(null);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (!advanced) {\n\t\tsetAlpha(0xFF);\n\t\tsetAntialias(SWT.DEFAULT);\n\t\tsetBackgroundPattern(null);\n\t\tsetClipping(0);\n\t\tsetForegroundPattern(null);\n\t\tsetInterpolation(SWT.DEFAULT);\n\t\tsetTextAntialias(SWT.DEFAULT);\n\t\tsetTransform(null);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (!advanced) {\n\t\tsetAlpha(0xFF);\n\t\tsetAntialias(SWT.DEFAULT);\n\t\tsetBackgroundPattern(null);\n\t\tsetClipping(0);\n\t\tsetForegroundPattern(null);\n\t\tsetInterpolation(SWT.DEFAULT);\n\t\tsetTextAntialias(SWT.DEFAULT);\n\t\tsetTransform(null);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 72,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tdata.alpha = alpha & 0xFF;\n\tOS.CGContextSetAlpha(handle, data.alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tdata.alpha = alpha & 0xFF;\n\tOS.CGContextSetAlpha(handle, data.alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tdata.alpha = alpha & 0xFF;\n\tOS.CGContextSetAlpha(handle, data.alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tboolean mode = true;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\t/* Printer is off by default */\n\t\t\tif (data.window != 0 && data.control == 0) mode = false;\n\t\t\tbreak;\n\t\tcase SWT.OFF: mode = false; break;\n\t\tcase SWT.ON: mode = true; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.antialias = antialias;\n\tOS.CGContextSetShouldAntialias(handle, mode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tboolean mode = true;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\t/* Printer is off by default */\n\t\t\tif (data.window != 0 && data.control == 0) mode = false;\n\t\t\tbreak;\n\t\tcase SWT.OFF: mode = false; break;\n\t\tcase SWT.ON: mode = true; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.antialias = antialias;\n\tOS.CGContextSetShouldAntialias(handle, mode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tboolean mode = true;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\t/* Printer is off by default */\n\t\t\tif (data.window != 0 && data.control == 0) mode = false;\n\t\t\tbreak;\n\t\tcase SWT.OFF: mode = false; break;\n\t\tcase SWT.ON: mode = true; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.antialias = antialias;\n\tOS.CGContextSetShouldAntialias(handle, mode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 74,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tint colorspace = data.device.colorspace;\n\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\tOS.CGContextSetFillColor(handle, color.handle);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = 0;\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tint colorspace = data.device.colorspace;\n\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\tOS.CGContextSetFillColor(handle, color.handle);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = 0;\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tint colorspace = data.device.colorspace;\n\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\tOS.CGContextSetFillColor(handle, color.handle);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tdata.backPattern = 0;\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 75,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tif (pattern != null) {\n\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\t\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\t\tOS.CGColorSpaceRelease(colorspace);\n\t\tdata.backPattern = pattern.createPattern(handle);\n\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\t} else {\n\t\tint colorspace = data.device.colorspace;\n\t\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\t\tfloat[] color = data.background;\n\t\tOS.CGContextSetFillColor(handle, color);\n\t\tdata.backPattern = 0;\t\n\t}\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tif (pattern != null) {\n\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\t\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\t\tOS.CGColorSpaceRelease(colorspace);\n\t\tdata.backPattern = pattern.createPattern(handle);\n\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\t} else {\n\t\tint colorspace = data.device.colorspace;\n\t\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\t\tfloat[] color = data.background;\n\t\tOS.CGContextSetFillColor(handle, color);\n\t\tdata.backPattern = 0;\t\n\t}\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backPattern != 0) OS.CGPatternRelease(data.backPattern);\n\tif (pattern != null) {\n\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\t\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\t\tOS.CGColorSpaceRelease(colorspace);\n\t\tdata.backPattern = pattern.createPattern(handle);\n\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\t} else {\n\t\tint colorspace = data.device.colorspace;\n\t\tOS.CGContextSetFillColorSpace(handle, colorspace);\n\t\tfloat[] color = data.background;\n\t\tOS.CGContextSetFillColor(handle, color);\n\t\tdata.backPattern = 0;\t\n\t}\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 77,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint clipRgn = OS.NewRgn();\n\tOS.SetRectRgn(clipRgn, (short)x, (short)y, (short)(x + width), (short)(y + height));\n\tsetClipping(clipRgn);\n\tOS.DisposeRgn(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint clipRgn = OS.NewRgn();\n\tOS.SetRectRgn(clipRgn, (short)x, (short)y, (short)(x + width), (short)(y + height));\n\tsetClipping(clipRgn);\n\tOS.DisposeRgn(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint clipRgn = OS.NewRgn();\n\tOS.SetRectRgn(clipRgn, (short)x, (short)y, (short)(x + width), (short)(y + height));\n\tsetClipping(clipRgn);\n\tOS.DisposeRgn(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 78,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tOS.CGContextAddPath(handle, path.handle);\n\t\tOS.CGContextEOClip(handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tOS.CGContextAddPath(handle, path.handle);\n\t\tOS.CGContextEOClip(handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tOS.CGContextAddPath(handle, path.handle);\n\t\tOS.CGContextEOClip(handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 79,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 80,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 82,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\tcase SWT.FILL_EVEN_ODD: break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.fillRule = rule;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\tcase SWT.FILL_EVEN_ODD: break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.fillRule = rule;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\tcase SWT.FILL_EVEN_ODD: break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.fillRule = rule;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 83,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font;\n\tsetGCFont ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font;\n\tsetGCFont ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font;\n\tsetGCFont ();\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 85,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tint colorspace = data.device.colorspace;\n\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\tOS.CGContextSetStrokeColor(handle, color.handle);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tdata.forePattern = 0;\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tint colorspace = data.device.colorspace;\n\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\tOS.CGContextSetStrokeColor(handle, color.handle);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tdata.forePattern = 0;\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tint colorspace = data.device.colorspace;\n\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\tOS.CGContextSetStrokeColor(handle, color.handle);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tdata.forePattern = 0;\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 86,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tif (pattern != null) {\n\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\t\tOS.CGColorSpaceRelease(colorspace);\n\t\tdata.forePattern = pattern.createPattern(handle);\n\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\t} else {\n\t\tint colorspace = data.device.colorspace;\n\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\t\tfloat[] color = data.foreground;\n\t\tOS.CGContextSetStrokeColor(handle, color);\n\t\tdata.forePattern = 0;\t\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tif (pattern != null) {\n\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\t\tOS.CGColorSpaceRelease(colorspace);\n\t\tdata.forePattern = pattern.createPattern(handle);\n\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\t} else {\n\t\tint colorspace = data.device.colorspace;\n\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\t\tfloat[] color = data.foreground;\n\t\tOS.CGContextSetStrokeColor(handle, color);\n\t\tdata.forePattern = 0;\t\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.forePattern != 0) OS.CGPatternRelease(data.forePattern);\n\tif (pattern != null) {\n\t\tint colorspace = OS.CGColorSpaceCreatePattern(data.device.colorspace);\n\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\t\tOS.CGColorSpaceRelease(colorspace);\n\t\tdata.forePattern = pattern.createPattern(handle);\n\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\t} else {\n\t\tint colorspace = data.device.colorspace;\n\t\tOS.CGContextSetStrokeColorSpace(handle, colorspace);\n\t\tfloat[] color = data.foreground;\n\t\tOS.CGContextSetStrokeColor(handle, color);\n\t\tdata.forePattern = 0;\t\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 87,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint quality = 0;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT: quality = OS.kCGInterpolationDefault; break;\n\t\tcase SWT.NONE: quality = OS.kCGInterpolationNone; break;\n\t\tcase SWT.LOW: quality = OS.kCGInterpolationLow; break;\n\t\tcase SWT.HIGH: quality = OS.kCGInterpolationHigh; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.CGContextSetInterpolationQuality(handle, quality);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint quality = 0;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT: quality = OS.kCGInterpolationDefault; break;\n\t\tcase SWT.NONE: quality = OS.kCGInterpolationNone; break;\n\t\tcase SWT.LOW: quality = OS.kCGInterpolationLow; break;\n\t\tcase SWT.HIGH: quality = OS.kCGInterpolationHigh; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.CGContextSetInterpolationQuality(handle, quality);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint quality = 0;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT: quality = OS.kCGInterpolationDefault; break;\n\t\tcase SWT.NONE: quality = OS.kCGInterpolationNone; break;\n\t\tcase SWT.LOW: quality = OS.kCGInterpolationLow; break;\n\t\tcase SWT.HIGH: quality = OS.kCGInterpolationHigh; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.CGContextSetInterpolationQuality(handle, quality);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint cap_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.kCGLineCapRound;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.kCGLineCapButt;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.kCGLineCapSquare;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineCap = cap;\n\tOS.CGContextSetLineCap(handle, cap_style);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint cap_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.kCGLineCapRound;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.kCGLineCapButt;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.kCGLineCapSquare;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineCap = cap;\n\tOS.CGContextSetLineCap(handle, cap_style);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint cap_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.kCGLineCapRound;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.kCGLineCapButt;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.kCGLineCapSquare;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineCap = cap;\n\tOS.CGContextSetLineCap(handle, cap_style);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 89,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tfloat[] lengths = null;\n\tif (dashes != null && dashes.length != 0) {\n\t\tlengths = new float[dashes.length];\n\t\tfor (int i = 0; i < lengths.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tlengths[i] = dash;\n\t\t}\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tOS.CGContextSetLineDash(handle, 0, lengths, lengths != null ? lengths.length : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tfloat[] lengths = null;\n\tif (dashes != null && dashes.length != 0) {\n\t\tlengths = new float[dashes.length];\n\t\tfor (int i = 0; i < lengths.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tlengths[i] = dash;\n\t\t}\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tOS.CGContextSetLineDash(handle, 0, lengths, lengths != null ? lengths.length : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tfloat[] lengths = null;\n\tif (dashes != null && dashes.length != 0) {\n\t\tlengths = new float[dashes.length];\n\t\tfor (int i = 0; i < lengths.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tlengths[i] = dash;\n\t\t}\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tOS.CGContextSetLineDash(handle, 0, lengths, lengths != null ? lengths.length : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint join_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.kCGLineJoinMiter;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.kCGLineJoinRound;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.kCGLineJoinBevel;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineJoin = join;\n\tOS.CGContextSetLineJoin(handle, join_style);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint join_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.kCGLineJoinMiter;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.kCGLineJoinRound;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.kCGLineJoinBevel;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineJoin = join;\n\tOS.CGContextSetLineJoin(handle, join_style);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint join_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.kCGLineJoinMiter;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.kCGLineJoinRound;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.kCGLineJoinBevel;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineJoin = join;\n\tOS.CGContextSetLineJoin(handle, join_style);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 91,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint[] dashes = null;\n\tint width = data.lineWidth;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tif (dashes != null) {\n\t\tfloat[] lengths = new float[dashes.length];\n\t\tfor (int i = 0; i < lengths.length; i++) {\n\t\t\tlengths[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t}\n\t\tOS.CGContextSetLineDash(handle, 0, lengths, lengths.length);\n\t} else {\n\t\tOS.CGContextSetLineDash(handle, 0, null, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint[] dashes = null;\n\tint width = data.lineWidth;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tif (dashes != null) {\n\t\tfloat[] lengths = new float[dashes.length];\n\t\tfor (int i = 0; i < lengths.length; i++) {\n\t\t\tlengths[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t}\n\t\tOS.CGContextSetLineDash(handle, 0, lengths, lengths.length);\n\t} else {\n\t\tOS.CGContextSetLineDash(handle, 0, null, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint[] dashes = null;\n\tint width = data.lineWidth;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tif (dashes != null) {\n\t\tfloat[] lengths = new float[dashes.length];\n\t\tfor (int i = 0; i < lengths.length; i++) {\n\t\t\tlengths[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t}\n\t\tOS.CGContextSetLineDash(handle, 0, lengths, lengths.length);\n\t} else {\n\t\tOS.CGContextSetLineDash(handle, 0, null, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 92,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tdata.lineWidth = width;\n\tOS.CGContextSetLineWidth(handle, Math.max(1, width));\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tdata.lineWidth = width;\n\tOS.CGContextSetLineWidth(handle, Math.max(1, width));\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tdata.lineWidth = width;\n\tOS.CGContextSetLineWidth(handle, Math.max(1, width));\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 94,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//NOT DONE\n\tdata.xorMode = xor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t//NOT DONE\n\tdata.xorMode = xor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t//NOT DONE\n\tdata.xorMode = xor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 96,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.OFF:\n\t\tcase SWT.ON:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.textAntialias = antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.OFF:\n\t\tcase SWT.ON:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.textAntialias = antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.OFF:\n\t\tcase SWT.ON:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.textAntialias = antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 97,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.CGContextConcatCTM(handle, data.inverseTransform);\n\tif (transform != null) {\n\t\tOS.CGContextConcatCTM(handle, transform.handle);\n\t\tSystem.arraycopy(transform.handle, 0, data.transform, 0, data.transform.length);\n\t\tSystem.arraycopy(transform.handle, 0, data.inverseTransform, 0, data.inverseTransform.length);\n\t\tOS.CGAffineTransformInvert(data.inverseTransform, data.inverseTransform);\n\t} else {\n\t\tdata.transform = new float[]{1, 0, 0, 1, 0, 0};\n\t\tdata.inverseTransform = new float[]{1, 0, 0, 1, 0, 0};\n\t}\n\tif (data.forePattern != 0) {\n\t\tOS.CGPatternRelease(data.forePattern);\n\t\tdata.forePattern = data.foregroundPattern.createPattern(handle);\n\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\t}\n\tif (data.backPattern != 0) {\n\t\tOS.CGPatternRelease(data.backPattern);\n\t\tdata.backPattern = data.backgroundPattern.createPattern(handle);\n\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\t}\n\t//TODO - rounds off problems\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint newRgn = OS.NewRgn();\n\t\tCallback callback = new Callback(this, \"regionToRects\", 4);\n\t\tint proc = callback.getAddress();\n\t\tif (proc == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);\n\t\tOS.QDRegionToRects(clipRgn, OS.kQDParseRegionFromTopLeft, proc, newRgn);\n\t\tcallback.dispose();\n\t\tOS.DisposeRgn(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.CGContextConcatCTM(handle, data.inverseTransform);\n\tif (transform != null) {\n\t\tOS.CGContextConcatCTM(handle, transform.handle);\n\t\tSystem.arraycopy(transform.handle, 0, data.transform, 0, data.transform.length);\n\t\tSystem.arraycopy(transform.handle, 0, data.inverseTransform, 0, data.inverseTransform.length);\n\t\tOS.CGAffineTransformInvert(data.inverseTransform, data.inverseTransform);\n\t} else {\n\t\tdata.transform = new float[]{1, 0, 0, 1, 0, 0};\n\t\tdata.inverseTransform = new float[]{1, 0, 0, 1, 0, 0};\n\t}\n\tif (data.forePattern != 0) {\n\t\tOS.CGPatternRelease(data.forePattern);\n\t\tdata.forePattern = data.foregroundPattern.createPattern(handle);\n\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\t}\n\tif (data.backPattern != 0) {\n\t\tOS.CGPatternRelease(data.backPattern);\n\t\tdata.backPattern = data.backgroundPattern.createPattern(handle);\n\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\t}\n\t//TODO - rounds off problems\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint newRgn = OS.NewRgn();\n\t\tCallback callback = new Callback(this, \"regionToRects\", 4);\n\t\tint proc = callback.getAddress();\n\t\tif (proc == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);\n\t\tOS.QDRegionToRects(clipRgn, OS.kQDParseRegionFromTopLeft, proc, newRgn);\n\t\tcallback.dispose();\n\t\tOS.DisposeRgn(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.CGContextConcatCTM(handle, data.inverseTransform);\n\tif (transform != null) {\n\t\tOS.CGContextConcatCTM(handle, transform.handle);\n\t\tSystem.arraycopy(transform.handle, 0, data.transform, 0, data.transform.length);\n\t\tSystem.arraycopy(transform.handle, 0, data.inverseTransform, 0, data.inverseTransform.length);\n\t\tOS.CGAffineTransformInvert(data.inverseTransform, data.inverseTransform);\n\t} else {\n\t\tdata.transform = new float[]{1, 0, 0, 1, 0, 0};\n\t\tdata.inverseTransform = new float[]{1, 0, 0, 1, 0, 0};\n\t}\n\tif (data.forePattern != 0) {\n\t\tOS.CGPatternRelease(data.forePattern);\n\t\tdata.forePattern = data.foregroundPattern.createPattern(handle);\n\t\tOS.CGContextSetStrokePattern(handle, data.forePattern, data.foreground);\n\t}\n\tif (data.backPattern != 0) {\n\t\tOS.CGPatternRelease(data.backPattern);\n\t\tdata.backPattern = data.backgroundPattern.createPattern(handle);\n\t\tOS.CGContextSetFillPattern(handle, data.backPattern, data.background);\n\t}\n\t//TODO - rounds off problems\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint newRgn = OS.NewRgn();\n\t\tCallback callback = new Callback(this, \"regionToRects\", 4);\n\t\tint proc = callback.getAddress();\n\t\tif (proc == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);\n\t\tOS.QDRegionToRects(clipRgn, OS.kQDParseRegionFromTopLeft, proc, newRgn);\n\t\tcallback.dispose();\n\t\tOS.DisposeRgn(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 100,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint length = setString(string, flags);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint width = 0, height;\n\tif (length == 0) {\n\t\theight = data.fontAscent + data.fontDescent;\n\t} else {\n\t\tATSTrapezoid trapezoid = new ATSTrapezoid();\n\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {\n\t\t\theight = 0;\n\t\t\tint layout = data.layout;\n\t\t\tint[] breakCount = new int[1];\n\t\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, 0, null, breakCount);\n\t\t\tint[] breaks = new int[breakCount[0] + 1];\n\t\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, breakCount[0], breaks, breakCount);\n\t\t\tbreaks[breakCount[0]] = length;\n\t\t\tfor (int i=0, start=0; i<breaks.length; i++) {\n\t\t\t\tint lineBreak = breaks[i];\n\t\t\t\tOS.ATSUGetGlyphBounds(layout, 0, 0, start, lineBreak - start, (short)OS.kATSUseDeviceOrigins, 1, trapezoid, null);\n\t\t\t\twidth = Math.max(width, OS.Fix2Long(trapezoid.upperRight_x) - OS.Fix2Long(trapezoid.upperLeft_x));\n\t\t\t\theight += OS.Fix2Long(trapezoid.lowerRight_y) - OS.Fix2Long(trapezoid.upperRight_y);\n\t\t\t\tstart = lineBreak;\n\t\t\t}\n\t\t} else {\n\t\t\tOS.ATSUGetGlyphBounds(data.layout, 0, 0, 0, length, (short)OS.kATSUseDeviceOrigins, 1, trapezoid, null);\n\t\t\twidth = OS.Fix2Long(trapezoid.upperRight_x) - OS.Fix2Long(trapezoid.upperLeft_x);\n\t\t\theight = OS.Fix2Long(trapezoid.lowerRight_y) - OS.Fix2Long(trapezoid.upperRight_y);\n\t\t}\n\t}\n\treturn new Point(data.stringWidth = width, data.stringHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint length = setString(string, flags);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint width = 0, height;\n\tif (length == 0) {\n\t\theight = data.fontAscent + data.fontDescent;\n\t} else {\n\t\tATSTrapezoid trapezoid = new ATSTrapezoid();\n\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {\n\t\t\theight = 0;\n\t\t\tint layout = data.layout;\n\t\t\tint[] breakCount = new int[1];\n\t\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, 0, null, breakCount);\n\t\t\tint[] breaks = new int[breakCount[0] + 1];\n\t\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, breakCount[0], breaks, breakCount);\n\t\t\tbreaks[breakCount[0]] = length;\n\t\t\tfor (int i=0, start=0; i<breaks.length; i++) {\n\t\t\t\tint lineBreak = breaks[i];\n\t\t\t\tOS.ATSUGetGlyphBounds(layout, 0, 0, start, lineBreak - start, (short)OS.kATSUseDeviceOrigins, 1, trapezoid, null);\n\t\t\t\twidth = Math.max(width, OS.Fix2Long(trapezoid.upperRight_x) - OS.Fix2Long(trapezoid.upperLeft_x));\n\t\t\t\theight += OS.Fix2Long(trapezoid.lowerRight_y) - OS.Fix2Long(trapezoid.upperRight_y);\n\t\t\t\tstart = lineBreak;\n\t\t\t}\n\t\t} else {\n\t\t\tOS.ATSUGetGlyphBounds(data.layout, 0, 0, 0, length, (short)OS.kATSUseDeviceOrigins, 1, trapezoid, null);\n\t\t\twidth = OS.Fix2Long(trapezoid.upperRight_x) - OS.Fix2Long(trapezoid.upperLeft_x);\n\t\t\theight = OS.Fix2Long(trapezoid.lowerRight_y) - OS.Fix2Long(trapezoid.upperRight_y);\n\t\t}\n\t}\n\treturn new Point(data.stringWidth = width, data.stringHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint length = setString(string, flags);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint width = 0, height;\n\tif (length == 0) {\n\t\theight = data.fontAscent + data.fontDescent;\n\t} else {\n\t\tATSTrapezoid trapezoid = new ATSTrapezoid();\n\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {\n\t\t\theight = 0;\n\t\t\tint layout = data.layout;\n\t\t\tint[] breakCount = new int[1];\n\t\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, 0, null, breakCount);\n\t\t\tint[] breaks = new int[breakCount[0] + 1];\n\t\t\tOS.ATSUGetSoftLineBreaks(layout, 0, length, breakCount[0], breaks, breakCount);\n\t\t\tbreaks[breakCount[0]] = length;\n\t\t\tfor (int i=0, start=0; i<breaks.length; i++) {\n\t\t\t\tint lineBreak = breaks[i];\n\t\t\t\tOS.ATSUGetGlyphBounds(layout, 0, 0, start, lineBreak - start, (short)OS.kATSUseDeviceOrigins, 1, trapezoid, null);\n\t\t\t\twidth = Math.max(width, OS.Fix2Long(trapezoid.upperRight_x) - OS.Fix2Long(trapezoid.upperLeft_x));\n\t\t\t\theight += OS.Fix2Long(trapezoid.lowerRight_y) - OS.Fix2Long(trapezoid.upperRight_y);\n\t\t\t\tstart = lineBreak;\n\t\t\t}\n\t\t} else {\n\t\t\tOS.ATSUGetGlyphBounds(data.layout, 0, 0, 0, length, (short)OS.kATSUseDeviceOrigins, 1, trapezoid, null);\n\t\t\twidth = OS.Fix2Long(trapezoid.upperRight_x) - OS.Fix2Long(trapezoid.upperLeft_x);\n\t\t\theight = OS.Fix2Long(trapezoid.lowerRight_y) - OS.Fix2Long(trapezoid.upperRight_y);\n\t\t}\n\t}\n\treturn new Point(data.stringWidth = width, data.stringHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tRectangle bounds = image.getBounds();\n\t\tint memImage = 0;\n\t\tPhRect_t rect = new PhRect_t();\n\t\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\t\trect.lr_x = (short)(x + bounds.width - 1); rect.lr_y = (short)(y + bounds.height - 1);\n\t\tboolean sharedMem = true;\n\t\tint rid = data.rid;\n\t\tint widget = data.widget;\n\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\tmemImage = OS.PgShmemCreate(OS.PgReadScreenSize(rect), null);\n\t\t\tif (memImage != 0) memImage = OS.PgReadScreen(rect, memImage);\n\t\t} else if (widget != 0) {\n\t\t\tshort [] widget_x = new short [1], widget_y = new short [1];\n\t\t\tOS.PtGetAbsPosition(widget, widget_x, widget_y);\n\t\t\trect.ul_x += widget_x[0];\n\t\t\trect.ul_y += widget_y[0];\n\t\t\trect.lr_x += widget_y[0];\n\t\t\trect.lr_y += widget_y[0];\n\t\t\tmemImage = OS.PgShmemCreate(OS.PgReadScreenSize(rect), null);\n\t\t\tif (memImage != 0) memImage = OS.PgReadScreen(rect, memImage);\n\t\t} else if (data.image != null) {\n\t\t\tmemImage = OS.PiCropImage(data.image.handle, rect, 0);\n\t\t\tsharedMem = false;\n\t\t}\n\t\tif (memImage == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tPhImage_t phImage = new PhImage_t();\n\t\tOS.memmove(phImage, memImage, PhImage_t.sizeof);\n\t\tPhPoint_t trans = new PhPoint_t();\n\t\tPhPoint_t pos = new PhPoint_t();\n\t\tPhDim_t scale = new PhDim_t();\n\t\tscale.w = (short)bounds.width;\n\t\tscale.h = (short)bounds.height;\n\t\tint mc = OS.PmMemCreateMC(image.handle, scale, trans);\n\t\tint prevContext = OS.PmMemStart(mc);\n\t\tOS.PgSetDrawBufferSize(DrawBufferSize);\n\t\tif (phImage.palette != 0) OS.PgSetPalette(phImage.palette, 0, (short)0, (short)phImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\tOS.PgDrawImage(phImage.image, phImage.type, pos, scale, phImage.bpl, 0);\n\t\tif (phImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\tOS.PmMemFlush(mc, image.handle);\n\t\tOS.PmMemStop(mc);\n\t\tOS.PmMemReleaseMC(mc);\n\t\tOS.PhDCSetCurrent(prevContext);\n\t\tif (sharedMem) {\n\t\t\tOS.PgShmemDestroy(memImage);\n\t\t} else {\n\t\t\tphImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\tOS.memmove(memImage, phImage, PhImage_t.sizeof);\n\t\t\tOS.PhReleaseImage(memImage);\n\t\t\tOS.free(memImage);\t\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tRectangle bounds = image.getBounds();\n\t\tint memImage = 0;\n\t\tPhRect_t rect = new PhRect_t();\n\t\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\t\trect.lr_x = (short)(x + bounds.width - 1); rect.lr_y = (short)(y + bounds.height - 1);\n\t\tboolean sharedMem = true;\n\t\tint rid = data.rid;\n\t\tint widget = data.widget;\n\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\tmemImage = OS.PgShmemCreate(OS.PgReadScreenSize(rect), null);\n\t\t\tif (memImage != 0) memImage = OS.PgReadScreen(rect, memImage);\n\t\t} else if (widget != 0) {\n\t\t\tshort [] widget_x = new short [1], widget_y = new short [1];\n\t\t\tOS.PtGetAbsPosition(widget, widget_x, widget_y);\n\t\t\trect.ul_x += widget_x[0];\n\t\t\trect.ul_y += widget_y[0];\n\t\t\trect.lr_x += widget_y[0];\n\t\t\trect.lr_y += widget_y[0];\n\t\t\tmemImage = OS.PgShmemCreate(OS.PgReadScreenSize(rect), null);\n\t\t\tif (memImage != 0) memImage = OS.PgReadScreen(rect, memImage);\n\t\t} else if (data.image != null) {\n\t\t\tmemImage = OS.PiCropImage(data.image.handle, rect, 0);\n\t\t\tsharedMem = false;\n\t\t}\n\t\tif (memImage == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tPhImage_t phImage = new PhImage_t();\n\t\tOS.memmove(phImage, memImage, PhImage_t.sizeof);\n\t\tPhPoint_t trans = new PhPoint_t();\n\t\tPhPoint_t pos = new PhPoint_t();\n\t\tPhDim_t scale = new PhDim_t();\n\t\tscale.w = (short)bounds.width;\n\t\tscale.h = (short)bounds.height;\n\t\tint mc = OS.PmMemCreateMC(image.handle, scale, trans);\n\t\tint prevContext = OS.PmMemStart(mc);\n\t\tOS.PgSetDrawBufferSize(DrawBufferSize);\n\t\tif (phImage.palette != 0) OS.PgSetPalette(phImage.palette, 0, (short)0, (short)phImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\tOS.PgDrawImage(phImage.image, phImage.type, pos, scale, phImage.bpl, 0);\n\t\tif (phImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\tOS.PmMemFlush(mc, image.handle);\n\t\tOS.PmMemStop(mc);\n\t\tOS.PmMemReleaseMC(mc);\n\t\tOS.PhDCSetCurrent(prevContext);\n\t\tif (sharedMem) {\n\t\t\tOS.PgShmemDestroy(memImage);\n\t\t} else {\n\t\t\tphImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\tOS.memmove(memImage, phImage, PhImage_t.sizeof);\n\t\t\tOS.PhReleaseImage(memImage);\n\t\t\tOS.free(memImage);\t\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tRectangle bounds = image.getBounds();\n\t\tint memImage = 0;\n\t\tPhRect_t rect = new PhRect_t();\n\t\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\t\trect.lr_x = (short)(x + bounds.width - 1); rect.lr_y = (short)(y + bounds.height - 1);\n\t\tboolean sharedMem = true;\n\t\tint rid = data.rid;\n\t\tint widget = data.widget;\n\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\tmemImage = OS.PgShmemCreate(OS.PgReadScreenSize(rect), null);\n\t\t\tif (memImage != 0) memImage = OS.PgReadScreen(rect, memImage);\n\t\t} else if (widget != 0) {\n\t\t\tshort [] widget_x = new short [1], widget_y = new short [1];\n\t\t\tOS.PtGetAbsPosition(widget, widget_x, widget_y);\n\t\t\trect.ul_x += widget_x[0];\n\t\t\trect.ul_y += widget_y[0];\n\t\t\trect.lr_x += widget_y[0];\n\t\t\trect.lr_y += widget_y[0];\n\t\t\tmemImage = OS.PgShmemCreate(OS.PgReadScreenSize(rect), null);\n\t\t\tif (memImage != 0) memImage = OS.PgReadScreen(rect, memImage);\n\t\t} else if (data.image != null) {\n\t\t\tmemImage = OS.PiCropImage(data.image.handle, rect, 0);\n\t\t\tsharedMem = false;\n\t\t}\n\t\tif (memImage == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tPhImage_t phImage = new PhImage_t();\n\t\tOS.memmove(phImage, memImage, PhImage_t.sizeof);\n\t\tPhPoint_t trans = new PhPoint_t();\n\t\tPhPoint_t pos = new PhPoint_t();\n\t\tPhDim_t scale = new PhDim_t();\n\t\tscale.w = (short)bounds.width;\n\t\tscale.h = (short)bounds.height;\n\t\tint mc = OS.PmMemCreateMC(image.handle, scale, trans);\n\t\tint prevContext = OS.PmMemStart(mc);\n\t\tOS.PgSetDrawBufferSize(DrawBufferSize);\n\t\tif (phImage.palette != 0) OS.PgSetPalette(phImage.palette, 0, (short)0, (short)phImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\tOS.PgDrawImage(phImage.image, phImage.type, pos, scale, phImage.bpl, 0);\n\t\tif (phImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\tOS.PmMemFlush(mc, image.handle);\n\t\tOS.PmMemStop(mc);\n\t\tOS.PmMemReleaseMC(mc);\n\t\tOS.PhDCSetCurrent(prevContext);\n\t\tif (sharedMem) {\n\t\t\tOS.PgShmemDestroy(memImage);\n\t\t} else {\n\t\t\tphImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\tOS.memmove(memImage, phImage, PhImage_t.sizeof);\n\t\t\tOS.PhReleaseImage(memImage);\n\t\t\tOS.free(memImage);\t\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width == 0 || height == 0) return;\n\tint deltaX = destX - x, deltaY = destY - y;\n\tif (deltaX == 0 && deltaY == 0) return;\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tboolean overlaps = (destX < x + width) && (destY < y + height) &&\n\t\t\t(destX + width > x) && (destY + height > y);\n\t\tint widget = data.widget;\n\t\tImage image = data.image;\n\t\tif (image != null) {\n\t\t\tint drawImage = image.handle;\n\t\t\tPhImage_t phDrawImage = new PhImage_t();\n\t\t\tOS.memmove(phDrawImage, drawImage, PhImage_t.sizeof);\n\t\t\tif (overlaps) {\n\t\t\t\tPhPoint_t trans = new PhPoint_t();\n\t\t\t\tPhDim_t scale = new PhDim_t();\n\t\t\t\tscale.w = (short)width;\n\t\t\t\tscale.h = (short)height;\n\t\t\t\tPhPoint_t pos = new PhPoint_t();\n\t\t\t\tpos.x = (short)-x;\n\t\t\t\tpos.y = (short)-y;\n\t\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\t\tdim.w = (short)Math.min(phDrawImage.size_w, x + width);\n\t\t\t\tdim.h = (short)Math.min(phDrawImage.size_h, y + height);\n\t\t\t\t/* Feature on Photon - It is only possible to draw on images of\n\t\t\t\t   type Pg_IMAGE_PALETTE_BYTE and Pg_IMAGE_DIRECT_888.\n\t\t\t\t*/\n\t\t\t\tint type = OS.Pg_IMAGE_PALETTE_BYTE;\n\t\t\t\tif ((phDrawImage.type & OS.Pg_IMAGE_CLASS_MASK) == OS.Pg_IMAGE_CLASS_DIRECT) {\n\t\t\t\t\ttype = OS.Pg_IMAGE_DIRECT_888;\n\t\t\t\t}\n\t\t\t\tint memImage = OS.PhCreateImage(null, (short)width, (short)height, type, phDrawImage.palette, phDrawImage.colors, 0);\n\t\t\t\tint mc = OS.PmMemCreateMC(memImage, scale, trans);\n\t\t\t\tint prevContext = OS.PmMemStart(mc);\n\t\t\t\tOS.PgSetDrawBufferSize(DrawBufferSize);\n\t\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(phDrawImage.palette, 0, (short)0, (short)phDrawImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\t\t\tOS.PgDrawImage(phDrawImage.image, phDrawImage.type, pos, dim, phDrawImage.bpl, 0);\n\t\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\t\t\tOS.PmMemFlush(mc, memImage);\n\t\t\t\tOS.PmMemStop(mc);\n\t\t\t\tOS.PmMemReleaseMC(mc);\n\t\t\t\tOS.PhDCSetCurrent(prevContext);\n\t\t\t\tx = (short)0;\n\t\t\t\ty = (short)0;\n\t\t\t\tdrawImage = memImage;\n\t\t\t\tOS.memmove(phDrawImage, drawImage, PhImage_t.sizeof);\n\t\t\t\tphDrawImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\t\tOS.memmove(drawImage, phDrawImage, PhImage_t.sizeof);\n\t\t\t}\n\t\t\tPhPoint_t pos = new PhPoint_t();\n\t\t\tpos.x = (short)(destX - x);\n\t\t\tpos.y = (short)(destY - y);\n\t\t\tPhRect_t clip = new PhRect_t();\n\t\t\tclip.ul_x = (short)destX;\n\t\t\tclip.ul_y = (short)destY;\n\t\t\tclip.lr_x = (short)(destX + width - 1);\n\t\t\tclip.lr_y = (short)(destY + height - 1);\n\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\tdim.w = (short)Math.min(phDrawImage.size_w, x + width);\n\t\t\tdim.h = (short)Math.min(phDrawImage.size_h, y + height);\n\t\t\tint prevContext = setGC();\n\t\t\tsetGCClipping();\n\t\t\tOS.PgSetUserClip(clip);\n\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(phDrawImage.palette, 0, (short)0, (short)phDrawImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\t\tOS.PgDrawImage(phDrawImage.image, phDrawImage.type, pos, dim, phDrawImage.bpl, 0);\n\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\t\tOS.PgSetUserClip(null);\n\t\t\tunsetGC(prevContext);\n\t\t\tif (drawImage != image.handle) {\n\t\t\t\tOS.PhReleaseImage(drawImage);\n\t\t\t\tOS.free(drawImage);\n\t\t\t}\n\t\t} else if (widget != 0) {\n\t\t\tPhRect_t rect = new PhRect_t();\n\t\t\trect.ul_x = (short)x;\n\t\t\trect.ul_y = (short)y;\n\t\t\trect.lr_x = (short)(x + width - 1);\n\t\t\trect.lr_y = (short)(y + height - 1);\n\t\t\tPhPoint_t delta = new PhPoint_t();\n\t\t\tdelta.x = (short)deltaX;\n\t\t\tdelta.y = (short)deltaY;\n\t\t\tint clipRects = data.clipRects;\n\t\t\tint child_clip = getClipping(widget, data.topWidget, true, true, null);\n\t\t\tif (clipRects == 0 && child_clip == 0) {\n\t\t\t\tOS.PtBlit(widget, rect, delta);\n\t\t\t} else {\n\t\t\t\tint srcTile = OS.PhGetTile();\n\t\t\t\tOS.memmove(srcTile, rect, PhRect_t.sizeof);\n\t\t\t\tint clip = child_clip;\n\t\t\t\tif (clipRects != 0) {\n\t\t\t\t\tclip = OS.PhRectsToTiles(clipRects, data.clipRectsCount);\n\t\t\t\t\tif (child_clip != 0) {\n\t\t\t\t\t\tshort[] unused = new short[1];\n\t\t\t\t\t\tint newClip = OS.PhIntersectTilings(clip, child_clip, unused);\n\t\t\t\t\t\tOS.PhFreeTiles(child_clip);\n\t\t\t\t\t\tOS.PhFreeTiles(clip);\n\t\t\t\t\t\tclip = newClip;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tOS.PtClippedBlit(widget, srcTile, delta, clip);\n\t\t\t\tOS.PhFreeTiles(clip);\n\t\t\t}\t\t\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width == 0 || height == 0) return;\n\tint deltaX = destX - x, deltaY = destY - y;\n\tif (deltaX == 0 && deltaY == 0) return;\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tboolean overlaps = (destX < x + width) && (destY < y + height) &&\n\t\t\t(destX + width > x) && (destY + height > y);\n\t\tint widget = data.widget;\n\t\tImage image = data.image;\n\t\tif (image != null) {\n\t\t\tint drawImage = image.handle;\n\t\t\tPhImage_t phDrawImage = new PhImage_t();\n\t\t\tOS.memmove(phDrawImage, drawImage, PhImage_t.sizeof);\n\t\t\tif (overlaps) {\n\t\t\t\tPhPoint_t trans = new PhPoint_t();\n\t\t\t\tPhDim_t scale = new PhDim_t();\n\t\t\t\tscale.w = (short)width;\n\t\t\t\tscale.h = (short)height;\n\t\t\t\tPhPoint_t pos = new PhPoint_t();\n\t\t\t\tpos.x = (short)-x;\n\t\t\t\tpos.y = (short)-y;\n\t\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\t\tdim.w = (short)Math.min(phDrawImage.size_w, x + width);\n\t\t\t\tdim.h = (short)Math.min(phDrawImage.size_h, y + height);\n\t\t\t\t/* Feature on Photon - It is only possible to draw on images of\n\t\t\t\t   type Pg_IMAGE_PALETTE_BYTE and Pg_IMAGE_DIRECT_888.\n\t\t\t\t*/\n\t\t\t\tint type = OS.Pg_IMAGE_PALETTE_BYTE;\n\t\t\t\tif ((phDrawImage.type & OS.Pg_IMAGE_CLASS_MASK) == OS.Pg_IMAGE_CLASS_DIRECT) {\n\t\t\t\t\ttype = OS.Pg_IMAGE_DIRECT_888;\n\t\t\t\t}\n\t\t\t\tint memImage = OS.PhCreateImage(null, (short)width, (short)height, type, phDrawImage.palette, phDrawImage.colors, 0);\n\t\t\t\tint mc = OS.PmMemCreateMC(memImage, scale, trans);\n\t\t\t\tint prevContext = OS.PmMemStart(mc);\n\t\t\t\tOS.PgSetDrawBufferSize(DrawBufferSize);\n\t\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(phDrawImage.palette, 0, (short)0, (short)phDrawImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\t\t\tOS.PgDrawImage(phDrawImage.image, phDrawImage.type, pos, dim, phDrawImage.bpl, 0);\n\t\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\t\t\tOS.PmMemFlush(mc, memImage);\n\t\t\t\tOS.PmMemStop(mc);\n\t\t\t\tOS.PmMemReleaseMC(mc);\n\t\t\t\tOS.PhDCSetCurrent(prevContext);\n\t\t\t\tx = (short)0;\n\t\t\t\ty = (short)0;\n\t\t\t\tdrawImage = memImage;\n\t\t\t\tOS.memmove(phDrawImage, drawImage, PhImage_t.sizeof);\n\t\t\t\tphDrawImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\t\tOS.memmove(drawImage, phDrawImage, PhImage_t.sizeof);\n\t\t\t}\n\t\t\tPhPoint_t pos = new PhPoint_t();\n\t\t\tpos.x = (short)(destX - x);\n\t\t\tpos.y = (short)(destY - y);\n\t\t\tPhRect_t clip = new PhRect_t();\n\t\t\tclip.ul_x = (short)destX;\n\t\t\tclip.ul_y = (short)destY;\n\t\t\tclip.lr_x = (short)(destX + width - 1);\n\t\t\tclip.lr_y = (short)(destY + height - 1);\n\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\tdim.w = (short)Math.min(phDrawImage.size_w, x + width);\n\t\t\tdim.h = (short)Math.min(phDrawImage.size_h, y + height);\n\t\t\tint prevContext = setGC();\n\t\t\tsetGCClipping();\n\t\t\tOS.PgSetUserClip(clip);\n\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(phDrawImage.palette, 0, (short)0, (short)phDrawImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\t\tOS.PgDrawImage(phDrawImage.image, phDrawImage.type, pos, dim, phDrawImage.bpl, 0);\n\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\t\tOS.PgSetUserClip(null);\n\t\t\tunsetGC(prevContext);\n\t\t\tif (drawImage != image.handle) {\n\t\t\t\tOS.PhReleaseImage(drawImage);\n\t\t\t\tOS.free(drawImage);\n\t\t\t}\n\t\t} else if (widget != 0) {\n\t\t\tPhRect_t rect = new PhRect_t();\n\t\t\trect.ul_x = (short)x;\n\t\t\trect.ul_y = (short)y;\n\t\t\trect.lr_x = (short)(x + width - 1);\n\t\t\trect.lr_y = (short)(y + height - 1);\n\t\t\tPhPoint_t delta = new PhPoint_t();\n\t\t\tdelta.x = (short)deltaX;\n\t\t\tdelta.y = (short)deltaY;\n\t\t\tint clipRects = data.clipRects;\n\t\t\tint child_clip = getClipping(widget, data.topWidget, true, true, null);\n\t\t\tif (clipRects == 0 && child_clip == 0) {\n\t\t\t\tOS.PtBlit(widget, rect, delta);\n\t\t\t} else {\n\t\t\t\tint srcTile = OS.PhGetTile();\n\t\t\t\tOS.memmove(srcTile, rect, PhRect_t.sizeof);\n\t\t\t\tint clip = child_clip;\n\t\t\t\tif (clipRects != 0) {\n\t\t\t\t\tclip = OS.PhRectsToTiles(clipRects, data.clipRectsCount);\n\t\t\t\t\tif (child_clip != 0) {\n\t\t\t\t\t\tshort[] unused = new short[1];\n\t\t\t\t\t\tint newClip = OS.PhIntersectTilings(clip, child_clip, unused);\n\t\t\t\t\t\tOS.PhFreeTiles(child_clip);\n\t\t\t\t\t\tOS.PhFreeTiles(clip);\n\t\t\t\t\t\tclip = newClip;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tOS.PtClippedBlit(widget, srcTile, delta, clip);\n\t\t\t\tOS.PhFreeTiles(clip);\n\t\t\t}\t\t\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width == 0 || height == 0) return;\n\tint deltaX = destX - x, deltaY = destY - y;\n\tif (deltaX == 0 && deltaY == 0) return;\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tboolean overlaps = (destX < x + width) && (destY < y + height) &&\n\t\t\t(destX + width > x) && (destY + height > y);\n\t\tint widget = data.widget;\n\t\tImage image = data.image;\n\t\tif (image != null) {\n\t\t\tint drawImage = image.handle;\n\t\t\tPhImage_t phDrawImage = new PhImage_t();\n\t\t\tOS.memmove(phDrawImage, drawImage, PhImage_t.sizeof);\n\t\t\tif (overlaps) {\n\t\t\t\tPhPoint_t trans = new PhPoint_t();\n\t\t\t\tPhDim_t scale = new PhDim_t();\n\t\t\t\tscale.w = (short)width;\n\t\t\t\tscale.h = (short)height;\n\t\t\t\tPhPoint_t pos = new PhPoint_t();\n\t\t\t\tpos.x = (short)-x;\n\t\t\t\tpos.y = (short)-y;\n\t\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\t\tdim.w = (short)Math.min(phDrawImage.size_w, x + width);\n\t\t\t\tdim.h = (short)Math.min(phDrawImage.size_h, y + height);\n\t\t\t\t/* Feature on Photon - It is only possible to draw on images of\n\t\t\t\t   type Pg_IMAGE_PALETTE_BYTE and Pg_IMAGE_DIRECT_888.\n\t\t\t\t*/\n\t\t\t\tint type = OS.Pg_IMAGE_PALETTE_BYTE;\n\t\t\t\tif ((phDrawImage.type & OS.Pg_IMAGE_CLASS_MASK) == OS.Pg_IMAGE_CLASS_DIRECT) {\n\t\t\t\t\ttype = OS.Pg_IMAGE_DIRECT_888;\n\t\t\t\t}\n\t\t\t\tint memImage = OS.PhCreateImage(null, (short)width, (short)height, type, phDrawImage.palette, phDrawImage.colors, 0);\n\t\t\t\tint mc = OS.PmMemCreateMC(memImage, scale, trans);\n\t\t\t\tint prevContext = OS.PmMemStart(mc);\n\t\t\t\tOS.PgSetDrawBufferSize(DrawBufferSize);\n\t\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(phDrawImage.palette, 0, (short)0, (short)phDrawImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\t\t\tOS.PgDrawImage(phDrawImage.image, phDrawImage.type, pos, dim, phDrawImage.bpl, 0);\n\t\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\t\t\tOS.PmMemFlush(mc, memImage);\n\t\t\t\tOS.PmMemStop(mc);\n\t\t\t\tOS.PmMemReleaseMC(mc);\n\t\t\t\tOS.PhDCSetCurrent(prevContext);\n\t\t\t\tx = (short)0;\n\t\t\t\ty = (short)0;\n\t\t\t\tdrawImage = memImage;\n\t\t\t\tOS.memmove(phDrawImage, drawImage, PhImage_t.sizeof);\n\t\t\t\tphDrawImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\t\tOS.memmove(drawImage, phDrawImage, PhImage_t.sizeof);\n\t\t\t}\n\t\t\tPhPoint_t pos = new PhPoint_t();\n\t\t\tpos.x = (short)(destX - x);\n\t\t\tpos.y = (short)(destY - y);\n\t\t\tPhRect_t clip = new PhRect_t();\n\t\t\tclip.ul_x = (short)destX;\n\t\t\tclip.ul_y = (short)destY;\n\t\t\tclip.lr_x = (short)(destX + width - 1);\n\t\t\tclip.lr_y = (short)(destY + height - 1);\n\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\tdim.w = (short)Math.min(phDrawImage.size_w, x + width);\n\t\t\tdim.h = (short)Math.min(phDrawImage.size_h, y + height);\n\t\t\tint prevContext = setGC();\n\t\t\tsetGCClipping();\n\t\t\tOS.PgSetUserClip(clip);\n\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(phDrawImage.palette, 0, (short)0, (short)phDrawImage.colors, OS.Pg_PALSET_SOFT, 0);\n\t\t\tOS.PgDrawImage(phDrawImage.image, phDrawImage.type, pos, dim, phDrawImage.bpl, 0);\n\t\t\tif (phDrawImage.palette != 0) OS.PgSetPalette(0, 0, (short)0, (short)-1, 0, 0);\n\t\t\tOS.PgSetUserClip(null);\n\t\t\tunsetGC(prevContext);\n\t\t\tif (drawImage != image.handle) {\n\t\t\t\tOS.PhReleaseImage(drawImage);\n\t\t\t\tOS.free(drawImage);\n\t\t\t}\n\t\t} else if (widget != 0) {\n\t\t\tPhRect_t rect = new PhRect_t();\n\t\t\trect.ul_x = (short)x;\n\t\t\trect.ul_y = (short)y;\n\t\t\trect.lr_x = (short)(x + width - 1);\n\t\t\trect.lr_y = (short)(y + height - 1);\n\t\t\tPhPoint_t delta = new PhPoint_t();\n\t\t\tdelta.x = (short)deltaX;\n\t\t\tdelta.y = (short)deltaY;\n\t\t\tint clipRects = data.clipRects;\n\t\t\tint child_clip = getClipping(widget, data.topWidget, true, true, null);\n\t\t\tif (clipRects == 0 && child_clip == 0) {\n\t\t\t\tOS.PtBlit(widget, rect, delta);\n\t\t\t} else {\n\t\t\t\tint srcTile = OS.PhGetTile();\n\t\t\t\tOS.memmove(srcTile, rect, PhRect_t.sizeof);\n\t\t\t\tint clip = child_clip;\n\t\t\t\tif (clipRects != 0) {\n\t\t\t\t\tclip = OS.PhRectsToTiles(clipRects, data.clipRectsCount);\n\t\t\t\t\tif (child_clip != 0) {\n\t\t\t\t\t\tshort[] unused = new short[1];\n\t\t\t\t\t\tint newClip = OS.PhIntersectTilings(clip, child_clip, unused);\n\t\t\t\t\t\tOS.PhFreeTiles(child_clip);\n\t\t\t\t\t\tOS.PhFreeTiles(clip);\n\t\t\t\t\t\tclip = newClip;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tOS.PtClippedBlit(widget, srcTile, delta, clip);\n\t\t\t\tOS.PhFreeTiles(clip);\n\t\t\t}\t\t\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (startAngle > 0) {\n\t\tif (arcAngle > 0) {\n\t\t\t//No need to modify start angle.\n\t\t\tarcAngle += startAngle;\n\t\t} else {\n\t\t\tint newStartAngle;\n\t\t\tint newStopAngle = startAngle;\n\t\t\tif (startAngle > Math.abs(arcAngle)) {\n\t\t\t\tnewStartAngle = startAngle - Math.abs(arcAngle);\n\t\t\t} else {\n\t\t\t\tnewStartAngle = startAngle + 360 - Math.abs(arcAngle);\n\t\t\t}\n\t\t\tstartAngle = newStartAngle;\n\t\t\tarcAngle = newStopAngle;\n\t\t}\n\t} else {\n\t\tif (arcAngle > 0) {\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tstartAngle = 360 - Math.abs(startAngle);\n\t\t} else {\n\t\t\tint newStopAngle = 360 + startAngle;\n\t\t\tstartAngle = newStopAngle - Math.abs(arcAngle);\n\t\t\tarcAngle = newStopAngle;\t\t\t\n\t\t}\n\t}\n\tstartAngle = (int) (startAngle * 65536 / 360);\n\tarcAngle = (int) (arcAngle * 65536 / 360);\n\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)(x + (width / 2));\n\tcenter.y = (short)(y + (height / 2));\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(width / 2);\n\tradii.y = (short)(height / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawArc(center, radii, startAngle, arcAngle, OS.Pg_ARC | OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (startAngle > 0) {\n\t\tif (arcAngle > 0) {\n\t\t\t//No need to modify start angle.\n\t\t\tarcAngle += startAngle;\n\t\t} else {\n\t\t\tint newStartAngle;\n\t\t\tint newStopAngle = startAngle;\n\t\t\tif (startAngle > Math.abs(arcAngle)) {\n\t\t\t\tnewStartAngle = startAngle - Math.abs(arcAngle);\n\t\t\t} else {\n\t\t\t\tnewStartAngle = startAngle + 360 - Math.abs(arcAngle);\n\t\t\t}\n\t\t\tstartAngle = newStartAngle;\n\t\t\tarcAngle = newStopAngle;\n\t\t}\n\t} else {\n\t\tif (arcAngle > 0) {\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tstartAngle = 360 - Math.abs(startAngle);\n\t\t} else {\n\t\t\tint newStopAngle = 360 + startAngle;\n\t\t\tstartAngle = newStopAngle - Math.abs(arcAngle);\n\t\t\tarcAngle = newStopAngle;\t\t\t\n\t\t}\n\t}\n\tstartAngle = (int) (startAngle * 65536 / 360);\n\tarcAngle = (int) (arcAngle * 65536 / 360);\n\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)(x + (width / 2));\n\tcenter.y = (short)(y + (height / 2));\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(width / 2);\n\tradii.y = (short)(height / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawArc(center, radii, startAngle, arcAngle, OS.Pg_ARC | OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (startAngle > 0) {\n\t\tif (arcAngle > 0) {\n\t\t\t//No need to modify start angle.\n\t\t\tarcAngle += startAngle;\n\t\t} else {\n\t\t\tint newStartAngle;\n\t\t\tint newStopAngle = startAngle;\n\t\t\tif (startAngle > Math.abs(arcAngle)) {\n\t\t\t\tnewStartAngle = startAngle - Math.abs(arcAngle);\n\t\t\t} else {\n\t\t\t\tnewStartAngle = startAngle + 360 - Math.abs(arcAngle);\n\t\t\t}\n\t\t\tstartAngle = newStartAngle;\n\t\t\tarcAngle = newStopAngle;\n\t\t}\n\t} else {\n\t\tif (arcAngle > 0) {\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tstartAngle = 360 - Math.abs(startAngle);\n\t\t} else {\n\t\t\tint newStopAngle = 360 + startAngle;\n\t\t\tstartAngle = newStopAngle - Math.abs(arcAngle);\n\t\t\tarcAngle = newStopAngle;\t\t\t\n\t\t}\n\t}\n\tstartAngle = (int) (startAngle * 65536 / 360);\n\tarcAngle = (int) (arcAngle * 65536 / 360);\n\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)(x + (width / 2));\n\tcenter.y = (short)(y + (height / 2));\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(width / 2);\n\tradii.y = (short)(height / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawArc(center, radii, startAngle, arcAngle, OS.Pg_ARC | OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 9,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tif (width < 0) width -= width;\n\t\tif (height < 0) height -= height;\n\t\tOS.PgSetStrokeColor(0x9098F8);\n\t\tOS.PgDrawIRect(x, y, x + width - 1, y + height - 1, OS.Pg_DRAW_STROKE);\n\t\tOS.PgSetStrokeColor(data.foreground);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tif (width < 0) width -= width;\n\t\tif (height < 0) height -= height;\n\t\tOS.PgSetStrokeColor(0x9098F8);\n\t\tOS.PgDrawIRect(x, y, x + width - 1, y + height - 1, OS.Pg_DRAW_STROKE);\n\t\tOS.PgSetStrokeColor(data.foreground);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tif (width < 0) width -= width;\n\t\tif (height < 0) height -= height;\n\t\tOS.PgSetStrokeColor(0x9098F8);\n\t\tOS.PgDrawIRect(x, y, x + width - 1, y + height - 1, OS.Pg_DRAW_STROKE);\n\t\tOS.PgSetStrokeColor(data.foreground);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 11,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawILine(x1, y1, x2, y2);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawILine(x1, y1, x2, y2);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawILine(x1, y1, x2, y2);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)x; center.y = (short)y;\n\tPhPoint_t radii = new PhPoint_t();\n\t// Don't subtract one, so that the bottom/right edges are drawn\n\tradii.x = (short)(x + width); radii.y = (short)(y + height);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawEllipse(center, radii,\tOS.Pg_DRAW_STROKE | OS.Pg_EXTENT_BASED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)x; center.y = (short)y;\n\tPhPoint_t radii = new PhPoint_t();\n\t// Don't subtract one, so that the bottom/right edges are drawn\n\tradii.x = (short)(x + width); radii.y = (short)(y + height);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawEllipse(center, radii,\tOS.Pg_DRAW_STROKE | OS.Pg_EXTENT_BASED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)x; center.y = (short)y;\n\tPhPoint_t radii = new PhPoint_t();\n\t// Don't subtract one, so that the bottom/right edges are drawn\n\tradii.x = (short)(x + width); radii.y = (short)(y + height);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawEllipse(center, radii,\tOS.Pg_DRAW_STROKE | OS.Pg_EXTENT_BASED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawIPixel(x, y);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawIPixel(x, y);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawIPixel(x, y);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_STROKE | OS.Pg_CLOSED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_STROKE | OS.Pg_CLOSED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_STROKE | OS.Pg_CLOSED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 24,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\t// Don't subtract one, so that the bottom/right edges are drawn\n\t\tOS.PgDrawIRect(x, y, x + width, y + height, OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\t// Don't subtract one, so that the bottom/right edges are drawn\n\t\tOS.PgDrawIRect(x, y, x + width, y + height, OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\t// Don't subtract one, so that the bottom/right edges are drawn\n\t\tOS.PgDrawIRect(x, y, x + width, y + height, OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tPhRect_t rect  = new PhRect_t();\n\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\t// Don't subtract one, so that the bottom/right edges are drawn\n\trect.lr_x = (short)(x + width); rect.lr_y = (short)(y + height);\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(arcWidth / 2); radii.y = (short)(arcHeight / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawRoundRect(rect, radii, OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tPhRect_t rect  = new PhRect_t();\n\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\t// Don't subtract one, so that the bottom/right edges are drawn\n\trect.lr_x = (short)(x + width); rect.lr_y = (short)(y + height);\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(arcWidth / 2); radii.y = (short)(arcHeight / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawRoundRect(rect, radii, OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tPhRect_t rect  = new PhRect_t();\n\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\t// Don't subtract one, so that the bottom/right edges are drawn\n\trect.lr_x = (short)(x + width); rect.lr_y = (short)(y + height);\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(arcWidth / 2); radii.y = (short)(arcHeight / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawRoundRect(rect, radii, OS.Pg_DRAW_STROKE);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 29,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\n\tint drawFlags = OS.Pg_TEXT_LEFT | OS.Pg_TEXT_TOP;\n\tif (!isTransparent) drawFlags |= OS.Pg_BACK_FILL;\n\tbyte[] buffer = Converter.wcsToMbcs(null, string, false);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tPhPoint_t pos = new PhPoint_t();\n\t\tpos.x = (short)x;\n\t\tpos.y = (short)y;\n\t\tif (!data.xorMode) {\n\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t} else {\n\t\t\tif (isTransparent) {\n\t\t\t\tPhRect_t rect = new PhRect_t();\n\t\t\t\tOS.PfExtentText(rect, null, data.font, buffer, buffer.length);\n\t\t\t\tshort width = (short)(rect.lr_x - rect.ul_x + 1);\n\t\t\t\tshort height = (short)(rect.lr_y - rect.ul_y + 1);\n\t\t\t\tint image = OS.PhCreateImage(null, width, height, OS.Pg_IMAGE_DIRECT_888, 0, 0, 0);\n\t\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\t\tdim.w = width;\n\t\t\t\tdim.h = height;\n\t\t\t\tPhPoint_t point = new PhPoint_t();\n\t\t\t\tint pmMC = OS.PmMemCreateMC(image, dim, point);\n\t\t\t\tif (pmMC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\tint prevCont = OS.PmMemStart(pmMC);\n\t\t\t\tOS.PgSetTextColor(data.foreground);\n\t\t\t\tOS.PgSetFont(data.font);\n\t\t\t\tpos.x = pos.y = (short)0;\n\t\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t\t\tOS.PmMemFlush(pmMC, image);\n\t\t\t\tOS.PmMemStop(pmMC);\n\t\t\t\tOS.PhDCSetCurrent(prevCont);\n\t\t\t\tOS.PmMemReleaseMC(pmMC);\n\t\t\t\tpoint.x = (short)x;\n\t\t\t\tpoint.y = (short)y;\n\t\t\t\tPhImage_t phImage = new PhImage_t();\n\t\t\t\tOS.memmove(phImage, image, PhImage_t.sizeof);\n\t\t\t\tOS.PgSetDrawMode(OS.Pg_DrawModeDSx);\n\t\t\t\tdirtyBits |= DIRTY_XORMODE;\n\t\t\t\tOS.PgDrawImage(phImage.image, phImage.type, point, dim, phImage.bpl, 0);\n\t\t\t\tphImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\t\tOS.memmove(image, phImage, PhImage_t.sizeof);\n\t\t\t\tOS.PhReleaseImage(image);\n\t\t\t\tOS.free(image);\n\t\t\t} else {\n\t\t\t\tOS.PgSetTextXORColor(data.foreground, data.background);\n\t\t\t\tOS.PgSetDrawMode(OS.Pg_DrawModeS);\n\t\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t\t\tdirtyBits |= DIRTY_XORMODE | DIRTY_FOREGROUND;\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\n\tint drawFlags = OS.Pg_TEXT_LEFT | OS.Pg_TEXT_TOP;\n\tif (!isTransparent) drawFlags |= OS.Pg_BACK_FILL;\n\tbyte[] buffer = Converter.wcsToMbcs(null, string, false);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tPhPoint_t pos = new PhPoint_t();\n\t\tpos.x = (short)x;\n\t\tpos.y = (short)y;\n\t\tif (!data.xorMode) {\n\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t} else {\n\t\t\tif (isTransparent) {\n\t\t\t\tPhRect_t rect = new PhRect_t();\n\t\t\t\tOS.PfExtentText(rect, null, data.font, buffer, buffer.length);\n\t\t\t\tshort width = (short)(rect.lr_x - rect.ul_x + 1);\n\t\t\t\tshort height = (short)(rect.lr_y - rect.ul_y + 1);\n\t\t\t\tint image = OS.PhCreateImage(null, width, height, OS.Pg_IMAGE_DIRECT_888, 0, 0, 0);\n\t\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\t\tdim.w = width;\n\t\t\t\tdim.h = height;\n\t\t\t\tPhPoint_t point = new PhPoint_t();\n\t\t\t\tint pmMC = OS.PmMemCreateMC(image, dim, point);\n\t\t\t\tif (pmMC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\tint prevCont = OS.PmMemStart(pmMC);\n\t\t\t\tOS.PgSetTextColor(data.foreground);\n\t\t\t\tOS.PgSetFont(data.font);\n\t\t\t\tpos.x = pos.y = (short)0;\n\t\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t\t\tOS.PmMemFlush(pmMC, image);\n\t\t\t\tOS.PmMemStop(pmMC);\n\t\t\t\tOS.PhDCSetCurrent(prevCont);\n\t\t\t\tOS.PmMemReleaseMC(pmMC);\n\t\t\t\tpoint.x = (short)x;\n\t\t\t\tpoint.y = (short)y;\n\t\t\t\tPhImage_t phImage = new PhImage_t();\n\t\t\t\tOS.memmove(phImage, image, PhImage_t.sizeof);\n\t\t\t\tOS.PgSetDrawMode(OS.Pg_DrawModeDSx);\n\t\t\t\tdirtyBits |= DIRTY_XORMODE;\n\t\t\t\tOS.PgDrawImage(phImage.image, phImage.type, point, dim, phImage.bpl, 0);\n\t\t\t\tphImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\t\tOS.memmove(image, phImage, PhImage_t.sizeof);\n\t\t\t\tOS.PhReleaseImage(image);\n\t\t\t\tOS.free(image);\n\t\t\t} else {\n\t\t\t\tOS.PgSetTextXORColor(data.foreground, data.background);\n\t\t\t\tOS.PgSetDrawMode(OS.Pg_DrawModeS);\n\t\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t\t\tdirtyBits |= DIRTY_XORMODE | DIRTY_FOREGROUND;\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\n\tint drawFlags = OS.Pg_TEXT_LEFT | OS.Pg_TEXT_TOP;\n\tif (!isTransparent) drawFlags |= OS.Pg_BACK_FILL;\n\tbyte[] buffer = Converter.wcsToMbcs(null, string, false);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tPhPoint_t pos = new PhPoint_t();\n\t\tpos.x = (short)x;\n\t\tpos.y = (short)y;\n\t\tif (!data.xorMode) {\n\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t} else {\n\t\t\tif (isTransparent) {\n\t\t\t\tPhRect_t rect = new PhRect_t();\n\t\t\t\tOS.PfExtentText(rect, null, data.font, buffer, buffer.length);\n\t\t\t\tshort width = (short)(rect.lr_x - rect.ul_x + 1);\n\t\t\t\tshort height = (short)(rect.lr_y - rect.ul_y + 1);\n\t\t\t\tint image = OS.PhCreateImage(null, width, height, OS.Pg_IMAGE_DIRECT_888, 0, 0, 0);\n\t\t\t\tPhDim_t dim = new PhDim_t();\n\t\t\t\tdim.w = width;\n\t\t\t\tdim.h = height;\n\t\t\t\tPhPoint_t point = new PhPoint_t();\n\t\t\t\tint pmMC = OS.PmMemCreateMC(image, dim, point);\n\t\t\t\tif (pmMC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\t\tint prevCont = OS.PmMemStart(pmMC);\n\t\t\t\tOS.PgSetTextColor(data.foreground);\n\t\t\t\tOS.PgSetFont(data.font);\n\t\t\t\tpos.x = pos.y = (short)0;\n\t\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t\t\tOS.PmMemFlush(pmMC, image);\n\t\t\t\tOS.PmMemStop(pmMC);\n\t\t\t\tOS.PhDCSetCurrent(prevCont);\n\t\t\t\tOS.PmMemReleaseMC(pmMC);\n\t\t\t\tpoint.x = (short)x;\n\t\t\t\tpoint.y = (short)y;\n\t\t\t\tPhImage_t phImage = new PhImage_t();\n\t\t\t\tOS.memmove(phImage, image, PhImage_t.sizeof);\n\t\t\t\tOS.PgSetDrawMode(OS.Pg_DrawModeDSx);\n\t\t\t\tdirtyBits |= DIRTY_XORMODE;\n\t\t\t\tOS.PgDrawImage(phImage.image, phImage.type, point, dim, phImage.bpl, 0);\n\t\t\t\tphImage.flags = (byte)OS.Ph_RELEASE_IMAGE_ALL;\n\t\t\t\tOS.memmove(image, phImage, PhImage_t.sizeof);\n\t\t\t\tOS.PhReleaseImage(image);\n\t\t\t\tOS.free(image);\n\t\t\t} else {\n\t\t\t\tOS.PgSetTextXORColor(data.foreground, data.background);\n\t\t\t\tOS.PgSetDrawMode(OS.Pg_DrawModeS);\n\t\t\t\tOS.PgDrawText(buffer, buffer.length, pos, drawFlags);\n\t\t\t\tdirtyBits |= DIRTY_XORMODE | DIRTY_FOREGROUND;\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif ((flags & ~SWT.DRAW_TRANSPARENT) == 0) {\n\t\tdrawString(string, x, y, (flags & SWT.DRAW_TRANSPARENT) != 0);\n\t} else {\n\t\tdrawText(string, x, y, flags, true);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif ((flags & ~SWT.DRAW_TRANSPARENT) == 0) {\n\t\tdrawString(string, x, y, (flags & SWT.DRAW_TRANSPARENT) != 0);\n\t} else {\n\t\tdrawText(string, x, y, flags, true);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif ((flags & ~SWT.DRAW_TRANSPARENT) == 0) {\n\t\tdrawString(string, x, y, (flags & SWT.DRAW_TRANSPARENT) != 0);\n\t} else {\n\t\tdrawText(string, x, y, flags, true);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (startAngle > 0) {\n\t\tif (arcAngle > 0) {\n\t\t\t//No need to modify start angle.\n\t\t\tarcAngle += startAngle;\n\t\t} else {\n\t\t\tint newStartAngle;\n\t\t\tint newStopAngle = startAngle;\n\t\t\tif (startAngle > Math.abs(arcAngle)) {\n\t\t\t\tnewStartAngle = startAngle - Math.abs(arcAngle);\n\t\t\t} else {\n\t\t\t\tnewStartAngle = startAngle + 360 - Math.abs(arcAngle);\n\t\t\t}\n\t\t\tstartAngle = newStartAngle;\n\t\t\tarcAngle = newStopAngle;\n\t\t}\n\t} else {\n\t\tif (arcAngle > 0) {\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tstartAngle = 360 - Math.abs(startAngle);\n\t\t} else {\n\t\t\tint newStopAngle = 360 + startAngle;\n\t\t\tstartAngle = newStopAngle - Math.abs(arcAngle);\n\t\t\tarcAngle = newStopAngle;\t\t\t\n\t\t}\n\t}\t\t\t\n\tstartAngle = (int) (startAngle * 65536 / 360);\n\tarcAngle = (int) (arcAngle * 65536 / 360);\n\t\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)(x + (width / 2));\n\tcenter.y = (short)(y + (height / 2));\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(width / 2);\n\tradii.y = (short)(height / 2);\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawArc(center, radii, startAngle, arcAngle, OS.Pg_ARC_PIE | OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (startAngle > 0) {\n\t\tif (arcAngle > 0) {\n\t\t\t//No need to modify start angle.\n\t\t\tarcAngle += startAngle;\n\t\t} else {\n\t\t\tint newStartAngle;\n\t\t\tint newStopAngle = startAngle;\n\t\t\tif (startAngle > Math.abs(arcAngle)) {\n\t\t\t\tnewStartAngle = startAngle - Math.abs(arcAngle);\n\t\t\t} else {\n\t\t\t\tnewStartAngle = startAngle + 360 - Math.abs(arcAngle);\n\t\t\t}\n\t\t\tstartAngle = newStartAngle;\n\t\t\tarcAngle = newStopAngle;\n\t\t}\n\t} else {\n\t\tif (arcAngle > 0) {\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tstartAngle = 360 - Math.abs(startAngle);\n\t\t} else {\n\t\t\tint newStopAngle = 360 + startAngle;\n\t\t\tstartAngle = newStopAngle - Math.abs(arcAngle);\n\t\t\tarcAngle = newStopAngle;\t\t\t\n\t\t}\n\t}\t\t\t\n\tstartAngle = (int) (startAngle * 65536 / 360);\n\tarcAngle = (int) (arcAngle * 65536 / 360);\n\t\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)(x + (width / 2));\n\tcenter.y = (short)(y + (height / 2));\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(width / 2);\n\tradii.y = (short)(height / 2);\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawArc(center, radii, startAngle, arcAngle, OS.Pg_ARC_PIE | OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (startAngle > 0) {\n\t\tif (arcAngle > 0) {\n\t\t\t//No need to modify start angle.\n\t\t\tarcAngle += startAngle;\n\t\t} else {\n\t\t\tint newStartAngle;\n\t\t\tint newStopAngle = startAngle;\n\t\t\tif (startAngle > Math.abs(arcAngle)) {\n\t\t\t\tnewStartAngle = startAngle - Math.abs(arcAngle);\n\t\t\t} else {\n\t\t\t\tnewStartAngle = startAngle + 360 - Math.abs(arcAngle);\n\t\t\t}\n\t\t\tstartAngle = newStartAngle;\n\t\t\tarcAngle = newStopAngle;\n\t\t}\n\t} else {\n\t\tif (arcAngle > 0) {\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tstartAngle = 360 - Math.abs(startAngle);\n\t\t} else {\n\t\t\tint newStopAngle = 360 + startAngle;\n\t\t\tstartAngle = newStopAngle - Math.abs(arcAngle);\n\t\t\tarcAngle = newStopAngle;\t\t\t\n\t\t}\n\t}\t\t\t\n\tstartAngle = (int) (startAngle * 65536 / 360);\n\tarcAngle = (int) (arcAngle * 65536 / 360);\n\t\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)(x + (width / 2));\n\tcenter.y = (short)(y + (height / 2));\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(width / 2);\n\tradii.y = (short)(height / 2);\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawArc(center, radii, startAngle, arcAngle, OS.Pg_ARC_PIE | OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 36,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif ((width == 0) || (height == 0)) return;\n\tint fromColor = data.foreground;\n\tint toColor = data.background;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = toColor;\n\t\ttoColor = fromColor;\n\t\tfromColor = t;\n\t}\n\tif (fromColor == toColor) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tPhPoint_t upperLeft = new PhPoint_t();\n\tupperLeft.x = (short)x;\n\tupperLeft.y = (short)y;\n\tPhPoint_t lowerRight = new PhPoint_t();\n\tlowerRight.x = (short)(x + width - 1);\n\tlowerRight.y = (short)(y + height - 1);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawGradient(upperLeft, lowerRight,\n\t\t\tvertical ? OS.Pg_GRAD_VERTICAL : OS.Pg_GRAD_HORIZONTAL, OS.Pg_GRAD_LINEAR,\n\t\t\tvertical ? height : width, fromColor, toColor, 0, 0, 0, null);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif ((width == 0) || (height == 0)) return;\n\tint fromColor = data.foreground;\n\tint toColor = data.background;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = toColor;\n\t\ttoColor = fromColor;\n\t\tfromColor = t;\n\t}\n\tif (fromColor == toColor) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tPhPoint_t upperLeft = new PhPoint_t();\n\tupperLeft.x = (short)x;\n\tupperLeft.y = (short)y;\n\tPhPoint_t lowerRight = new PhPoint_t();\n\tlowerRight.x = (short)(x + width - 1);\n\tlowerRight.y = (short)(y + height - 1);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawGradient(upperLeft, lowerRight,\n\t\t\tvertical ? OS.Pg_GRAD_VERTICAL : OS.Pg_GRAD_HORIZONTAL, OS.Pg_GRAD_LINEAR,\n\t\t\tvertical ? height : width, fromColor, toColor, 0, 0, 0, null);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif ((width == 0) || (height == 0)) return;\n\tint fromColor = data.foreground;\n\tint toColor = data.background;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = toColor;\n\t\ttoColor = fromColor;\n\t\tfromColor = t;\n\t}\n\tif (fromColor == toColor) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tPhPoint_t upperLeft = new PhPoint_t();\n\tupperLeft.x = (short)x;\n\tupperLeft.y = (short)y;\n\tPhPoint_t lowerRight = new PhPoint_t();\n\tlowerRight.x = (short)(x + width - 1);\n\tlowerRight.y = (short)(y + height - 1);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawGradient(upperLeft, lowerRight,\n\t\t\tvertical ? OS.Pg_GRAD_VERTICAL : OS.Pg_GRAD_HORIZONTAL, OS.Pg_GRAD_LINEAR,\n\t\t\tvertical ? height : width, fromColor, toColor, 0, 0, 0, null);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 37,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)x; center.y = (short)y;\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(x + width);\n\tradii.y = (short)(y + height);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawEllipse(center, radii,\tOS.Pg_DRAW_FILL | OS.Pg_EXTENT_BASED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)x; center.y = (short)y;\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(x + width);\n\tradii.y = (short)(y + height);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawEllipse(center, radii,\tOS.Pg_DRAW_FILL | OS.Pg_EXTENT_BASED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tPhPoint_t center = new PhPoint_t();\n\tcenter.x = (short)x; center.y = (short)y;\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(x + width);\n\tradii.y = (short)(y + height);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawEllipse(center, radii,\tOS.Pg_DRAW_FILL | OS.Pg_EXTENT_BASED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 38,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 39,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_FILL | OS.Pg_CLOSED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_FILL | OS.Pg_CLOSED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\t\n\tshort[] points = new short[pointArray.length];\n\tfor (int i = pointArray.length - 1; i >= 0; i--) {\n\t\tpoints[i] = (short)pointArray[i];\n\t}\n\t\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawPolygon(points, pointArray.length / 2,\tnew PhPoint_t(), OS.Pg_DRAW_FILL | OS.Pg_CLOSED);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 40,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width == 0 || height == 0) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawIRect(x, y, x + width - 1, y + height - 1, OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width == 0 || height == 0) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawIRect(x, y, x + width - 1, y + height - 1, OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width == 0 || height == 0) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\t\n\t\tsetGCClipping();\n\t\tOS.PgDrawIRect(x, y, x + width - 1, y + height - 1, OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tPhRect_t rect  = new PhRect_t();\n\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\trect.lr_x = (short)(x + width - 1); rect.lr_y = (short)(y + height - 1);\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(arcWidth / 2); radii.y = (short)(arcHeight / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawRoundRect(rect, radii, OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tPhRect_t rect  = new PhRect_t();\n\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\trect.lr_x = (short)(x + width - 1); rect.lr_y = (short)(y + height - 1);\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(arcWidth / 2); radii.y = (short)(arcHeight / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawRoundRect(rect, radii, OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tPhRect_t rect  = new PhRect_t();\n\trect.ul_x = (short)x; rect.ul_y = (short)y;\n\trect.lr_x = (short)(x + width - 1); rect.lr_y = (short)(y + height - 1);\n\tPhPoint_t radii = new PhPoint_t();\n\tradii.x = (short)(arcWidth / 2); radii.y = (short)(arcHeight / 2);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tint prevContext = setGC();\n\t\tsetGCClipping();\n\t\tOS.PgDrawRoundRect(rect, radii, OS.Pg_DRAW_FILL);\n\t\tunsetGC(prevContext);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 45,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn false;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn false;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn false;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn 0xFF;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn 0xFF;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn 0xFF;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    return SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    return SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    return SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn Color.photon_new(data.device, data.background);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn Color.photon_new(data.device, data.background);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn Color.photon_new(data.device, data.background);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 49,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 50,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tString string = new String(new char[] {ch});\n\tPoint point = stringExtent(string);\n\treturn point.x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tString string = new String(new char[] {ch});\n\tPoint point = stringExtent(string);\n\treturn point.x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tString string = new String(new char[] {ch});\n\tPoint point = stringExtent(string);\n\treturn point.x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 51,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tPhRect_t rect = new PhRect_t();\n\t\tint rid = data.rid;\n\t\tint widget = data.widget;\n\t\tImage image = data.image;\n\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\tOS.PhRegionQuery (rid, null, rect, 0, 0);\n\t\t} else if (widget != 0) {\n\t\t\tOS.PtWidgetCanvas(widget, rect);\t\n\t\t} else if (image != null) {\n\t\t\tPhImage_t img = new PhImage_t();\n\t\t\tOS.memmove(img, image.handle, PhImage_t.sizeof);\n\t\t\trect.lr_x = (short)(img.size_w - 1);\n\t\t\trect.lr_y = (short)(img.size_h - 1);\n\t\t}\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0) {\n\t\t\tint clipRectsCount = data.clipRectsCount;\n\t\t\tint clip_ptr = OS.malloc(PhRect_t.sizeof);\n\t\t\tOS.memmove(clip_ptr, clipRects, PhRect_t.sizeof);\n\t\t\tfor (int i = 1; i < clipRectsCount; i++) {\n\t\t\t\tOS.PhRectUnion (clip_ptr, clipRects + (i * PhRect_t.sizeof));\n\t\t\t}\n\t\t\tint rect_ptr = OS.malloc(PhRect_t.sizeof);\n\t\t\tOS.memmove(rect_ptr, rect, PhRect_t.sizeof);\n\t\t\tboolean intersect = OS.PhRectIntersect(rect_ptr, clip_ptr) != 0;\n\t\t\tOS.memmove(rect, rect_ptr, PhRect_t.sizeof);\n\t\t\tOS.free(rect_ptr);\n\t\t\tOS.free(clip_ptr);\n\t\t\tif (!intersect) return new Rectangle(0, 0, 0, 0);\n\t\t}\n\t\tint width = rect.lr_x - rect.ul_x + 1;\n\t\tint height = rect.lr_y - rect.ul_y + 1;\n\t\treturn new Rectangle(rect.ul_x, rect.ul_y, width, height);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tPhRect_t rect = new PhRect_t();\n\t\tint rid = data.rid;\n\t\tint widget = data.widget;\n\t\tImage image = data.image;\n\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\tOS.PhRegionQuery (rid, null, rect, 0, 0);\n\t\t} else if (widget != 0) {\n\t\t\tOS.PtWidgetCanvas(widget, rect);\t\n\t\t} else if (image != null) {\n\t\t\tPhImage_t img = new PhImage_t();\n\t\t\tOS.memmove(img, image.handle, PhImage_t.sizeof);\n\t\t\trect.lr_x = (short)(img.size_w - 1);\n\t\t\trect.lr_y = (short)(img.size_h - 1);\n\t\t}\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0) {\n\t\t\tint clipRectsCount = data.clipRectsCount;\n\t\t\tint clip_ptr = OS.malloc(PhRect_t.sizeof);\n\t\t\tOS.memmove(clip_ptr, clipRects, PhRect_t.sizeof);\n\t\t\tfor (int i = 1; i < clipRectsCount; i++) {\n\t\t\t\tOS.PhRectUnion (clip_ptr, clipRects + (i * PhRect_t.sizeof));\n\t\t\t}\n\t\t\tint rect_ptr = OS.malloc(PhRect_t.sizeof);\n\t\t\tOS.memmove(rect_ptr, rect, PhRect_t.sizeof);\n\t\t\tboolean intersect = OS.PhRectIntersect(rect_ptr, clip_ptr) != 0;\n\t\t\tOS.memmove(rect, rect_ptr, PhRect_t.sizeof);\n\t\t\tOS.free(rect_ptr);\n\t\t\tOS.free(clip_ptr);\n\t\t\tif (!intersect) return new Rectangle(0, 0, 0, 0);\n\t\t}\n\t\tint width = rect.lr_x - rect.ul_x + 1;\n\t\tint height = rect.lr_y - rect.ul_y + 1;\n\t\treturn new Rectangle(rect.ul_x, rect.ul_y, width, height);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tPhRect_t rect = new PhRect_t();\n\t\tint rid = data.rid;\n\t\tint widget = data.widget;\n\t\tImage image = data.image;\n\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\tOS.PhRegionQuery (rid, null, rect, 0, 0);\n\t\t} else if (widget != 0) {\n\t\t\tOS.PtWidgetCanvas(widget, rect);\t\n\t\t} else if (image != null) {\n\t\t\tPhImage_t img = new PhImage_t();\n\t\t\tOS.memmove(img, image.handle, PhImage_t.sizeof);\n\t\t\trect.lr_x = (short)(img.size_w - 1);\n\t\t\trect.lr_y = (short)(img.size_h - 1);\n\t\t}\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0) {\n\t\t\tint clipRectsCount = data.clipRectsCount;\n\t\t\tint clip_ptr = OS.malloc(PhRect_t.sizeof);\n\t\t\tOS.memmove(clip_ptr, clipRects, PhRect_t.sizeof);\n\t\t\tfor (int i = 1; i < clipRectsCount; i++) {\n\t\t\t\tOS.PhRectUnion (clip_ptr, clipRects + (i * PhRect_t.sizeof));\n\t\t\t}\n\t\t\tint rect_ptr = OS.malloc(PhRect_t.sizeof);\n\t\t\tOS.memmove(rect_ptr, rect, PhRect_t.sizeof);\n\t\t\tboolean intersect = OS.PhRectIntersect(rect_ptr, clip_ptr) != 0;\n\t\t\tOS.memmove(rect, rect_ptr, PhRect_t.sizeof);\n\t\t\tOS.free(rect_ptr);\n\t\t\tOS.free(clip_ptr);\n\t\t\tif (!intersect) return new Rectangle(0, 0, 0, 0);\n\t\t}\n\t\tint width = rect.lr_x - rect.ul_x + 1;\n\t\tint height = rect.lr_y - rect.ul_y + 1;\n\t\treturn new Rectangle(rect.ul_x, rect.ul_y, width, height);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tif (region.handle != 0 && region.handle != Region.EMPTY_REGION) {\n\t\t\tOS.PhFreeTiles(region.handle);\n\t\t}\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0) {\n\t\t\tregion.handle = OS.PhRectsToTiles(clipRects, data.clipRectsCount);\n\t\t} else {\n\t\t\tregion.handle = OS.PhGetTile();\n\t\t\tPhRect_t rect = new PhRect_t ();\n\t\t\tint rid = data.rid;\n\t\t\tint widget = data.widget;\n\t\t\tImage image = data.image;\n\t\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\t\tOS.PhRegionQuery (rid, null, rect, 0, 0);\n\t\t\t} else if (widget != 0) {\n\t\t\t\tOS.PtWidgetCanvas(widget, rect);\n\t\t\t} else if (image != null) {\n\t\t\t\tPhImage_t img = new PhImage_t();\n\t\t\t\tOS.memmove(img, image.handle, PhImage_t.sizeof);\n\t\t\t\trect.lr_x = (short)(img.size_w - 1);\n\t\t\t\trect.lr_y = (short)(img.size_h - 1);\n\t\t\t}\n\t\t\tOS.memmove(region.handle, rect, PhRect_t.sizeof);\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tif (region.handle != 0 && region.handle != Region.EMPTY_REGION) {\n\t\t\tOS.PhFreeTiles(region.handle);\n\t\t}\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0) {\n\t\t\tregion.handle = OS.PhRectsToTiles(clipRects, data.clipRectsCount);\n\t\t} else {\n\t\t\tregion.handle = OS.PhGetTile();\n\t\t\tPhRect_t rect = new PhRect_t ();\n\t\t\tint rid = data.rid;\n\t\t\tint widget = data.widget;\n\t\t\tImage image = data.image;\n\t\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\t\tOS.PhRegionQuery (rid, null, rect, 0, 0);\n\t\t\t} else if (widget != 0) {\n\t\t\t\tOS.PtWidgetCanvas(widget, rect);\n\t\t\t} else if (image != null) {\n\t\t\t\tPhImage_t img = new PhImage_t();\n\t\t\t\tOS.memmove(img, image.handle, PhImage_t.sizeof);\n\t\t\t\trect.lr_x = (short)(img.size_w - 1);\n\t\t\t\trect.lr_y = (short)(img.size_h - 1);\n\t\t\t}\n\t\t\tOS.memmove(region.handle, rect, PhRect_t.sizeof);\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tif (region.handle != 0 && region.handle != Region.EMPTY_REGION) {\n\t\t\tOS.PhFreeTiles(region.handle);\n\t\t}\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0) {\n\t\t\tregion.handle = OS.PhRectsToTiles(clipRects, data.clipRectsCount);\n\t\t} else {\n\t\t\tregion.handle = OS.PhGetTile();\n\t\t\tPhRect_t rect = new PhRect_t ();\n\t\t\tint rid = data.rid;\n\t\t\tint widget = data.widget;\n\t\t\tImage image = data.image;\n\t\t\tif (rid == OS.Ph_DEV_RID) {\n\t\t\t\tOS.PhRegionQuery (rid, null, rect, 0, 0);\n\t\t\t} else if (widget != 0) {\n\t\t\t\tOS.PtWidgetCanvas(widget, rect);\n\t\t\t} else if (image != null) {\n\t\t\t\tPhImage_t img = new PhImage_t();\n\t\t\t\tOS.memmove(img, image.handle, PhImage_t.sizeof);\n\t\t\t\trect.lr_x = (short)(img.size_w - 1);\n\t\t\t\trect.lr_y = (short)(img.size_h - 1);\n\t\t\t}\n\t\t\tOS.memmove(region.handle, rect, PhRect_t.sizeof);\n\t\t}\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 53,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//TODO - implement fill rule\n\treturn SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t//TODO - implement fill rule\n\treturn SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t//TODO - implement fill rule\n\treturn SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 54,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn Font.photon_new(data.device, data.font);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn Font.photon_new(data.device, data.font);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn Font.photon_new(data.device, data.font);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 55,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tFontQueryInfo info = new FontQueryInfo();\n\tOS.PfQueryFontInfo(data.font, info);\n\treturn FontMetrics.photon_new(info);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tFontQueryInfo info = new FontQueryInfo();\n\tOS.PfQueryFontInfo(data.font, info);\n\treturn FontMetrics.photon_new(info);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tFontQueryInfo info = new FontQueryInfo();\n\tOS.PfQueryFontInfo(data.font, info);\n\treturn FontMetrics.photon_new(info);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 56,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn Color.photon_new(data.device, data.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn Color.photon_new(data.device, data.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn Color.photon_new(data.device, data.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 57,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 58,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 59,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineCap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineCap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineCap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 60,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tbyte[] dashList = data.dashes;\n\tif (dashList == null) return null;\n\tint[] dashes = new int[dashList.length];\n\tfor (int i = 0; i < dashes.length; i++) {\n\t\tdashes[i] = dashList[i] & 0xFF;\n\t}\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tbyte[] dashList = data.dashes;\n\tif (dashList == null) return null;\n\tint[] dashes = new int[dashList.length];\n\tfor (int i = 0; i < dashes.length; i++) {\n\t\tdashes[i] = dashList[i] & 0xFF;\n\t}\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tbyte[] dashList = data.dashes;\n\tif (dashList == null) return null;\n\tint[] dashes = new int[dashList.length];\n\tfor (int i = 0; i < dashes.length; i++) {\n\t\tdashes[i] = dashList[i] & 0xFF;\n\t}\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 61,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineJoin;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineJoin;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineJoin;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 62,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 63,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineWidth;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineWidth;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineWidth;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 64,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 65,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    return SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    return SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    return SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 66,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 67,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.xorMode;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.xorMode;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.xorMode;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 70,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.clipRects != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.clipRects != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.clipRects != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 72,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (!advanced) {\n\t\tsetAlpha(0xFF);\n\t\tsetAntialias(SWT.DEFAULT);\n\t\tsetBackgroundPattern(null);\n\t\tsetClipping((Rectangle)null);\n\t\tsetForegroundPattern(null);\n\t\tsetInterpolation(SWT.DEFAULT);\n\t\tsetTextAntialias(SWT.DEFAULT);\n\t\tsetTransform(null);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (!advanced) {\n\t\tsetAlpha(0xFF);\n\t\tsetAntialias(SWT.DEFAULT);\n\t\tsetBackgroundPattern(null);\n\t\tsetClipping((Rectangle)null);\n\t\tsetForegroundPattern(null);\n\t\tsetInterpolation(SWT.DEFAULT);\n\t\tsetTextAntialias(SWT.DEFAULT);\n\t\tsetTransform(null);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (!advanced) {\n\t\tsetAlpha(0xFF);\n\t\tsetAntialias(SWT.DEFAULT);\n\t\tsetBackgroundPattern(null);\n\t\tsetClipping((Rectangle)null);\n\t\tsetForegroundPattern(null);\n\t\tsetInterpolation(SWT.DEFAULT);\n\t\tsetTextAntialias(SWT.DEFAULT);\n\t\tsetTransform(null);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 74,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON:\n            break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON:\n            break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON:\n            break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 75,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tdirtyBits |= DIRTY_BACKGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tdirtyBits |= DIRTY_BACKGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.background = color.handle;\n\tdirtyBits |= DIRTY_BACKGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 76,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 77,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint clipRects = data.clipRects;\n\tif (clipRects != 0)\n\t\tOS.free(clipRects);\n\tclipRects = OS.malloc(PhRect_t.sizeof);\n\tint clipRectsCount = 1;\n\tPhRect_t rect = new PhRect_t();\n\trect.ul_x = (short)x;\n\trect.ul_y = (short)y;\n\trect.lr_x = (short)(x + width - 1);\n\trect.lr_y = (short)(y + height - 1);\n\tOS.memmove(clipRects, rect, PhRect_t.sizeof);\n\tdata.clipRects = clipRects;\n\tdata.clipRectsCount = clipRectsCount;\n\tdirtyBits |= DIRTY_CLIPPING;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint clipRects = data.clipRects;\n\tif (clipRects != 0)\n\t\tOS.free(clipRects);\n\tclipRects = OS.malloc(PhRect_t.sizeof);\n\tint clipRectsCount = 1;\n\tPhRect_t rect = new PhRect_t();\n\trect.ul_x = (short)x;\n\trect.ul_y = (short)y;\n\trect.lr_x = (short)(x + width - 1);\n\trect.lr_y = (short)(y + height - 1);\n\tOS.memmove(clipRects, rect, PhRect_t.sizeof);\n\tdata.clipRects = clipRects;\n\tdata.clipRectsCount = clipRectsCount;\n\tdirtyBits |= DIRTY_CLIPPING;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint clipRects = data.clipRects;\n\tif (clipRects != 0)\n\t\tOS.free(clipRects);\n\tclipRects = OS.malloc(PhRect_t.sizeof);\n\tint clipRectsCount = 1;\n\tPhRect_t rect = new PhRect_t();\n\trect.ul_x = (short)x;\n\trect.ul_y = (short)y;\n\trect.lr_x = (short)(x + width - 1);\n\trect.lr_y = (short)(y + height - 1);\n\tOS.memmove(clipRects, rect, PhRect_t.sizeof);\n\tdata.clipRects = clipRects;\n\tdata.clipRectsCount = clipRectsCount;\n\tdirtyBits |= DIRTY_CLIPPING;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 78,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 79,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (rect == null) {\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0)\n\t\t\tOS.free(clipRects);\n\t\tdata.clipRects = data.clipRectsCount = 0;\n\t\tdirtyBits |= DIRTY_CLIPPING;\n\t} else {\n\t\tsetClipping (rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (rect == null) {\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0)\n\t\t\tOS.free(clipRects);\n\t\tdata.clipRects = data.clipRectsCount = 0;\n\t\tdirtyBits |= DIRTY_CLIPPING;\n\t} else {\n\t\tsetClipping (rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (rect == null) {\n\t\tint clipRects = data.clipRects;\n\t\tif (clipRects != 0)\n\t\t\tOS.free(clipRects);\n\t\tdata.clipRects = data.clipRectsCount = 0;\n\t\tdirtyBits |= DIRTY_CLIPPING;\n\t} else {\n\t\tsetClipping (rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 80,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint clipRects = data.clipRects;\n\tint clipRectsCount = data.clipRectsCount;\n\tif (clipRects != 0)\n\t\tOS.free(clipRects);\n\tif (region == null || region.handle == 0) {\n\t\tclipRects = clipRectsCount = 0;\n\t} else if (region.handle == Region.EMPTY_REGION) {\n\t\tclipRects = OS.malloc(PhRect_t.sizeof);\n\t\tOS.memset(clipRects, 0, PhRect_t.sizeof);\n\t\tclipRectsCount = 1;\n\t} else {\n\t\tint[] clip_rects_count = new int[1];\n\t\tclipRects = OS.PhTilesToRects(region.handle, clip_rects_count);\n\t\tclipRectsCount = clip_rects_count[0];\n\t}\n\tdata.clipRects = clipRects;\n\tdata.clipRectsCount = clipRectsCount;\n\tdirtyBits |= DIRTY_CLIPPING;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint clipRects = data.clipRects;\n\tint clipRectsCount = data.clipRectsCount;\n\tif (clipRects != 0)\n\t\tOS.free(clipRects);\n\tif (region == null || region.handle == 0) {\n\t\tclipRects = clipRectsCount = 0;\n\t} else if (region.handle == Region.EMPTY_REGION) {\n\t\tclipRects = OS.malloc(PhRect_t.sizeof);\n\t\tOS.memset(clipRects, 0, PhRect_t.sizeof);\n\t\tclipRectsCount = 1;\n\t} else {\n\t\tint[] clip_rects_count = new int[1];\n\t\tclipRects = OS.PhTilesToRects(region.handle, clip_rects_count);\n\t\tclipRectsCount = clip_rects_count[0];\n\t}\n\tdata.clipRects = clipRects;\n\tdata.clipRectsCount = clipRectsCount;\n\tdirtyBits |= DIRTY_CLIPPING;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint clipRects = data.clipRects;\n\tint clipRectsCount = data.clipRectsCount;\n\tif (clipRects != 0)\n\t\tOS.free(clipRects);\n\tif (region == null || region.handle == 0) {\n\t\tclipRects = clipRectsCount = 0;\n\t} else if (region.handle == Region.EMPTY_REGION) {\n\t\tclipRects = OS.malloc(PhRect_t.sizeof);\n\t\tOS.memset(clipRects, 0, PhRect_t.sizeof);\n\t\tclipRectsCount = 1;\n\t} else {\n\t\tint[] clip_rects_count = new int[1];\n\t\tclipRects = OS.PhTilesToRects(region.handle, clip_rects_count);\n\t\tclipRectsCount = clip_rects_count[0];\n\t}\n\tdata.clipRects = clipRects;\n\tdata.clipRectsCount = clipRectsCount;\n\tdirtyBits |= DIRTY_CLIPPING;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 81,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//TODO - implement fill rule\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//TODO - implement fill rule\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//TODO - implement fill rule\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 82,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (font != null && font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font == null ? data.device.systemFont : font.handle;\n\tdirtyBits |= DIRTY_FONT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (font != null && font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font == null ? data.device.systemFont : font.handle;\n\tdirtyBits |= DIRTY_FONT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (font != null && font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font == null ? data.device.systemFont : font.handle;\n\tdirtyBits |= DIRTY_FONT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 83,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tdirtyBits |= DIRTY_FOREGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tdirtyBits |= DIRTY_FOREGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.foreground = color.handle;\n\tdirtyBits |= DIRTY_FOREGROUND;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 84,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 85,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 86,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\tcase SWT.CAP_FLAT:\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineCap = cap;\n\tdirtyBits |= DIRTY_LINECAP;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\tcase SWT.CAP_FLAT:\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineCap = cap;\n\tdirtyBits |= DIRTY_LINECAP;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\tcase SWT.CAP_FLAT:\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineCap = cap;\n\tdirtyBits |= DIRTY_LINECAP;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 87,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (dashes != null && dashes.length != 0) {\n\t\tbyte[] dashList = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tdashList[i] = (byte)dashes[i];\n\t\t}\n\t\tdata.dashes = dashList;\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tdirtyBits |= DIRTY_LINESTYLE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (dashes != null && dashes.length != 0) {\n\t\tbyte[] dashList = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tdashList[i] = (byte)dashes[i];\n\t\t}\n\t\tdata.dashes = dashList;\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tdirtyBits |= DIRTY_LINESTYLE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (dashes != null && dashes.length != 0) {\n\t\tbyte[] dashList = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tdashList[i] = (byte)dashes[i];\n\t\t}\n\t\tdata.dashes = dashList;\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tdirtyBits |= DIRTY_LINESTYLE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\tcase SWT.JOIN_ROUND:\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineJoin = join;\n\tdirtyBits |= DIRTY_LINEJOIN;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\tcase SWT.JOIN_ROUND:\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineJoin = join;\n\tdirtyBits |= DIRTY_LINEJOIN;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\tcase SWT.JOIN_ROUND:\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineJoin = join;\n\tdirtyBits |= DIRTY_LINEJOIN;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 89,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tif (data.dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t\t\treturn;\n\t}\n\tdata.lineStyle = lineStyle;\n\tdirtyBits |= DIRTY_LINESTYLE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tif (data.dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t\t\treturn;\n\t}\n\tdata.lineStyle = lineStyle;\n\tdirtyBits |= DIRTY_LINESTYLE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tif (data.dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t\t\treturn;\n\t}\n\tdata.lineStyle = lineStyle;\n\tdirtyBits |= DIRTY_LINESTYLE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tdata.lineWidth = lineWidth;\n\tdirtyBits |= DIRTY_LINEWIDTH;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tdata.lineWidth = lineWidth;\n\tdirtyBits |= DIRTY_LINEWIDTH;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tdata.lineWidth = lineWidth;\n\tdirtyBits |= DIRTY_LINEWIDTH;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 94,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 95,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 96,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tdata.xorMode = xor;\n\tdirtyBits |= DIRTY_XORMODE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tdata.xorMode = xor;\n\tdirtyBits |= DIRTY_XORMODE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tdata.xorMode = xor;\n\tdirtyBits |= DIRTY_XORMODE;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 97,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tPhRect_t rect = new PhRect_t();\n\tint size = string.length();\n\tchar[] buffer = new char[size];\n\tstring.getChars(0, size, buffer, 0);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tOS.PfExtentWideText(rect, null, data.font, buffer, size * 2);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n\t\n\tint width;\n\tif (size == 0) width = 0;\n\telse width = rect.lr_x - (rect.ul_x < 0 ? rect.ul_x : 0) + 1;\n\tint height = rect.lr_y - rect.ul_y + 1;\n\treturn new Point(width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tPhRect_t rect = new PhRect_t();\n\tint size = string.length();\n\tchar[] buffer = new char[size];\n\tstring.getChars(0, size, buffer, 0);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tOS.PfExtentWideText(rect, null, data.font, buffer, size * 2);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n\t\n\tint width;\n\tif (size == 0) width = 0;\n\telse width = rect.lr_x - (rect.ul_x < 0 ? rect.ul_x : 0) + 1;\n\tint height = rect.lr_y - rect.ul_y + 1;\n\treturn new Point(width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tPhRect_t rect = new PhRect_t();\n\tint size = string.length();\n\tchar[] buffer = new char[size];\n\tstring.getChars(0, size, buffer, 0);\n\n\tint flags = OS.PtEnter(0);\n\ttry {\n\t\tOS.PfExtentWideText(rect, null, data.font, buffer, size * 2);\n\t} finally {\n\t\tif (flags >= 0) OS.PtLeave(flags);\n\t}\n\t\n\tint width;\n\tif (size == 0) width = 0;\n\telse width = rect.lr_x - (rect.ul_x < 0 ? rect.ul_x : 0) + 1;\n\tint height = rect.lr_y - rect.ul_y + 1;\n\treturn new Point(width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 99,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif ((flags & ~SWT.DRAW_TRANSPARENT) == 0 || string.length() == 0) {\n\t\treturn stringExtent(string);\n\t} else {\n\t\treturn drawText(string, 0, 0, flags, false);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif ((flags & ~SWT.DRAW_TRANSPARENT) == 0 || string.length() == 0) {\n\t\treturn stringExtent(string);\n\t} else {\n\t\treturn drawText(string, 0, 0, flags, false);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif ((flags & ~SWT.DRAW_TRANSPARENT) == 0 || string.length() == 0) {\n\t\treturn stringExtent(string);\n\t} else {\n\t\treturn drawText(string, 0, 0, flags, false);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRectangle rect = image.getBounds();\n\tint /*long*/ gdkGC = OS.gdk_gc_new(image.pixmap);\n\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.gdk_gc_set_subwindow(gdkGC, OS.GDK_INCLUDE_INFERIORS);\n\tOS.gdk_draw_drawable(image.pixmap, gdkGC, data.drawable, x, y, 0, 0, rect.width, rect.height);\n\tOS.g_object_unref(gdkGC);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRectangle rect = image.getBounds();\n\tint /*long*/ gdkGC = OS.gdk_gc_new(image.pixmap);\n\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.gdk_gc_set_subwindow(gdkGC, OS.GDK_INCLUDE_INFERIORS);\n\tOS.gdk_draw_drawable(image.pixmap, gdkGC, data.drawable, x, y, 0, 0, rect.width, rect.height);\n\tOS.g_object_unref(gdkGC);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRectangle rect = image.getBounds();\n\tint /*long*/ gdkGC = OS.gdk_gc_new(image.pixmap);\n\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.gdk_gc_set_subwindow(gdkGC, OS.GDK_INCLUDE_INFERIORS);\n\tOS.gdk_draw_drawable(image.pixmap, gdkGC, data.drawable, x, y, 0, 0, rect.width, rect.height);\n\tOS.g_object_unref(gdkGC);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 7,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tint /*long*/ drawable = data.drawable;\n\tif (data.image == null && paint) OS.gdk_gc_set_exposures(handle, true);\n\tOS.gdk_draw_drawable(drawable, handle, drawable, srcX, srcY, destX, destY, width, height);\n\tif (data.image == null & paint) {\n\t\tOS.gdk_gc_set_exposures(handle, false);\n\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\tGdkRectangle rect = new GdkRectangle ();\n\t\tif (disjoint) {\n\t\t\trect.x = srcX;\n\t\t\trect.y = srcY;\n\t\t\trect.width = width;\n\t\t\trect.height = height;\n\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, srcY, width, height);\n\t\t} else {\n\t\t\tif (deltaX != 0) {\n\t\t\t\tint newX = destX - deltaX;\n\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\trect.x = newX;\n\t\t\t\trect.y = srcY;\n\t\t\t\trect.width = Math.abs(deltaX);\n\t\t\t\trect.height = height;\n\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\t\tOS.gdk_window_clear_area_e(drawable, newX, srcY, Math.abs(deltaX), height);\n\t\t\t}\n\t\t\tif (deltaY != 0) {\n\t\t\t\tint newY = destY - deltaY;\n\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\trect.x = srcX;\n\t\t\t\trect.y = newY;\n\t\t\t\trect.width = width;\n\t\t\t\trect.height = Math.abs(deltaY);\n\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, newY, width, Math.abs(deltaY));\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tint /*long*/ drawable = data.drawable;\n\tif (data.image == null && paint) OS.gdk_gc_set_exposures(handle, true);\n\tOS.gdk_draw_drawable(drawable, handle, drawable, srcX, srcY, destX, destY, width, height);\n\tif (data.image == null & paint) {\n\t\tOS.gdk_gc_set_exposures(handle, false);\n\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\tGdkRectangle rect = new GdkRectangle ();\n\t\tif (disjoint) {\n\t\t\trect.x = srcX;\n\t\t\trect.y = srcY;\n\t\t\trect.width = width;\n\t\t\trect.height = height;\n\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, srcY, width, height);\n\t\t} else {\n\t\t\tif (deltaX != 0) {\n\t\t\t\tint newX = destX - deltaX;\n\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\trect.x = newX;\n\t\t\t\trect.y = srcY;\n\t\t\t\trect.width = Math.abs(deltaX);\n\t\t\t\trect.height = height;\n\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\t\tOS.gdk_window_clear_area_e(drawable, newX, srcY, Math.abs(deltaX), height);\n\t\t\t}\n\t\t\tif (deltaY != 0) {\n\t\t\t\tint newY = destY - deltaY;\n\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\trect.x = srcX;\n\t\t\t\trect.y = newY;\n\t\t\t\trect.width = width;\n\t\t\t\trect.height = Math.abs(deltaY);\n\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, newY, width, Math.abs(deltaY));\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tint /*long*/ drawable = data.drawable;\n\tif (data.image == null && paint) OS.gdk_gc_set_exposures(handle, true);\n\tOS.gdk_draw_drawable(drawable, handle, drawable, srcX, srcY, destX, destY, width, height);\n\tif (data.image == null & paint) {\n\t\tOS.gdk_gc_set_exposures(handle, false);\n\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\tGdkRectangle rect = new GdkRectangle ();\n\t\tif (disjoint) {\n\t\t\trect.x = srcX;\n\t\t\trect.y = srcY;\n\t\t\trect.width = width;\n\t\t\trect.height = height;\n\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, srcY, width, height);\n\t\t} else {\n\t\t\tif (deltaX != 0) {\n\t\t\t\tint newX = destX - deltaX;\n\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\trect.x = newX;\n\t\t\t\trect.y = srcY;\n\t\t\t\trect.width = Math.abs(deltaX);\n\t\t\t\trect.height = height;\n\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\t\tOS.gdk_window_clear_area_e(drawable, newX, srcY, Math.abs(deltaX), height);\n\t\t\t}\n\t\t\tif (deltaY != 0) {\n\t\t\t\tint newY = destY - deltaY;\n\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\trect.x = srcX;\n\t\t\t\trect.y = newY;\n\t\t\t\trect.width = width;\n\t\t\t\trect.height = Math.abs(deltaY);\n\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);\n//\t\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, newY, width, Math.abs(deltaY));\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 9,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_arc(data.drawable, handle, 0, x, y, width, height, startAngle * 64, arcAngle * 64);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_arc(data.drawable, handle, 0, x, y, width, height, startAngle * 64, arcAngle * 64);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_arc(data.drawable, handle, 0, x, y, width, height, startAngle * 64, arcAngle * 64);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t/*\n\t* Feature in GTK.  The function gtk_widget_get_default_style() \n\t* can't be used here because gtk_paint_focus() uses GCs, which\n\t* are not valid in the default style. The fix is to use a style\n\t* from a widget.\n\t*/\n\tint /*long*/ style = OS.gtk_widget_get_style(data.device.shellHandle);\n\tOS.gtk_paint_focus(style, data.drawable, OS.GTK_STATE_NORMAL, null, data.device.shellHandle, new byte[1], x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t/*\n\t* Feature in GTK.  The function gtk_widget_get_default_style() \n\t* can't be used here because gtk_paint_focus() uses GCs, which\n\t* are not valid in the default style. The fix is to use a style\n\t* from a widget.\n\t*/\n\tint /*long*/ style = OS.gtk_widget_get_style(data.device.shellHandle);\n\tOS.gtk_paint_focus(style, data.drawable, OS.GTK_STATE_NORMAL, null, data.device.shellHandle, new byte[1], x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t/*\n\t* Feature in GTK.  The function gtk_widget_get_default_style() \n\t* can't be used here because gtk_paint_focus() uses GCs, which\n\t* are not valid in the default style. The fix is to use a style\n\t* from a widget.\n\t*/\n\tint /*long*/ style = OS.gtk_widget_get_style(data.device.shellHandle);\n\tOS.gtk_paint_focus(style, data.drawable, OS.GTK_STATE_NORMAL, null, data.device.shellHandle, new byte[1], x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 11,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 12,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_move_to(cairo, x1 + offset, y1 + offset);\n\t\tCairo.cairo_line_to(cairo, x2 + offset, y2 + offset);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_line (data.drawable, handle, x1, y1, x2, y2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_move_to(cairo, x1 + offset, y1 + offset);\n\t\tCairo.cairo_line_to(cairo, x2 + offset, y2 + offset);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_line (data.drawable, handle, x1, y1, x2, y2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_move_to(cairo, x1 + offset, y1 + offset);\n\t\tCairo.cairo_line_to(cairo, x2 + offset, y2 + offset);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_line (data.drawable, handle, x1, y1, x2, y2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, -2 * (float)Compatibility.PI);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_arc(data.drawable, handle, 0, x, y, width, height, 0, 23040);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, -2 * (float)Compatibility.PI);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_arc(data.drawable, handle, 0, x, y, width, height, 0, 23040);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, -2 * (float)Compatibility.PI);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_arc(data.drawable, handle, 0, x, y, width, height, 0, 23040);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tCairo.cairo_translate(cairo, offset, offset);\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_stroke(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tCairo.cairo_translate(cairo, offset, offset);\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_stroke(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tCairo.cairo_translate(cairo, offset, offset);\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_stroke(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_rectangle(cairo, x, y, 1, 1);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_point(data.drawable, handle, x, y);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_rectangle(cairo, x, y, 1, 1);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_point(data.drawable, handle, x, y);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_rectangle(cairo, x, y, 1, 1);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_point(data.drawable, handle, x, y);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_polygon(data.drawable, handle, 0, pointArray, pointArray.length / 2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_polygon(data.drawable, handle, 0, pointArray, pointArray.length / 2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_polygon(data.drawable, handle, 0, pointArray, pointArray.length / 2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 23,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, false);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_lines(data.drawable, handle, pointArray, pointArray.length / 2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, false);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_lines(data.drawable, handle, pointArray, pointArray.length / 2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, false);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_lines(data.drawable, handle, pointArray, pointArray.length / 2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_rectangle(cairo, x + offset, y + offset, width, height);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_rectangle(data.drawable, handle, 0, x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_rectangle(cairo, x + offset, y + offset, width, height);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_rectangle(data.drawable, handle, 0, x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_rectangle(cairo, x + offset, y + offset, width, height);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_draw_rectangle(data.drawable, handle, 0, x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, nx + offset, ny + offset);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint /*long*/ drawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle,  nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, nx + offset, ny + offset);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint /*long*/ drawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle,  nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, nx + offset, ny + offset);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint /*long*/ drawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t\tOS.gdk_draw_line(drawable, handle,  nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.gdk_draw_line(drawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t\tOS.gdk_draw_line(drawable,handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 0, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor flags\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetString(string, flags);\n\tGdkColor background = null;\n\tGdkGCValues values = null;\n\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {\n\t\tvalues = new GdkGCValues();\n\t\tOS.gdk_gc_get_values(handle, values);\n\t\tbackground = new GdkColor();\n\t\tbackground.pixel = values.background_pixel;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, background.pixel, background);\n\t}\n\tif (!data.xorMode) {\n\t\tOS.gdk_draw_layout_with_colors(data.drawable, handle, x, y, data.layout, null, background);\n\t} else {\n\t\tint /*long*/ layout = data.layout;\n\t\tint[] w = new int[1], h = new int[1];\n\t\tOS.pango_layout_get_size(layout, w, h);\n\t\tint width = OS.PANGO_PIXELS(w[0]);\n\t\tint height = OS.PANGO_PIXELS(h[0]);\n\t\tint /*long*/ pixmap = OS.gdk_pixmap_new(OS.GDK_ROOT_PARENT(), width, height, -1);\n\t\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);\n\t\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tGdkColor foreground = new GdkColor();\n\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);\n\t\tOS.gdk_draw_rectangle(pixmap, gdkGC, 1, 0, 0, width, height);\n\t\tif (values == null) {\n\t\t\tvalues = new GdkGCValues();\n\t\t\tOS.gdk_gc_get_values(handle, values);\n\t\t}\n\t\tforeground.pixel = values.foreground_pixel;\n\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);\n\t\tOS.gdk_draw_layout_with_colors(pixmap, gdkGC, 0, 0, layout, null, background);\n\t\tOS.g_object_unref(gdkGC);\n\t\tOS.gdk_draw_drawable(data.drawable, handle, pixmap, 0, 0, x, y, width, height);\n\t\tOS.g_object_unref(pixmap);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor flags\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetString(string, flags);\n\tGdkColor background = null;\n\tGdkGCValues values = null;\n\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {\n\t\tvalues = new GdkGCValues();\n\t\tOS.gdk_gc_get_values(handle, values);\n\t\tbackground = new GdkColor();\n\t\tbackground.pixel = values.background_pixel;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, background.pixel, background);\n\t}\n\tif (!data.xorMode) {\n\t\tOS.gdk_draw_layout_with_colors(data.drawable, handle, x, y, data.layout, null, background);\n\t} else {\n\t\tint /*long*/ layout = data.layout;\n\t\tint[] w = new int[1], h = new int[1];\n\t\tOS.pango_layout_get_size(layout, w, h);\n\t\tint width = OS.PANGO_PIXELS(w[0]);\n\t\tint height = OS.PANGO_PIXELS(h[0]);\n\t\tint /*long*/ pixmap = OS.gdk_pixmap_new(OS.GDK_ROOT_PARENT(), width, height, -1);\n\t\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);\n\t\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tGdkColor foreground = new GdkColor();\n\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);\n\t\tOS.gdk_draw_rectangle(pixmap, gdkGC, 1, 0, 0, width, height);\n\t\tif (values == null) {\n\t\t\tvalues = new GdkGCValues();\n\t\t\tOS.gdk_gc_get_values(handle, values);\n\t\t}\n\t\tforeground.pixel = values.foreground_pixel;\n\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);\n\t\tOS.gdk_draw_layout_with_colors(pixmap, gdkGC, 0, 0, layout, null, background);\n\t\tOS.g_object_unref(gdkGC);\n\t\tOS.gdk_draw_drawable(data.drawable, handle, pixmap, 0, 0, x, y, width, height);\n\t\tOS.g_object_unref(pixmap);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor flags\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetString(string, flags);\n\tGdkColor background = null;\n\tGdkGCValues values = null;\n\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {\n\t\tvalues = new GdkGCValues();\n\t\tOS.gdk_gc_get_values(handle, values);\n\t\tbackground = new GdkColor();\n\t\tbackground.pixel = values.background_pixel;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, background.pixel, background);\n\t}\n\tif (!data.xorMode) {\n\t\tOS.gdk_draw_layout_with_colors(data.drawable, handle, x, y, data.layout, null, background);\n\t} else {\n\t\tint /*long*/ layout = data.layout;\n\t\tint[] w = new int[1], h = new int[1];\n\t\tOS.pango_layout_get_size(layout, w, h);\n\t\tint width = OS.PANGO_PIXELS(w[0]);\n\t\tint height = OS.PANGO_PIXELS(h[0]);\n\t\tint /*long*/ pixmap = OS.gdk_pixmap_new(OS.GDK_ROOT_PARENT(), width, height, -1);\n\t\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);\n\t\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tGdkColor foreground = new GdkColor();\n\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);\n\t\tOS.gdk_draw_rectangle(pixmap, gdkGC, 1, 0, 0, width, height);\n\t\tif (values == null) {\n\t\t\tvalues = new GdkGCValues();\n\t\t\tOS.gdk_gc_get_values(handle, values);\n\t\t}\n\t\tforeground.pixel = values.foreground_pixel;\n\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);\n\t\tOS.gdk_draw_layout_with_colors(pixmap, gdkGC, 0, 0, layout, null, background);\n\t\tOS.g_object_unref(gdkGC);\n\t\tOS.gdk_draw_drawable(data.drawable, handle, pixmap, 0, 0, x, y, width, height);\n\t\tOS.g_object_unref(pixmap);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 34,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_line_to(cairo, 0, 0);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_arc(data.drawable, handle, 1, x, y, width, height, startAngle * 64, arcAngle * 64);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_line_to(cairo, 0, 0);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_arc(data.drawable, handle, 1, x, y, width, height, startAngle * 64, arcAngle * 64);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_line_to(cairo, 0, 0);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_arc(data.drawable, handle, 1, x, y, width, height, startAngle * 64, arcAngle * 64);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif ((width == 0) || (height == 0)) return;\n\t\n\t/* Rewrite this to use GdkPixbuf */\n\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\t\n\tRGB backgroundRGB, foregroundRGB;\n\tbackgroundRGB = getBackground().getRGB();\n\tforegroundRGB = getForeground().getRGB();\n\n\tRGB fromRGB, toRGB;\n\tfromRGB = foregroundRGB;\n\ttoRGB   = backgroundRGB;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfromRGB = backgroundRGB;\n\t\ttoRGB   = foregroundRGB;\n\t}\n\tif (fromRGB.equals(toRGB)) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ pattern;\n\t\tif (vertical) {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 0.0, 1.0);\n\t\t} else {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 1.0, 0.0);\n\t\t}\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 0, fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, 1);\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 1, toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, 1);\n\t\tCairo.cairo_save(cairo);\n\t\tCairo.cairo_translate(cairo, x, y);\n\t\tCairo.cairo_scale(cairo, width, height);\n\t\tCairo.cairo_rectangle(cairo, 0, 0, 1, 1);\n\t\tCairo.cairo_set_pattern(cairo, pattern);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\tCairo.cairo_pattern_destroy(pattern);\n\t\treturn;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\t8, 8, 8);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif ((width == 0) || (height == 0)) return;\n\t\n\t/* Rewrite this to use GdkPixbuf */\n\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\t\n\tRGB backgroundRGB, foregroundRGB;\n\tbackgroundRGB = getBackground().getRGB();\n\tforegroundRGB = getForeground().getRGB();\n\n\tRGB fromRGB, toRGB;\n\tfromRGB = foregroundRGB;\n\ttoRGB   = backgroundRGB;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfromRGB = backgroundRGB;\n\t\ttoRGB   = foregroundRGB;\n\t}\n\tif (fromRGB.equals(toRGB)) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ pattern;\n\t\tif (vertical) {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 0.0, 1.0);\n\t\t} else {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 1.0, 0.0);\n\t\t}\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 0, fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, 1);\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 1, toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, 1);\n\t\tCairo.cairo_save(cairo);\n\t\tCairo.cairo_translate(cairo, x, y);\n\t\tCairo.cairo_scale(cairo, width, height);\n\t\tCairo.cairo_rectangle(cairo, 0, 0, 1, 1);\n\t\tCairo.cairo_set_pattern(cairo, pattern);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\tCairo.cairo_pattern_destroy(pattern);\n\t\treturn;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\t8, 8, 8);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif ((width == 0) || (height == 0)) return;\n\t\n\t/* Rewrite this to use GdkPixbuf */\n\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\t\n\tRGB backgroundRGB, foregroundRGB;\n\tbackgroundRGB = getBackground().getRGB();\n\tforegroundRGB = getForeground().getRGB();\n\n\tRGB fromRGB, toRGB;\n\tfromRGB = foregroundRGB;\n\ttoRGB   = backgroundRGB;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfromRGB = backgroundRGB;\n\t\ttoRGB   = foregroundRGB;\n\t}\n\tif (fromRGB.equals(toRGB)) {\n\t\tfillRectangle(x, y, width, height);\n\t\treturn;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ pattern;\n\t\tif (vertical) {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 0.0, 1.0);\n\t\t} else {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 1.0, 0.0);\n\t\t}\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 0, fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, 1);\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 1, toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, 1);\n\t\tCairo.cairo_save(cairo);\n\t\tCairo.cairo_translate(cairo, x, y);\n\t\tCairo.cairo_scale(cairo, width, height);\n\t\tCairo.cairo_rectangle(cairo, 0, 0, 1, 1);\n\t\tCairo.cairo_set_pattern(cairo, pattern);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\tCairo.cairo_pattern_destroy(pattern);\n\t\treturn;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\t8, 8, 8);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 36,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, 2 * (float)Compatibility.PI);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_arc(data.drawable, handle, 1, x, y, width, height, 0, 23040);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, 2 * (float)Compatibility.PI);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_arc(data.drawable, handle, 1, x, y, width, height, 0, 23040);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, 2 * (float)Compatibility.PI);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_arc(data.drawable, handle, 1, x, y, width, height, 0, 23040);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 37,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\tCairo.cairo_save(cairo);\n\tif (data.backgroundPattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t} else {\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_fill(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\tCairo.cairo_save(cairo);\n\tif (data.backgroundPattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t} else {\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_fill(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\tCairo.cairo_save(cairo);\n\tif (data.backgroundPattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t} else {\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_fill(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 38,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_polygon(data.drawable, handle, 1, pointArray, pointArray.length / 2);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_polygon(data.drawable, handle, 1, pointArray, pointArray.length / 2);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_polygon(data.drawable, handle, 1, pointArray, pointArray.length / 2);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 39,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo; \n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_rectangle(cairo, x, y, width, height);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_rectangle(data.drawable, handle, 1, x, y, width, height);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo; \n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_rectangle(cairo, x, y, width, height);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_rectangle(data.drawable, handle, 1, x, y, width, height);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo; \n\tif (cairo != 0) {\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_rectangle(cairo, x, y, width, height);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.gdk_gc_set_foreground(handle, color);\n\tOS.gdk_draw_rectangle(data.drawable, handle, 1, x, y, width, height);\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 40,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (rect == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfillRectangle(rect.x, rect.y, rect.width, rect.height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (rect == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfillRectangle(rect.x, rect.y, rect.width, rect.height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (rect == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tfillRectangle(rect.x, rect.y, rect.width, rect.height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 41,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, nx, ny);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tOS.gdk_gc_set_foreground(handle, color);\n\tint /*long*/ drawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx, ny + nah2, naw2, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + nw - naw2, ny + nah2, naw2, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, nx, ny);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tOS.gdk_gc_set_foreground(handle, color);\n\tint /*long*/ drawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx, ny + nah2, naw2, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + nw - naw2, ny + nah2, naw2, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, nx, ny);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tOS.gdk_gc_set_foreground(handle, color);\n\tint /*long*/ drawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx, ny + nah2, naw2, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + nw - naw2, ny + nah2, naw2, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.gdk_draw_rectangle(drawable, handle, 1, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t} else {\n\t\t\tOS.gdk_draw_arc(drawable, handle, 1, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n\tcolor.pixel = values.foreground_pixel;\n\tOS.gdk_gc_set_foreground(handle, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 43,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//BOGUS\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t//BOGUS\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t//BOGUS\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 44,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.cairo != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.cairo != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.cairo != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 45,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0) return 0xFF;\n\treturn (int)(Cairo.cairo_current_alpha(data.cairo) * 255);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.cairo == 0) return 0xFF;\n\treturn (int)(Cairo.cairo_current_alpha(data.cairo) * 255);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.cairo == 0) return 0xFF;\n\treturn (int)(Cairo.cairo_current_alpha(data.cairo) * 255);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    if (data.cairo != 0) return SWT.ON;\n\treturn data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    if (data.cairo != 0) return SWT.ON;\n\treturn data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    if (data.cairo != 0) return SWT.ON;\n\treturn data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\treturn Color.gtk_new(data.device, color);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\treturn Color.gtk_new(data.device, color);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tGdkColor color = new GdkColor();\n\tcolor.pixel = values.background_pixel;\n\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\treturn Color.gtk_new(data.device, color);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 49,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//BOGUS\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t//BOGUS\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t//BOGUS\n\treturn stringExtent(new String(new char[]{ch})).x;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 50,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint[] width = new int[1], height = new int[1];\n\tOS.gdk_drawable_get_size(data.drawable, width, height);\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width[0], height[0]);\n\t} else {\n\t\tint /*long*/ rgn = OS.gdk_region_new();\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\trect.width = width[0];\n\t\trect.height = height[0];\n\t\tOS.gdk_region_union_with_rect(rgn, rect);\n\t\tOS.gdk_region_intersect(rgn, clipRgn);\n\t\tOS.gdk_region_get_clipbox(rgn, rect);\n\t\tOS.gdk_region_destroy(rgn);\n\t\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint[] width = new int[1], height = new int[1];\n\tOS.gdk_drawable_get_size(data.drawable, width, height);\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width[0], height[0]);\n\t} else {\n\t\tint /*long*/ rgn = OS.gdk_region_new();\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\trect.width = width[0];\n\t\trect.height = height[0];\n\t\tOS.gdk_region_union_with_rect(rgn, rect);\n\t\tOS.gdk_region_intersect(rgn, clipRgn);\n\t\tOS.gdk_region_get_clipbox(rgn, rect);\n\t\tOS.gdk_region_destroy(rgn);\n\t\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint[] width = new int[1], height = new int[1];\n\tOS.gdk_drawable_get_size(data.drawable, width, height);\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width[0], height[0]);\n\t} else {\n\t\tint /*long*/ rgn = OS.gdk_region_new();\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\trect.width = width[0];\n\t\trect.height = height[0];\n\t\tOS.gdk_region_union_with_rect(rgn, rect);\n\t\tOS.gdk_region_intersect(rgn, clipRgn);\n\t\tOS.gdk_region_get_clipbox(rgn, rect);\n\t\tOS.gdk_region_destroy(rgn);\n\t\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 51,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ hRegion = region.handle;\n\tOS.gdk_region_subtract(hRegion, hRegion);\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\tint[] width = new int[1], height = new int[1];\n\t\tOS.gdk_drawable_get_size(data.drawable, width, height);\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\trect.x = rect.y = 0;\n\t\trect.width = width[0];\n\t\trect.height = height[0];\n\t\tOS.gdk_region_union_with_rect(hRegion, rect);\n\t} else {\n\t\tOS.gdk_region_union(hRegion, clipRgn);\n\t\tif (!isIdentity(data.matrix)) return;\n\t}\n\tif (data.damageRgn != 0) {\n\t\tOS.gdk_region_intersect(hRegion, data.damageRgn);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ hRegion = region.handle;\n\tOS.gdk_region_subtract(hRegion, hRegion);\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\tint[] width = new int[1], height = new int[1];\n\t\tOS.gdk_drawable_get_size(data.drawable, width, height);\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\trect.x = rect.y = 0;\n\t\trect.width = width[0];\n\t\trect.height = height[0];\n\t\tOS.gdk_region_union_with_rect(hRegion, rect);\n\t} else {\n\t\tOS.gdk_region_union(hRegion, clipRgn);\n\t\tif (!isIdentity(data.matrix)) return;\n\t}\n\tif (data.damageRgn != 0) {\n\t\tOS.gdk_region_intersect(hRegion, data.damageRgn);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ hRegion = region.handle;\n\tOS.gdk_region_subtract(hRegion, hRegion);\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\tint[] width = new int[1], height = new int[1];\n\t\tOS.gdk_drawable_get_size(data.drawable, width, height);\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\trect.x = rect.y = 0;\n\t\trect.width = width[0];\n\t\trect.height = height[0];\n\t\tOS.gdk_region_union_with_rect(hRegion, rect);\n\t} else {\n\t\tOS.gdk_region_union(hRegion, clipRgn);\n\t\tif (!isIdentity(data.matrix)) return;\n\t}\n\tif (data.damageRgn != 0) {\n\t\tOS.gdk_region_intersect(hRegion, data.damageRgn);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo == 0) return SWT.FILL_EVEN_ODD;\n\treturn Cairo.cairo_current_fill_rule(cairo) == Cairo.CAIRO_FILL_RULE_WINDING ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo == 0) return SWT.FILL_EVEN_ODD;\n\treturn Cairo.cairo_current_fill_rule(cairo) == Cairo.CAIRO_FILL_RULE_WINDING ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo == 0) return SWT.FILL_EVEN_ODD;\n\treturn Cairo.cairo_current_fill_rule(cairo) == Cairo.CAIRO_FILL_RULE_WINDING ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 53,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn Font.gtk_new(data.device, data.font);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn Font.gtk_new(data.device, data.font);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn Font.gtk_new(data.device, data.font);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 54,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint /*long*/ context = data.context;\n\tint /*long*/ lang = OS.pango_context_get_language(context);\n\tint /*long*/ metrics = OS.pango_context_get_metrics(context, data.font, lang);\n\tFontMetrics fm = new FontMetrics();\n\tfm.ascent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_ascent(metrics));\n\tfm.descent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_descent(metrics));\n\tfm.averageCharWidth = OS.PANGO_PIXELS(OS.pango_font_metrics_get_approximate_char_width(metrics));\n\tfm.height = fm.ascent + fm.descent;\n\tOS.pango_font_metrics_unref(metrics);\n\treturn fm;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint /*long*/ context = data.context;\n\tint /*long*/ lang = OS.pango_context_get_language(context);\n\tint /*long*/ metrics = OS.pango_context_get_metrics(context, data.font, lang);\n\tFontMetrics fm = new FontMetrics();\n\tfm.ascent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_ascent(metrics));\n\tfm.descent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_descent(metrics));\n\tfm.averageCharWidth = OS.PANGO_PIXELS(OS.pango_font_metrics_get_approximate_char_width(metrics));\n\tfm.height = fm.ascent + fm.descent;\n\tOS.pango_font_metrics_unref(metrics);\n\treturn fm;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint /*long*/ context = data.context;\n\tint /*long*/ lang = OS.pango_context_get_language(context);\n\tint /*long*/ metrics = OS.pango_context_get_metrics(context, data.font, lang);\n\tFontMetrics fm = new FontMetrics();\n\tfm.ascent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_ascent(metrics));\n\tfm.descent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_descent(metrics));\n\tfm.averageCharWidth = OS.PANGO_PIXELS(OS.pango_font_metrics_get_approximate_char_width(metrics));\n\tfm.height = fm.ascent + fm.descent;\n\tOS.pango_font_metrics_unref(metrics);\n\treturn fm;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 56,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 57,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.interpolation;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.interpolation;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.interpolation;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 58,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint cap = SWT.CAP_FLAT;\n\tswitch (values.cap_style) {\n\t\tcase OS.GDK_CAP_ROUND: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.GDK_CAP_BUTT: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.GDK_CAP_PROJECTING: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint cap = SWT.CAP_FLAT;\n\tswitch (values.cap_style) {\n\t\tcase OS.GDK_CAP_ROUND: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.GDK_CAP_BUTT: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.GDK_CAP_PROJECTING: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint cap = SWT.CAP_FLAT;\n\tswitch (values.cap_style) {\n\t\tcase OS.GDK_CAP_ROUND: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.GDK_CAP_BUTT: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.GDK_CAP_PROJECTING: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 59,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint[] dash_list = data.dashes;\n\tif (dash_list == null) return null;\n\tint[] dashes = new int[dash_list.length];\n\tSystem.arraycopy(dash_list, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint[] dash_list = data.dashes;\n\tif (dash_list == null) return null;\n\tint[] dashes = new int[dash_list.length];\n\tSystem.arraycopy(dash_list, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint[] dash_list = data.dashes;\n\tif (dash_list == null) return null;\n\tint[] dashes = new int[dash_list.length];\n\tSystem.arraycopy(dash_list, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 60,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint join = SWT.JOIN_MITER;\n\tswitch (values.join_style) {\n\t\tcase OS.GDK_JOIN_MITER: join = SWT.JOIN_MITER; break;\n\t\tcase OS.GDK_JOIN_ROUND: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.GDK_JOIN_BEVEL: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint join = SWT.JOIN_MITER;\n\tswitch (values.join_style) {\n\t\tcase OS.GDK_JOIN_MITER: join = SWT.JOIN_MITER; break;\n\t\tcase OS.GDK_JOIN_ROUND: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.GDK_JOIN_BEVEL: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint join = SWT.JOIN_MITER;\n\tswitch (values.join_style) {\n\t\tcase OS.GDK_JOIN_MITER: join = SWT.JOIN_MITER; break;\n\t\tcase OS.GDK_JOIN_ROUND: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.GDK_JOIN_BEVEL: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 61,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 62,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\treturn values.line_width;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\treturn values.line_width;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\treturn values.line_width;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 63,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 64,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    return data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    return data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    return data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 65,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_matrix_copy(transform.handle, data.matrix);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_matrix_copy(transform.handle, data.matrix);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_matrix_copy(transform.handle, data.matrix);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 66,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\treturn values.function == OS.GDK_XOR;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\treturn values.function == OS.GDK_XOR;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\treturn values.function == OS.GDK_XOR;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 70,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (advanced && data.cairo != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitCairo();\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tint /*long*/ cairo = data.cairo;\n\t\tif (cairo != 0) Cairo.cairo_destroy(cairo);\n\t\tint /*long*/ matrix = data.matrix;\n\t\tif (matrix != 0) Cairo.cairo_matrix_destroy(matrix);\n\t\tint /*long*/ inverseMatrix = data.inverseMatrix;\n\t\tif (inverseMatrix != 0) Cairo.cairo_matrix_destroy(inverseMatrix);\n\t\tdata.cairo = data.matrix = data.inverseMatrix = 0;\n\t\tdata.antialias = data.textAntialias = data.interpolation = SWT.DEFAULT;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (advanced && data.cairo != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitCairo();\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tint /*long*/ cairo = data.cairo;\n\t\tif (cairo != 0) Cairo.cairo_destroy(cairo);\n\t\tint /*long*/ matrix = data.matrix;\n\t\tif (matrix != 0) Cairo.cairo_matrix_destroy(matrix);\n\t\tint /*long*/ inverseMatrix = data.inverseMatrix;\n\t\tif (inverseMatrix != 0) Cairo.cairo_matrix_destroy(inverseMatrix);\n\t\tdata.cairo = data.matrix = data.inverseMatrix = 0;\n\t\tdata.antialias = data.textAntialias = data.interpolation = SWT.DEFAULT;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (advanced && data.cairo != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitCairo();\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tint /*long*/ cairo = data.cairo;\n\t\tif (cairo != 0) Cairo.cairo_destroy(cairo);\n\t\tint /*long*/ matrix = data.matrix;\n\t\tif (matrix != 0) Cairo.cairo_matrix_destroy(matrix);\n\t\tint /*long*/ inverseMatrix = data.inverseMatrix;\n\t\tif (inverseMatrix != 0) Cairo.cairo_matrix_destroy(inverseMatrix);\n\t\tdata.cairo = data.matrix = data.inverseMatrix = 0;\n\t\tdata.antialias = data.textAntialias = data.interpolation = SWT.DEFAULT;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 74,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitCairo();\n\tCairo.cairo_set_alpha(data.cairo, alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tinitCairo();\n\tCairo.cairo_set_alpha(data.cairo, alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tinitCairo();\n\tCairo.cairo_set_alpha(data.cairo, alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 75,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT: break;\n\t\tcase SWT.OFF: break;\n\t\tcase SWT.ON:\n            initCairo();\n            break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.antialias = antialias;\n}",
        "accuracyTokens" : 0.7868852459016393,
        "accuracyCharacters" : 0.826865671641791
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT: break;\n\t\tcase SWT.OFF: break;\n\t\tcase SWT.ON:\n            initCairo();\n            break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.antialias = antialias;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT: break;\n\t\tcase SWT.OFF: break;\n\t\tcase SWT.ON:\n            initCairo();\n            break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.antialias = antialias;\n}",
        "accuracyTokens" : 0.7333333333333333,
        "accuracyCharacters" : 0.7615571776155717
      } ],
      "memberId" : "2c712e6c916f981c4c3f91c6fc8318d4"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 76,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_background(handle, color.handle);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_background(handle, color.handle);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_background(handle, color.handle);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 77,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.7608695652173914,
        "accuracyCharacters" : 0.7991803278688525
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5,
        "accuracyCharacters" : 0.5770750988142292
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.7419354838709677,
        "accuracyCharacters" : 0.7416413373860182
      } ],
      "memberId" : "0fba188f6128f7bd8f6fd684dc2bf13e"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 83,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkRectangle rect = new GdkRectangle();\n\trect.x = x;\n\trect.y = y;\n\trect.width = width;\n\trect.height = height;\n\tint /*long*/ clipRgn = OS.gdk_region_new();\n\tOS.gdk_region_union_with_rect(clipRgn, rect);\n\tsetClipping(clipRgn);\n\tOS.gdk_region_destroy(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkRectangle rect = new GdkRectangle();\n\trect.x = x;\n\trect.y = y;\n\trect.width = width;\n\trect.height = height;\n\tint /*long*/ clipRgn = OS.gdk_region_new();\n\tOS.gdk_region_union_with_rect(clipRgn, rect);\n\tsetClipping(clipRgn);\n\tOS.gdk_region_destroy(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tGdkRectangle rect = new GdkRectangle();\n\trect.x = x;\n\trect.y = y;\n\trect.width = width;\n\trect.height = height;\n\tint /*long*/ clipRgn = OS.gdk_region_new();\n\tOS.gdk_region_union_with_rect(clipRgn, rect);\n\tsetClipping(clipRgn);\n\tOS.gdk_region_destroy(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 84,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tinitCairo();\n\t\tint /*long*/ cairo = data.cairo;\n\t\tCairo.cairo_add_path(cairo, path.handle);\n\t\tCairo.cairo_clip(cairo);\n\t\tCairo.cairo_new_path(cairo);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tinitCairo();\n\t\tint /*long*/ cairo = data.cairo;\n\t\tCairo.cairo_add_path(cairo, path.handle);\n\t\tCairo.cairo_clip(cairo);\n\t\tCairo.cairo_new_path(cairo);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tinitCairo();\n\t\tint /*long*/ cairo = data.cairo;\n\t\tCairo.cairo_add_path(cairo, path.handle);\n\t\tCairo.cairo_clip(cairo);\n\t\tCairo.cairo_new_path(cairo);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 85,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 86,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 87,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ fontHandle = data.font = font.handle;\n\tOS.pango_layout_set_font_description(data.layout, fontHandle);\n\tdata.stringWidth = data.stringHeight = -1;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tsetCairoFont(cairo, fontHandle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ fontHandle = data.font = font.handle;\n\tOS.pango_layout_set_font_description(data.layout, fontHandle);\n\tdata.stringWidth = data.stringHeight = -1;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tsetCairoFont(cairo, fontHandle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ fontHandle = data.font = font.handle;\n\tOS.pango_layout_set_font_description(data.layout, fontHandle);\n\tdata.stringWidth = data.stringHeight = -1;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tsetCairoFont(cairo, fontHandle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\t\tcairo_mode = Cairo.CAIRO_FILL_RULE_WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tcairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//TODO - need fill rule in X, GDK has no API\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_fill_rule(cairo, cairo_mode);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\t\tcairo_mode = Cairo.CAIRO_FILL_RULE_WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tcairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//TODO - need fill rule in X, GDK has no API\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_fill_rule(cairo, cairo_mode);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\t\tcairo_mode = Cairo.CAIRO_FILL_RULE_WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tcairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\t//TODO - need fill rule in X, GDK has no API\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_fill_rule(cairo, cairo_mode);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 89,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_foreground(handle, color.handle);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tGdkColor gdkColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (gdkColor.red & 0xFFFF) / (float)0xFFFF, (gdkColor.green & 0xFFFF) / (float)0xFFFF, (gdkColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_foreground(handle, color.handle);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tGdkColor gdkColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (gdkColor.red & 0xFFFF) / (float)0xFFFF, (gdkColor.green & 0xFFFF) / (float)0xFFFF, (gdkColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\t\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.gdk_gc_set_foreground(handle, color.handle);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tGdkColor gdkColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (gdkColor.red & 0xFFFF) / (float)0xFFFF, (gdkColor.green & 0xFFFF) / (float)0xFFFF, (gdkColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (pattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\t} else {\n\t\tGdkGCValues values = new GdkGCValues();\n\t\tOS.gdk_gc_get_values(handle, values);\n\t\tGdkColor color = new GdkColor();\n\t\tcolor.pixel = values.foreground_pixel;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.9294871794871795,
        "accuracyCharacters" : 0.9382093316519546
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (pattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\t} else {\n\t\tGdkGCValues values = new GdkGCValues();\n\t\tOS.gdk_gc_get_values(handle, values);\n\t\tGdkColor color = new GdkColor();\n\t\tcolor.pixel = values.foreground_pixel;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.8481012658227848,
        "accuracyCharacters" : 0.8665835411471322
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (pattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\t} else {\n\t\tGdkGCValues values = new GdkGCValues();\n\t\tOS.gdk_gc_get_values(handle, values);\n\t\tGdkColor color = new GdkColor();\n\t\tcolor.pixel = values.foreground_pixel;\n\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();\n\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.9069767441860465,
        "accuracyCharacters" : 0.9031890660592256
      } ],
      "memberId" : "e82be26b5083599db67cf513c561fdf0"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 91,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitCairo();\n\tdata.interpolation = interpolation;\n}",
        "accuracyTokens" : 0.7868852459016393,
        "accuracyCharacters" : 0.8154761904761905
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitCairo();\n\tdata.interpolation = interpolation;\n}",
        "accuracyTokens" : 0.9836065573770492,
        "accuracyCharacters" : 0.9732142857142857
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitCairo();\n\tdata.interpolation = interpolation;\n}",
        "accuracyTokens" : 0.7333333333333333,
        "accuracyCharacters" : 0.7598039215686274
      } ],
      "memberId" : "a09c6f29d1ae78bf6f362270ab8c5006"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 92,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint cap_style = 0, cairo_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.GDK_CAP_ROUND;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.GDK_CAP_BUTT;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_BUTT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.GDK_CAP_PROJECTING;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_cap(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint cap_style = 0, cairo_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.GDK_CAP_ROUND;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.GDK_CAP_BUTT;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_BUTT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.GDK_CAP_PROJECTING;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_cap(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint cap_style = 0, cairo_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.GDK_CAP_ROUND;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.GDK_CAP_BUTT;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_BUTT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.GDK_CAP_PROJECTING;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_cap(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 93,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (dashes != null && dashes.length > 0) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdash_list[i] = (byte)dash;\n\t\t}\n\t\tOS.gdk_gc_set_dashes(handle, 0, dash_list, dash_list.length);\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, values.cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (data.dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[data.dashes.length];\n\t\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\t\tcairoDashes[i] = data.dashes[i];\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (dashes != null && dashes.length > 0) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdash_list[i] = (byte)dash;\n\t\t}\n\t\tOS.gdk_gc_set_dashes(handle, 0, dash_list, dash_list.length);\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, values.cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (data.dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[data.dashes.length];\n\t\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\t\tcairoDashes[i] = data.dashes[i];\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (dashes != null && dashes.length > 0) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdash_list[i] = (byte)dash;\n\t\t}\n\t\tOS.gdk_gc_set_dashes(handle, 0, dash_list, dash_list.length);\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, values.cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (data.dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[data.dashes.length];\n\t\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\t\tcairoDashes[i] = data.dashes[i];\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 94,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint join_style = 0, cairo_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.GDK_JOIN_MITER;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.GDK_JOIN_ROUND;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.GDK_JOIN_BEVEL;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, values.cap_style, join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_join(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint join_style = 0, cairo_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.GDK_JOIN_MITER;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.GDK_JOIN_ROUND;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.GDK_JOIN_BEVEL;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, values.cap_style, join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_join(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint join_style = 0, cairo_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.GDK_JOIN_MITER;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.GDK_JOIN_ROUND;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.GDK_JOIN_BEVEL;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, line_style, values.cap_style, join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_join(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 95,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint[] dashes = null;\n\tint width = values.line_width;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, dashes != null ? OS.GDK_LINE_ON_OFF_DASH : OS.GDK_LINE_SOLID, values.cap_style, values.join_style);\n\tif (dashes != null) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dash_list.length; i++) {\n\t\t\tdash_list[i] = (byte)(width == 0 ? dashes[i] : dashes[i] * width);\n\t\t}\n\t\tOS.gdk_gc_set_dashes(handle, 0, dash_list, dash_list.length);\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[dashes.length];\n\t\t\tfor (int i = 0; i < cairoDashes.length; i++) {\n\t\t\t\tcairoDashes[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint[] dashes = null;\n\tint width = values.line_width;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, dashes != null ? OS.GDK_LINE_ON_OFF_DASH : OS.GDK_LINE_SOLID, values.cap_style, values.join_style);\n\tif (dashes != null) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dash_list.length; i++) {\n\t\t\tdash_list[i] = (byte)(width == 0 ? dashes[i] : dashes[i] * width);\n\t\t}\n\t\tOS.gdk_gc_set_dashes(handle, 0, dash_list, dash_list.length);\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[dashes.length];\n\t\t\tfor (int i = 0; i < cairoDashes.length; i++) {\n\t\t\t\tcairoDashes[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint[] dashes = null;\n\tint width = values.line_width;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tOS.gdk_gc_set_line_attributes(handle, values.line_width, dashes != null ? OS.GDK_LINE_ON_OFF_DASH : OS.GDK_LINE_SOLID, values.cap_style, values.join_style);\n\tif (dashes != null) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dash_list.length; i++) {\n\t\t\tdash_list[i] = (byte)(width == 0 ? dashes[i] : dashes[i] * width);\n\t\t}\n\t\tOS.gdk_gc_set_dashes(handle, 0, dash_list, dash_list.length);\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[dashes.length];\n\t\t\tfor (int i = 0; i < cairoDashes.length; i++) {\n\t\t\t\tcairoDashes[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 96,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, lineWidth, line_style, values.cap_style, values.join_style);\n\tdata.lineWidth = lineWidth;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_width(cairo, Math.max (1, lineWidth));\n\t}\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, lineWidth, line_style, values.cap_style, values.join_style);\n\tdata.lineWidth = lineWidth;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_width(cairo, Math.max (1, lineWidth));\n\t}\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tGdkGCValues values = new GdkGCValues();\n\tOS.gdk_gc_get_values(handle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.GDK_LINE_SOLID : OS.GDK_LINE_ON_OFF_DASH;\n\tOS.gdk_gc_set_line_attributes(handle, lineWidth, line_style, values.cap_style, values.join_style);\n\tdata.lineWidth = lineWidth;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_width(cairo, Math.max (1, lineWidth));\n\t}\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 98,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.textAntialias = antialias;\n}",
        "accuracyTokens" : 0.7796610169491526,
        "accuracyCharacters" : 0.8328530259365994
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.textAntialias = antialias;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.textAntialias = antialias;\n}",
        "accuracyTokens" : 0.726027397260274,
        "accuracyCharacters" : 0.7683215130023641
      } ],
      "memberId" : "3138e6f9a55300d28a2c49e4243b61f2"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 99,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_concat_matrix(cairo, data.inverseMatrix);\n\tif (transform != null) {\n\t\tCairo.cairo_concat_matrix(cairo, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.matrix, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);\n\t\tCairo.cairo_matrix_invert(data.inverseMatrix);\n\t} else {\n\t\tCairo.cairo_matrix_set_identity(data.matrix);\n\t\tCairo.cairo_matrix_set_identity(data.inverseMatrix);\n\t}\n\t//TODO - round off problems\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint /*long*/ matrix = data.inverseMatrix;\n\t\tint /*long*/ newRgn = OS.gdk_region_new();\n\t\tint[] nRects = new int[1];\n\t\tint /*long*/[] rects = new int /*long*/[1];\n\t\tOS.gdk_region_get_rectangles(clipRgn, rects, nRects);\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\tint[] pointArray = new int[8];\n\t\tdouble[] x = new double[1], y = new double[1];\n\t\tfor (int i=0; i<nRects[0]; i++) {\n\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);\n\t\t\tx[0] = rect.x;\n\t\t\ty[0] = rect.y;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[0] = (int)Math.round(x[0]);\n\t\t\tpointArray[1] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x + rect.width;\n\t\t\ty[0] = rect.y;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[2] = (int)Math.round(x[0]);\n\t\t\tpointArray[3] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x + rect.width;\n\t\t\ty[0] = rect.y + rect.height;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[4] = (int)Math.round(x[0]);\n\t\t\tpointArray[5] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x;\n\t\t\ty[0] = rect.y + rect.height;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[6] = (int)Math.round(x[0]);\n\t\t\tpointArray[7] = (int)Math.round(y[0]);\n\t\t\tint /*long*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);\n\t\t\tOS.gdk_region_union(newRgn, polyRgn);\n\t\t\tOS.gdk_region_destroy(polyRgn);\n\t\t}\n\t\tOS.gdk_region_destroy(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : 0.9776422764227642,
        "accuracyCharacters" : 0.9769647696476965
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_concat_matrix(cairo, data.inverseMatrix);\n\tif (transform != null) {\n\t\tCairo.cairo_concat_matrix(cairo, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.matrix, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);\n\t\tCairo.cairo_matrix_invert(data.inverseMatrix);\n\t} else {\n\t\tCairo.cairo_matrix_set_identity(data.matrix);\n\t\tCairo.cairo_matrix_set_identity(data.inverseMatrix);\n\t}\n\t//TODO - round off problems\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint /*long*/ matrix = data.inverseMatrix;\n\t\tint /*long*/ newRgn = OS.gdk_region_new();\n\t\tint[] nRects = new int[1];\n\t\tint /*long*/[] rects = new int /*long*/[1];\n\t\tOS.gdk_region_get_rectangles(clipRgn, rects, nRects);\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\tint[] pointArray = new int[8];\n\t\tdouble[] x = new double[1], y = new double[1];\n\t\tfor (int i=0; i<nRects[0]; i++) {\n\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);\n\t\t\tx[0] = rect.x;\n\t\t\ty[0] = rect.y;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[0] = (int)Math.round(x[0]);\n\t\t\tpointArray[1] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x + rect.width;\n\t\t\ty[0] = rect.y;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[2] = (int)Math.round(x[0]);\n\t\t\tpointArray[3] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x + rect.width;\n\t\t\ty[0] = rect.y + rect.height;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[4] = (int)Math.round(x[0]);\n\t\t\tpointArray[5] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x;\n\t\t\ty[0] = rect.y + rect.height;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[6] = (int)Math.round(x[0]);\n\t\t\tpointArray[7] = (int)Math.round(y[0]);\n\t\t\tint /*long*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);\n\t\t\tOS.gdk_region_union(newRgn, polyRgn);\n\t\t\tOS.gdk_region_destroy(polyRgn);\n\t\t}\n\t\tOS.gdk_region_destroy(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : 0.951417004048583,
        "accuracyCharacters" : 0.9509230076542098
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_concat_matrix(cairo, data.inverseMatrix);\n\tif (transform != null) {\n\t\tCairo.cairo_concat_matrix(cairo, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.matrix, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);\n\t\tCairo.cairo_matrix_invert(data.inverseMatrix);\n\t} else {\n\t\tCairo.cairo_matrix_set_identity(data.matrix);\n\t\tCairo.cairo_matrix_set_identity(data.inverseMatrix);\n\t}\n\t//TODO - round off problems\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint /*long*/ matrix = data.inverseMatrix;\n\t\tint /*long*/ newRgn = OS.gdk_region_new();\n\t\tint[] nRects = new int[1];\n\t\tint /*long*/[] rects = new int /*long*/[1];\n\t\tOS.gdk_region_get_rectangles(clipRgn, rects, nRects);\n\t\tGdkRectangle rect = new GdkRectangle();\n\t\tint[] pointArray = new int[8];\n\t\tdouble[] x = new double[1], y = new double[1];\n\t\tfor (int i=0; i<nRects[0]; i++) {\n\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);\n\t\t\tx[0] = rect.x;\n\t\t\ty[0] = rect.y;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[0] = (int)Math.round(x[0]);\n\t\t\tpointArray[1] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x + rect.width;\n\t\t\ty[0] = rect.y;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[2] = (int)Math.round(x[0]);\n\t\t\tpointArray[3] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x + rect.width;\n\t\t\ty[0] = rect.y + rect.height;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[4] = (int)Math.round(x[0]);\n\t\t\tpointArray[5] = (int)Math.round(y[0]);\n\t\t\tx[0] = rect.x;\n\t\t\ty[0] = rect.y + rect.height;\n\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\t\tpointArray[6] = (int)Math.round(x[0]);\n\t\t\tpointArray[7] = (int)Math.round(y[0]);\n\t\t\tint /*long*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);\n\t\t\tOS.gdk_region_union(newRgn, polyRgn);\n\t\t\tOS.gdk_region_destroy(polyRgn);\n\t\t}\n\t\tOS.gdk_region_destroy(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : 0.9625984251968503,
        "accuracyCharacters" : 0.9538528515454942
      } ],
      "memberId" : "674189c6a33feeef0ccc77ff4bdabb0e"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 100,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tOS.gdk_gc_set_function(handle, xor ? OS.GDK_XOR : OS.GDK_COPY);\n\tdata.xorMode = xor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tOS.gdk_gc_set_function(handle, xor ? OS.GDK_XOR : OS.GDK_COPY);\n\tdata.xorMode = xor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tOS.gdk_gc_set_function(handle, xor ? OS.GDK_XOR : OS.GDK_COPY);\n\tdata.xorMode = xor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 103,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetString(string, flags);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint[] width = new int[1], height = new int[1];\n\tOS.pango_layout_get_size(data.layout, width, height);\n\treturn new Point(data.stringWidth = OS.PANGO_PIXELS(width[0]), data.stringHeight = OS.PANGO_PIXELS(height[0]));\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetString(string, flags);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint[] width = new int[1], height = new int[1];\n\tOS.pango_layout_get_size(data.layout, width, height);\n\treturn new Point(data.stringWidth = OS.PANGO_PIXELS(width[0]), data.stringHeight = OS.PANGO_PIXELS(height[0]));\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetString(string, flags);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint[] width = new int[1], height = new int[1];\n\tOS.pango_layout_get_size(data.layout, width, height);\n\treturn new Point(data.stringWidth = OS.PANGO_PIXELS(width[0]), data.stringHeight = OS.PANGO_PIXELS(height[0]));\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 5,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - x, deltaY = destY - y;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (data.image == null && paint) OS.XSetGraphicsExposures (xDisplay, handle, true);\n\tOS.XCopyArea(xDisplay, xDrawable, xDrawable, handle, x, y, width, height, destX, destY);\n\tif (data.image == null && paint) {\n\t\tOS.XSetGraphicsExposures (xDisplay, handle, false);\n\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);\n\t\tif (disjoint) {\n\t\t\tOS.XClearArea (xDisplay, xDrawable, x, y, width, height, true);\n\t\t} else {\n\t\t\tif (deltaX != 0) {\n\t\t\t\tint newX = destX - deltaX;\n\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\tOS.XClearArea (xDisplay, xDrawable, newX, y, Math.abs (deltaX), height, true);\n\t\t\t}\n\t\t\tif (deltaY != 0) {\n\t\t\t\tint newY = destY - deltaY;\n\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\tOS.XClearArea (xDisplay, xDrawable, x, newY, width, Math.abs (deltaY), true);\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - x, deltaY = destY - y;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (data.image == null && paint) OS.XSetGraphicsExposures (xDisplay, handle, true);\n\tOS.XCopyArea(xDisplay, xDrawable, xDrawable, handle, x, y, width, height, destX, destY);\n\tif (data.image == null && paint) {\n\t\tOS.XSetGraphicsExposures (xDisplay, handle, false);\n\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);\n\t\tif (disjoint) {\n\t\t\tOS.XClearArea (xDisplay, xDrawable, x, y, width, height, true);\n\t\t} else {\n\t\t\tif (deltaX != 0) {\n\t\t\t\tint newX = destX - deltaX;\n\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\tOS.XClearArea (xDisplay, xDrawable, newX, y, Math.abs (deltaX), height, true);\n\t\t\t}\n\t\t\tif (deltaY != 0) {\n\t\t\t\tint newY = destY - deltaY;\n\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\tOS.XClearArea (xDisplay, xDrawable, x, newY, width, Math.abs (deltaY), true);\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width <= 0 || height <= 0) return;\n\tint deltaX = destX - x, deltaY = destY - y;\n\tif (deltaX == 0 && deltaY == 0) return;\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (data.image == null && paint) OS.XSetGraphicsExposures (xDisplay, handle, true);\n\tOS.XCopyArea(xDisplay, xDrawable, xDrawable, handle, x, y, width, height, destX, destY);\n\tif (data.image == null && paint) {\n\t\tOS.XSetGraphicsExposures (xDisplay, handle, false);\n\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);\n\t\tif (disjoint) {\n\t\t\tOS.XClearArea (xDisplay, xDrawable, x, y, width, height, true);\n\t\t} else {\n\t\t\tif (deltaX != 0) {\n\t\t\t\tint newX = destX - deltaX;\n\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\tOS.XClearArea (xDisplay, xDrawable, newX, y, Math.abs (deltaX), height, true);\n\t\t\t}\n\t\t\tif (deltaY != 0) {\n\t\t\t\tint newY = destY - deltaY;\n\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\tOS.XClearArea (xDisplay, xDrawable, x, newY, width, Math.abs (deltaY), true);\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRectangle rect = image.getBounds();\n\tint xDisplay = data.display;\n\tint xGC = OS.XCreateGC(xDisplay, image.pixmap, 0, null);\n\tif (xGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.XSetSubwindowMode (xDisplay, xGC, OS.IncludeInferiors);\n\tOS.XCopyArea(xDisplay, data.drawable, image.pixmap, xGC, x, y, rect.width, rect.height, 0, 0);\n\tOS.XFreeGC(xDisplay, xGC);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRectangle rect = image.getBounds();\n\tint xDisplay = data.display;\n\tint xGC = OS.XCreateGC(xDisplay, image.pixmap, 0, null);\n\tif (xGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.XSetSubwindowMode (xDisplay, xGC, OS.IncludeInferiors);\n\tOS.XCopyArea(xDisplay, data.drawable, image.pixmap, xGC, x, y, rect.width, rect.height, 0, 0);\n\tOS.XFreeGC(xDisplay, xGC);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tRectangle rect = image.getBounds();\n\tint xDisplay = data.display;\n\tint xGC = OS.XCreateGC(xDisplay, image.pixmap, 0, null);\n\tif (xGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\tOS.XSetSubwindowMode (xDisplay, xGC, OS.IncludeInferiors);\n\tOS.XCopyArea(xDisplay, data.drawable, image.pixmap, xGC, x, y, rect.width, rect.height, 0, 0);\n\tOS.XFreeGC(xDisplay, xGC);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 8,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawArc(data.display, data.drawable, handle, x, y, width, height, startAngle * 64, arcAngle * 64);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawArc(data.display, data.drawable, handle, x, y, width, height, startAngle * 64, arcAngle * 64);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawArc(data.display, data.drawable, handle, x, y, width, height, startAngle * 64, arcAngle * 64);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 9,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t/*\n\t* When the drawable is not a widget, the highlight\n\t* color is zero.\n\t*/\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tint highlightColor = 0;\n\tint widget = OS.XtWindowToWidget (xDisplay, xDrawable);\n\tif (widget != 0) {\n\t\tint [] argList = {OS.XmNhighlightColor, 0};\n\t\tOS.XtGetValues (widget, argList, argList.length / 2);\n\t\thighlightColor = argList [1];\n\t}\n\n\t/* Draw the focus rectangle */\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground, values);\n\tOS.XSetForeground (xDisplay, handle, highlightColor);\n\tOS.XDrawRectangle (xDisplay, xDrawable, handle, x, y, width - 1, height - 1);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t/*\n\t* When the drawable is not a widget, the highlight\n\t* color is zero.\n\t*/\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tint highlightColor = 0;\n\tint widget = OS.XtWindowToWidget (xDisplay, xDrawable);\n\tif (widget != 0) {\n\t\tint [] argList = {OS.XmNhighlightColor, 0};\n\t\tOS.XtGetValues (widget, argList, argList.length / 2);\n\t\thighlightColor = argList [1];\n\t}\n\n\t/* Draw the focus rectangle */\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground, values);\n\tOS.XSetForeground (xDisplay, handle, highlightColor);\n\tOS.XDrawRectangle (xDisplay, xDrawable, handle, x, y, width - 1, height - 1);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t/*\n\t* When the drawable is not a widget, the highlight\n\t* color is zero.\n\t*/\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tint highlightColor = 0;\n\tint widget = OS.XtWindowToWidget (xDisplay, xDrawable);\n\tif (widget != 0) {\n\t\tint [] argList = {OS.XmNhighlightColor, 0};\n\t\tOS.XtGetValues (widget, argList, argList.length / 2);\n\t\thighlightColor = argList [1];\n\t}\n\n\t/* Draw the focus rectangle */\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground, values);\n\tOS.XSetForeground (xDisplay, handle, highlightColor);\n\tOS.XDrawRectangle (xDisplay, xDrawable, handle, x, y, width - 1, height - 1);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 10,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 11,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 17,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_move_to(cairo, x1 + offset, y1 + offset);\n\t\tCairo.cairo_line_to(cairo, x2 + offset, y2 + offset);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawLine (data.display, data.drawable, handle, x1, y1, x2, y2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_move_to(cairo, x1 + offset, y1 + offset);\n\t\tCairo.cairo_line_to(cairo, x2 + offset, y2 + offset);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawLine (data.display, data.drawable, handle, x1, y1, x2, y2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_move_to(cairo, x1 + offset, y1 + offset);\n\t\tCairo.cairo_line_to(cairo, x2 + offset, y2 + offset);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawLine (data.display, data.drawable, handle, x1, y1, x2, y2);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 18,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, -2 * (float)Compatibility.PI);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawArc(data.display, data.drawable, handle, x, y, width, height, 0, 23040);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, -2 * (float)Compatibility.PI);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawArc(data.display, data.drawable, handle, x, y, width, height, 0, 23040);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, x + offset + width / 2f, y + offset + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_set_line_width(cairo, Cairo.cairo_current_line_width(cairo) / (width / 2f));\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, -2 * (float)Compatibility.PI);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawArc(data.display, data.drawable, handle, x, y, width, height, 0, 23040);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 19,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tCairo.cairo_translate(cairo, offset, offset);\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_stroke(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tCairo.cairo_translate(cairo, offset, offset);\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_stroke(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\tCairo.cairo_translate(cairo, offset, offset);\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_stroke(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 20,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_rectangle(cairo, x, y, 1, 1);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawPoint(data.display, data.drawable, handle, x, y);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_rectangle(cairo, x, y, 1, 1);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawPoint(data.display, data.drawable, handle, x, y);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_rectangle(cairo, x, y, 1, 1);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawPoint(data.display, data.drawable, handle, x, y);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 21,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\t\n\t// Motif does not have a native drawPolygon() call. Instead we ensure \n\t// that the first and last points are the same and call drawPolyline().\n\t\n\tint length = pointArray.length;\n\n\t// Need at least 3 points to define the polygon. If 2 or fewer points\n\t// passed in, it is either a line or point so just call drawPolyline().\n\t// Check what happens when XOR is implemented. We may not be able to\n\t// do this optimization.\n\t\n\tif (length < 4) {\n\t\t\tdrawPolyline(pointArray);\n\t\t\treturn;\n\t}\n\n\t// If first and last points are the same, the polygon is already closed.\n\t// Just call drawPolyline().\n\t//\n\t// Check what happens when XOR is implemented. We may not be able to\n\t// do this optimization.\n\t\n\tif (pointArray[0] == pointArray[length - 2] && (pointArray[1] == pointArray[length - 1])) {\n\t\tdrawPolyline(pointArray);\n\t\treturn;\n\t}\n\n\t// Grow the list of points by one element and make sure the first and last\n\t// points are the same. This will close the polygon and we can use the\n\t// drawPolyline() call. \n\t\t\n\tint newPoints[] = new int[length + 2];\n\tfor (int i = 0; i < length ; i++) \n\t\tnewPoints[i] = pointArray[i];\n\tnewPoints[length] = pointArray[0];\n\tnewPoints[length + 1] = pointArray[1];\n\n\tdrawPolyline(newPoints);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\t\n\t// Motif does not have a native drawPolygon() call. Instead we ensure \n\t// that the first and last points are the same and call drawPolyline().\n\t\n\tint length = pointArray.length;\n\n\t// Need at least 3 points to define the polygon. If 2 or fewer points\n\t// passed in, it is either a line or point so just call drawPolyline().\n\t// Check what happens when XOR is implemented. We may not be able to\n\t// do this optimization.\n\t\n\tif (length < 4) {\n\t\t\tdrawPolyline(pointArray);\n\t\t\treturn;\n\t}\n\n\t// If first and last points are the same, the polygon is already closed.\n\t// Just call drawPolyline().\n\t//\n\t// Check what happens when XOR is implemented. We may not be able to\n\t// do this optimization.\n\t\n\tif (pointArray[0] == pointArray[length - 2] && (pointArray[1] == pointArray[length - 1])) {\n\t\tdrawPolyline(pointArray);\n\t\treturn;\n\t}\n\n\t// Grow the list of points by one element and make sure the first and last\n\t// points are the same. This will close the polygon and we can use the\n\t// drawPolyline() call. \n\t\t\n\tint newPoints[] = new int[length + 2];\n\tfor (int i = 0; i < length ; i++) \n\t\tnewPoints[i] = pointArray[i];\n\tnewPoints[length] = pointArray[0];\n\tnewPoints[length + 1] = pointArray[1];\n\n\tdrawPolyline(newPoints);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\t\n\t// Motif does not have a native drawPolygon() call. Instead we ensure \n\t// that the first and last points are the same and call drawPolyline().\n\t\n\tint length = pointArray.length;\n\n\t// Need at least 3 points to define the polygon. If 2 or fewer points\n\t// passed in, it is either a line or point so just call drawPolyline().\n\t// Check what happens when XOR is implemented. We may not be able to\n\t// do this optimization.\n\t\n\tif (length < 4) {\n\t\t\tdrawPolyline(pointArray);\n\t\t\treturn;\n\t}\n\n\t// If first and last points are the same, the polygon is already closed.\n\t// Just call drawPolyline().\n\t//\n\t// Check what happens when XOR is implemented. We may not be able to\n\t// do this optimization.\n\t\n\tif (pointArray[0] == pointArray[length - 2] && (pointArray[1] == pointArray[length - 1])) {\n\t\tdrawPolyline(pointArray);\n\t\treturn;\n\t}\n\n\t// Grow the list of points by one element and make sure the first and last\n\t// points are the same. This will close the polygon and we can use the\n\t// drawPolyline() call. \n\t\t\n\tint newPoints[] = new int[length + 2];\n\tfor (int i = 0; i < length ; i++) \n\t\tnewPoints[i] = pointArray[i];\n\tnewPoints[length] = pointArray[0];\n\tnewPoints[length + 1] = pointArray[1];\n\n\tdrawPolyline(newPoints);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 22,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, false);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tshort[] xPoints = new short[pointArray.length];\n\tfor (int i = 0; i<pointArray.length;i++) {\n\t\txPoints[i] = (short) pointArray[i];\n\t}\n\tOS.XDrawLines(data.display,data.drawable,handle,xPoints,xPoints.length / 2, OS.CoordModeOrigin);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, false);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tshort[] xPoints = new short[pointArray.length];\n\tfor (int i = 0; i<pointArray.length;i++) {\n\t\txPoints[i] = (short) pointArray[i];\n\t}\n\tOS.XDrawLines(data.display,data.drawable,handle,xPoints,xPoints.length / 2, OS.CoordModeOrigin);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tdrawPolyline(cairo, pointArray, false);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tshort[] xPoints = new short[pointArray.length];\n\tfor (int i = 0; i<pointArray.length;i++) {\n\t\txPoints[i] = (short) pointArray[i];\n\t}\n\tOS.XDrawLines(data.display,data.drawable,handle,xPoints,xPoints.length / 2, OS.CoordModeOrigin);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 24,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_rectangle(cairo, x + offset, y + offset, width, height);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawRectangle (data.display, data.drawable, handle, x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_rectangle(cairo, x + offset, y + offset, width, height);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawRectangle (data.display, data.drawable, handle, x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_rectangle(cairo, x + offset, y + offset, width, height);\n\t\tCairo.cairo_stroke(cairo);\n\t\treturn;\n\t}\n\tOS.XDrawRectangle (data.display, data.drawable, handle, x, y, width, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 26,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tCairo.cairo_new_path(cairo);\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, nx + offset, ny + offset);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tCairo.cairo_new_path(cairo);\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, nx + offset, ny + offset);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny - nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tCairo.cairo_new_path(cairo);\n\t\tCairo.cairo_save(cairo);\n\t\tfloat offset = data.lineWidth == 0 || (data.lineWidth % 2) == 1 ? 0.5f : 0f;\n\t\tCairo.cairo_translate(cairo, nx + offset, ny + offset);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + naw2, ny, nx + nw - naw2, ny);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.XDrawLine(xDisplay, xDrawable, handle, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t\tOS.XDrawLine(xDisplay,xDrawable,handle, nx, ny + nah2, nx, ny + nh - nah2);\n\t\t} else {\n\t\t\tOS.XDrawArc(xDisplay, xDrawable, handle, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 28,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor isTransparent\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetString(string);\n\tif (isTransparent) {\n\t\tOS.XmStringDraw (data.display, data.drawable, data.font.handle, data.xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t} else {\n\t\tOS.XmStringDrawImage (data.display, data.drawable, data.font.handle, data.xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t}\t\t\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor isTransparent\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetString(string);\n\tif (isTransparent) {\n\t\tOS.XmStringDraw (data.display, data.drawable, data.font.handle, data.xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t} else {\n\t\tOS.XmStringDrawImage (data.display, data.drawable, data.font.handle, data.xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t}\t\t\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor isTransparent\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetString(string);\n\tif (isTransparent) {\n\t\tOS.XmStringDraw (data.display, data.drawable, data.font.handle, data.xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t} else {\n\t\tOS.XmStringDrawImage (data.display, data.drawable, data.font.handle, data.xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t}\t\t\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 32,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor flags\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetText(string, flags);\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (data.image != null) OS.XtRegisterDrawable (xDisplay, xDrawable, data.device.shellHandle);\n\tint xmMnemonic = data.xmMnemonic;\n\tif (xmMnemonic != 0) {\n\t\tOS.XmStringDrawUnderline(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmMnemonic);\n\t} else {\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) != 0) {\n\t\t\tOS.XmStringDraw(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t\t} else {\n\t\t\tOS.XmStringDrawImage(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t\t}\n\t}\n\tif (data.image != null) OS.XtUnregisterDrawable (xDisplay, xDrawable);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor flags\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetText(string, flags);\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (data.image != null) OS.XtRegisterDrawable (xDisplay, xDrawable, data.device.shellHandle);\n\tint xmMnemonic = data.xmMnemonic;\n\tif (xmMnemonic != 0) {\n\t\tOS.XmStringDrawUnderline(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmMnemonic);\n\t} else {\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) != 0) {\n\t\t\tOS.XmStringDraw(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t\t} else {\n\t\t\tOS.XmStringDrawImage(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t\t}\n\t}\n\tif (data.image != null) OS.XtUnregisterDrawable (xDisplay, xDrawable);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\t//TODO - honor flags\n\t\tcairo_font_extents_t extents = new cairo_font_extents_t();\n\t\tCairo.cairo_current_font_extents(cairo, extents);\n\t\tdouble baseline = y + extents.ascent;\n\t\tCairo.cairo_move_to(cairo, x, baseline);\n\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);\n\t\tCairo.cairo_text_path(cairo, buffer);\n\t\tCairo.cairo_fill(cairo);\n\t\treturn;\n\t}\n\tsetText(string, flags);\n\tint xDisplay = data.display;\n\tint xDrawable = data.drawable;\n\tif (data.image != null) OS.XtRegisterDrawable (xDisplay, xDrawable, data.device.shellHandle);\n\tint xmMnemonic = data.xmMnemonic;\n\tif (xmMnemonic != 0) {\n\t\tOS.XmStringDrawUnderline(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmMnemonic);\n\t} else {\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) != 0) {\n\t\t\tOS.XmStringDraw(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t\t} else {\n\t\t\tOS.XmStringDrawImage(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\n\t\t}\n\t}\n\tif (data.image != null) OS.XtUnregisterDrawable (xDisplay, xDrawable);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 34,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_line_to(cairo, 0, 0);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillArc(xDisplay, data.drawable, handle, x, y, width, height, startAngle * 64, arcAngle * 64);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_line_to(cairo, 0, 0);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillArc(xDisplay, data.drawable, handle, x, y, width, height, startAngle * 64, arcAngle * 64);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180);\n\t\tCairo.cairo_line_to(cairo, 0, 0);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillArc(xDisplay, data.drawable, handle, x, y, width, height, startAngle * 64, arcAngle * 64);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 35,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif ((width == 0) || (height == 0)) return;\n\tint xDisplay = data.display;\n\tint xScreenNum = OS.XDefaultScreen(xDisplay);\n\tXGCValues values = new XGCValues();\n\tint fromColor, toColor;\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tfromColor = values.foreground;\n\ttoColor = values.background;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = fromColor;\n\t\tfromColor = toColor;\n\t\ttoColor = t;\n\t}\n\tif (fromColor == toColor) {\n\t\tOS.XFillRectangle(xDisplay, data.drawable, handle, x, y, width, height);\n\t\treturn;\n\t}\n\t/* X Window deals with a virtually limitless array of color formats\n\t * but we only distinguish between paletted and direct modes\n\t */\t\n\tfinal int xScreen = OS.XDefaultScreenOfDisplay(xDisplay);\n\tfinal int xVisual = OS.XDefaultVisual(xDisplay, xScreenNum);\n\tVisual visual = new Visual();\n\tOS.memmove(visual, xVisual, Visual.sizeof);\n\tfinal int depth = OS.XDefaultDepthOfScreen(xScreen);\n\tfinal boolean directColor = (depth > 8);\n\n\t// This code is intentionally commented since elsewhere in SWT we\n\t// assume that depth <= 8 means we are in a paletted mode though\n\t// this is not always the case.\n\t//final boolean directColor = (visual.c_class == OS.TrueColor) || (visual.c_class == OS.DirectColor);\n\n\tXColor xColor = new XColor();\n\txColor.pixel = fromColor;\n\tOS.XQueryColor(xDisplay, data.colormap, xColor);\n\tfinal RGB fromRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);\n\txColor.pixel = toColor;\n\tOS.XQueryColor(xDisplay, data.colormap, xColor);\n\tfinal RGB toRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ pattern;\n\t\tif (vertical) {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 0.0, 1.0);\n\t\t} else {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 1.0, 0.0);\n\t\t}\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 0, fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, 1);\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 1, toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, 1);\n\t\tCairo.cairo_save(cairo);\n\t\tCairo.cairo_translate(cairo, x, y);\n\t\tCairo.cairo_scale(cairo, width, height);\n\t\tCairo.cairo_rectangle(cairo, 0, 0, 1, 1);\n\t\tCairo.cairo_set_pattern(cairo, pattern);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\tCairo.cairo_pattern_destroy(pattern);\n\t\treturn;\n\t}\n\tfinal int redBits, greenBits, blueBits;\n\tif (directColor) {\n\t\t// RGB mapped display\n\t\tredBits = getChannelWidth(visual.red_mask);\n\t\tgreenBits = getChannelWidth(visual.green_mask);\n\t\tblueBits = getChannelWidth(visual.blue_mask);\n\t} else {\n\t\t// Index display\n\t\tredBits = greenBits = blueBits = 0;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\tredBits, greenBits, blueBits);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif ((width == 0) || (height == 0)) return;\n\tint xDisplay = data.display;\n\tint xScreenNum = OS.XDefaultScreen(xDisplay);\n\tXGCValues values = new XGCValues();\n\tint fromColor, toColor;\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tfromColor = values.foreground;\n\ttoColor = values.background;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = fromColor;\n\t\tfromColor = toColor;\n\t\ttoColor = t;\n\t}\n\tif (fromColor == toColor) {\n\t\tOS.XFillRectangle(xDisplay, data.drawable, handle, x, y, width, height);\n\t\treturn;\n\t}\n\t/* X Window deals with a virtually limitless array of color formats\n\t * but we only distinguish between paletted and direct modes\n\t */\t\n\tfinal int xScreen = OS.XDefaultScreenOfDisplay(xDisplay);\n\tfinal int xVisual = OS.XDefaultVisual(xDisplay, xScreenNum);\n\tVisual visual = new Visual();\n\tOS.memmove(visual, xVisual, Visual.sizeof);\n\tfinal int depth = OS.XDefaultDepthOfScreen(xScreen);\n\tfinal boolean directColor = (depth > 8);\n\n\t// This code is intentionally commented since elsewhere in SWT we\n\t// assume that depth <= 8 means we are in a paletted mode though\n\t// this is not always the case.\n\t//final boolean directColor = (visual.c_class == OS.TrueColor) || (visual.c_class == OS.DirectColor);\n\n\tXColor xColor = new XColor();\n\txColor.pixel = fromColor;\n\tOS.XQueryColor(xDisplay, data.colormap, xColor);\n\tfinal RGB fromRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);\n\txColor.pixel = toColor;\n\tOS.XQueryColor(xDisplay, data.colormap, xColor);\n\tfinal RGB toRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ pattern;\n\t\tif (vertical) {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 0.0, 1.0);\n\t\t} else {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 1.0, 0.0);\n\t\t}\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 0, fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, 1);\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 1, toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, 1);\n\t\tCairo.cairo_save(cairo);\n\t\tCairo.cairo_translate(cairo, x, y);\n\t\tCairo.cairo_scale(cairo, width, height);\n\t\tCairo.cairo_rectangle(cairo, 0, 0, 1, 1);\n\t\tCairo.cairo_set_pattern(cairo, pattern);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\tCairo.cairo_pattern_destroy(pattern);\n\t\treturn;\n\t}\n\tfinal int redBits, greenBits, blueBits;\n\tif (directColor) {\n\t\t// RGB mapped display\n\t\tredBits = getChannelWidth(visual.red_mask);\n\t\tgreenBits = getChannelWidth(visual.green_mask);\n\t\tblueBits = getChannelWidth(visual.blue_mask);\n\t} else {\n\t\t// Index display\n\t\tredBits = greenBits = blueBits = 0;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\tredBits, greenBits, blueBits);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif ((width == 0) || (height == 0)) return;\n\tint xDisplay = data.display;\n\tint xScreenNum = OS.XDefaultScreen(xDisplay);\n\tXGCValues values = new XGCValues();\n\tint fromColor, toColor;\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tfromColor = values.foreground;\n\ttoColor = values.background;\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = fromColor;\n\t\tfromColor = toColor;\n\t\ttoColor = t;\n\t}\n\tif (fromColor == toColor) {\n\t\tOS.XFillRectangle(xDisplay, data.drawable, handle, x, y, width, height);\n\t\treturn;\n\t}\n\t/* X Window deals with a virtually limitless array of color formats\n\t * but we only distinguish between paletted and direct modes\n\t */\t\n\tfinal int xScreen = OS.XDefaultScreenOfDisplay(xDisplay);\n\tfinal int xVisual = OS.XDefaultVisual(xDisplay, xScreenNum);\n\tVisual visual = new Visual();\n\tOS.memmove(visual, xVisual, Visual.sizeof);\n\tfinal int depth = OS.XDefaultDepthOfScreen(xScreen);\n\tfinal boolean directColor = (depth > 8);\n\n\t// This code is intentionally commented since elsewhere in SWT we\n\t// assume that depth <= 8 means we are in a paletted mode though\n\t// this is not always the case.\n\t//final boolean directColor = (visual.c_class == OS.TrueColor) || (visual.c_class == OS.DirectColor);\n\n\tXColor xColor = new XColor();\n\txColor.pixel = fromColor;\n\tOS.XQueryColor(xDisplay, data.colormap, xColor);\n\tfinal RGB fromRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);\n\txColor.pixel = toColor;\n\tOS.XQueryColor(xDisplay, data.colormap, xColor);\n\tfinal RGB toRGB = new RGB((xColor.red & 0xffff) >>> 8, (xColor.green & 0xffff) >>> 8, (xColor.blue & 0xffff) >>> 8);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tint /*long*/ pattern;\n\t\tif (vertical) {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 0.0, 1.0);\n\t\t} else {\n\t\t\tpattern = Cairo.cairo_pattern_create_linear (0.0, 0.0, 1.0, 0.0);\n\t\t}\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 0, fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, 1);\n\t\tCairo.cairo_pattern_add_color_stop (pattern, 1, toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, 1);\n\t\tCairo.cairo_save(cairo);\n\t\tCairo.cairo_translate(cairo, x, y);\n\t\tCairo.cairo_scale(cairo, width, height);\n\t\tCairo.cairo_rectangle(cairo, 0, 0, 1, 1);\n\t\tCairo.cairo_set_pattern(cairo, pattern);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\tCairo.cairo_pattern_destroy(pattern);\n\t\treturn;\n\t}\n\tfinal int redBits, greenBits, blueBits;\n\tif (directColor) {\n\t\t// RGB mapped display\n\t\tredBits = getChannelWidth(visual.red_mask);\n\t\tgreenBits = getChannelWidth(visual.green_mask);\n\t\tblueBits = getChannelWidth(visual.blue_mask);\n\t} else {\n\t\t// Index display\n\t\tredBits = greenBits = blueBits = 0;\n\t}\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\tredBits, greenBits, blueBits);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 37,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint display = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (display, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(display, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, 2 * (float)Compatibility.PI);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (display, handle, values.background);\n\tOS.XFillArc (display, data.drawable, handle, x, y, width, height, 0, 23040);\n\tOS.XSetForeground (display, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint display = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (display, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(display, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, 2 * (float)Compatibility.PI);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (display, handle, values.background);\n\tOS.XFillArc (display, data.drawable, handle, x, y, width, height, 0, 23040);\n\tOS.XSetForeground (display, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint display = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (display, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(display, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, x + width / 2f, y + height / 2f);\n\t\tCairo.cairo_scale(cairo, width / 2f, height / 2f);\n\t\tCairo.cairo_arc_negative(cairo, 0, 0, 1, 0, 2 * (float)Compatibility.PI);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (display, handle, values.background);\n\tOS.XFillArc (display, data.drawable, handle, x, y, width, height, 0, 23040);\n\tOS.XSetForeground (display, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 38,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint display = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (display, handle, OS.GCForeground | OS.GCBackground, values);\n\tXColor color = new XColor();\n\tcolor.pixel = values.background;\n\tOS.XQueryColor(display, data.colormap, color);\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tif (data.backgroundPattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t} else {\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_fill(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint display = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (display, handle, OS.GCForeground | OS.GCBackground, values);\n\tXColor color = new XColor();\n\tcolor.pixel = values.background;\n\tOS.XQueryColor(display, data.colormap, color);\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tif (data.backgroundPattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t} else {\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_fill(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint display = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (display, handle, OS.GCForeground | OS.GCBackground, values);\n\tXColor color = new XColor();\n\tcolor.pixel = values.background;\n\tOS.XQueryColor(display, data.colormap, color);\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_save(cairo);\n\tif (data.backgroundPattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t} else {\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tCairo.cairo_add_path(cairo, path.handle);\n\tCairo.cairo_fill(cairo);\n\tCairo.cairo_restore(cairo);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 39,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tshort[] xPoints = new short[pointArray.length];\n\tfor (int i = 0; i<pointArray.length;i++) {\n\t\txPoints[i] = (short) pointArray[i];\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillPolygon(xDisplay, data.drawable, handle,xPoints, xPoints.length / 2, OS.Complex, OS.CoordModeOrigin);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tshort[] xPoints = new short[pointArray.length];\n\tfor (int i = 0; i<pointArray.length;i++) {\n\t\txPoints[i] = (short) pointArray[i];\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillPolygon(xDisplay, data.drawable, handle,xPoints, xPoints.length / 2, OS.Complex, OS.CoordModeOrigin);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tdrawPolyline(cairo, pointArray, true);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tshort[] xPoints = new short[pointArray.length];\n\tfor (int i = 0; i<pointArray.length;i++) {\n\t\txPoints[i] = (short) pointArray[i];\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillPolygon(xDisplay, data.drawable, handle,xPoints, xPoints.length / 2, OS.Complex, OS.CoordModeOrigin);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 40,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo; \n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_rectangle(cairo, x, y, width, height);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillRectangle (xDisplay, data.drawable, handle, x, y, width, height);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo; \n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_rectangle(cairo, x, y, width, height);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillRectangle (xDisplay, data.drawable, handle, x, y, width, height);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo; \n\tif (cairo != 0) {\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_rectangle(cairo, x, y, width, height);\n\t\tCairo.cairo_fill(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tOS.XSetForeground (xDisplay, handle, values.background);\n\tOS.XFillRectangle (xDisplay, data.drawable, handle, x, y, width, height);\n\tOS.XSetForeground (xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, nx, ny);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint xDrawable = data.drawable;\n\tOS.XSetForeground(xDisplay, handle, values.background);\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny, nw - naw2 * 2, nah2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny + nh - nah2, nw - naw2 * 2, nah2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t} else {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t} else {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n\tOS.XSetForeground(xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, nx, ny);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint xDrawable = data.drawable;\n\tOS.XSetForeground(xDisplay, handle, values.background);\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny, nw - naw2 * 2, nah2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny + nh - nah2, nw - naw2 * 2, nah2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t} else {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t} else {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n\tOS.XSetForeground(xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint nx = x;\n\tint ny = y;\n\tint nw = width;\n\tint nh = height;\n\tint naw = arcWidth;\n\tint nah = arcHeight;\n\tif (nw < 0) {\n\t\tnw = 0 - nw;\n\t\tnx = nx - nw;\n\t}\n\tif (nh < 0) {\n\t\tnh = 0 - nh;\n\t\tny = ny -nh;\n\t}\n\tif (naw < 0) naw = 0 - naw;\n\tif (nah < 0) nah = 0 - nah;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground | OS.GCBackground, values);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tfloat naw2 = naw / 2f;\n\t\tfloat nah2 = nah / 2f;\n\t\tfloat fw = nw / naw2;\n\t\tfloat fh = nh / nah2;\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.background;\n\t\tOS.XQueryColor(xDisplay, data.colormap, color);\n\t\tCairo.cairo_save(cairo);\n\t\tif (data.backgroundPattern != null) {\n\t\t\tCairo.cairo_set_pattern(cairo, data.backgroundPattern.handle);\n\t\t} else {\n\t\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t\t}\n\t\tCairo.cairo_translate(cairo, nx, ny);\n\t\tCairo.cairo_scale(cairo, naw2, nah2);\n\t\tCairo.cairo_move_to(cairo, fw - 1, 0);\n//\t\tCairo.cairo_arc_to(cairo, 0, 0, 0, 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, 0, fh, 1, fh, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, fh, fw, fh - 1, 1);\n//\t\tCairo.cairo_arc_to(cairo, fw, 0, fw - 1, 0, 1);\n\t\tCairo.cairo_close_path(cairo);\n\t\tCairo.cairo_stroke(cairo);\n\t\tCairo.cairo_restore(cairo);\n\t\treturn;\n\t}\n\tint naw2 = naw / 2;\n\tint nah2 = nah / 2;\n\tint xDrawable = data.drawable;\n\tOS.XSetForeground(xDisplay, handle, values.background);\n\tif (nw > naw) {\n\t\tif (nh > nah) {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, naw, nah, 5760, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny, nw - naw2 * 2, nah2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nah, 0, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny + nh - nah, naw, nah, 17280, 5760);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny + nh - nah2, nw - naw2 * 2, nah2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, naw, nah, 11520, 5760);\n\t\t} else {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, naw, nh, 5760, 11520);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx + naw2, ny, nw - naw2 * 2, nh);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx + nw - naw, ny, naw, nh, 17280, 11520);\n\t\t}\n\t} else {\n\t\tif (nh > nah) {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, nw, nah, 0, 11520);\n\t\t\tOS.XFillRectangle(xDisplay, xDrawable, handle, nx, ny + nah2, nw, nh - nah2 * 2);\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny + nh - nah, nw, nah, 11520, 11520);\n\t\t} else {\n\t\t\tOS.XFillArc(xDisplay, xDrawable, handle, nx, ny, nw, nh, 0, 23040);\n\t\t}\n\t}\n\tOS.XSetForeground(xDisplay, handle, values.foreground);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 44,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint fontList  = data.font.handle;\n\tbyte[] charBuffer = Converter.wcsToMbcs(getCodePage (), new char[] { ch }, false);\n\tint val = charBuffer[0] & 0xFF;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\tXFontStruct fontStruct = new XFontStruct();\n\tXCharStruct charStruct = new XCharStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\t/* FontList contains a single font */\n\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t/* Single byte fontStruct */\n\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + ((val - fontStruct.min_char_or_byte2) * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t} \n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* Double byte fontStruct */\n\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\tint row = 0;\n\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t} else { \n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) { \n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t\t/* Single byte fontStruct */\n\t\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + (val - fontStruct.min_char_or_byte2 * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Double byte fontStruct */\n\t\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\tint row = 0;\n\t\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint fontList  = data.font.handle;\n\tbyte[] charBuffer = Converter.wcsToMbcs(getCodePage (), new char[] { ch }, false);\n\tint val = charBuffer[0] & 0xFF;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\tXFontStruct fontStruct = new XFontStruct();\n\tXCharStruct charStruct = new XCharStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\t/* FontList contains a single font */\n\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t/* Single byte fontStruct */\n\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + ((val - fontStruct.min_char_or_byte2) * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t} \n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* Double byte fontStruct */\n\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\tint row = 0;\n\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t} else { \n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) { \n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t\t/* Single byte fontStruct */\n\t\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + (val - fontStruct.min_char_or_byte2 * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Double byte fontStruct */\n\t\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\tint row = 0;\n\t\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint fontList  = data.font.handle;\n\tbyte[] charBuffer = Converter.wcsToMbcs(getCodePage (), new char[] { ch }, false);\n\tint val = charBuffer[0] & 0xFF;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\tXFontStruct fontStruct = new XFontStruct();\n\tXCharStruct charStruct = new XCharStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\t/* FontList contains a single font */\n\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t/* Single byte fontStruct */\n\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + ((val - fontStruct.min_char_or_byte2) * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t} \n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* Double byte fontStruct */\n\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\tint row = 0;\n\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t} else { \n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) { \n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t\t/* Single byte fontStruct */\n\t\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + (val - fontStruct.min_char_or_byte2 * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Double byte fontStruct */\n\t\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\tint row = 0;\n\t\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t charWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn charWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 45,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.cairo != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.cairo != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.cairo != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0) return 0xFF;\n\treturn (int)(Cairo.cairo_current_alpha(data.cairo) * 255);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.cairo == 0) return 0xFF;\n\treturn (int)(Cairo.cairo_current_alpha(data.cairo) * 255);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.cairo == 0) return 0xFF;\n\treturn (int)(Cairo.cairo_current_alpha(data.cairo) * 255);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 47,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    if (data.cairo != 0) return SWT.ON;\n    return data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    if (data.cairo != 0) return SWT.ON;\n    return data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    if (data.cairo != 0) return SWT.ON;\n    return data.antialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCBackground, values);\n\tXColor xColor = new XColor();\n\txColor.pixel = values.background;\n\tOS.XQueryColor(xDisplay,data.colormap,xColor);\n\treturn Color.motif_new(data.device, xColor);\n\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCBackground, values);\n\tXColor xColor = new XColor();\n\txColor.pixel = values.background;\n\tOS.XQueryColor(xDisplay,data.colormap,xColor);\n\treturn Color.motif_new(data.device, xColor);\n\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCBackground, values);\n\tXColor xColor = new XColor();\n\txColor.pixel = values.background;\n\tOS.XQueryColor(xDisplay,data.colormap,xColor);\n\treturn Color.motif_new(data.device, xColor);\n\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 49,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 50,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint fontList = data.font.handle;\n\tbyte[] charBuffer = Converter.wcsToMbcs(getCodePage (), new char[] { ch }, false);\n\tint val = charBuffer[0] & 0xFF;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\tXFontStruct fontStruct = new XFontStruct();\n\tXCharStruct charStruct = new XCharStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\t/* FontList contains a single font */\n\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t/* Single byte fontStruct */\n\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + ((val - fontStruct.min_char_or_byte2) * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* Double byte fontStruct */\n\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\tint row = 0;\n\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t} else { \n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) { \n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t\t/* Single byte fontStruct */\n\t\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + (val - fontStruct.min_char_or_byte2 * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Double byte fontStruct */\n\t\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\tint row = 0;\n\t\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint fontList = data.font.handle;\n\tbyte[] charBuffer = Converter.wcsToMbcs(getCodePage (), new char[] { ch }, false);\n\tint val = charBuffer[0] & 0xFF;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\tXFontStruct fontStruct = new XFontStruct();\n\tXCharStruct charStruct = new XCharStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\t/* FontList contains a single font */\n\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t/* Single byte fontStruct */\n\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + ((val - fontStruct.min_char_or_byte2) * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* Double byte fontStruct */\n\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\tint row = 0;\n\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t} else { \n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) { \n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t\t/* Single byte fontStruct */\n\t\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + (val - fontStruct.min_char_or_byte2 * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Double byte fontStruct */\n\t\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\tint row = 0;\n\t\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint fontList = data.font.handle;\n\tbyte[] charBuffer = Converter.wcsToMbcs(getCodePage (), new char[] { ch }, false);\n\tint val = charBuffer[0] & 0xFF;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\tXFontStruct fontStruct = new XFontStruct();\n\tXCharStruct charStruct = new XCharStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\t/* FontList contains a single font */\n\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t/* Single byte fontStruct */\n\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + ((val - fontStruct.min_char_or_byte2) * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* Double byte fontStruct */\n\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\tint row = 0;\n\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t}\n\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t} else { \n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) { \n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tif (fontStruct.min_byte1 == 0 && fontStruct.max_byte1 == 0) {\n\t\t\t\t\t/* Single byte fontStruct */\n\t\t\t\t\tif (fontStruct.min_char_or_byte2 <= val && val <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + (val - fontStruct.min_char_or_byte2 * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Double byte fontStruct */\n\t\t\t\t\tint charsPerRow = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\tint row = 0;\n\t\t\t\t\tif (charBuffer.length > 1) row = charBuffer[1] - fontStruct.min_byte1;\n\t\t\t\t\tint col = charBuffer[0] - fontStruct.min_char_or_byte2;\n\t\t\t\t\tif (row <= fontStruct.max_byte1 && col <= fontStruct.max_char_or_byte2) {\n\t\t\t\t\t\t/* The font contains the character */\n\t\t\t\t\t\tint charWidth = 0;\n\t\t\t\t\t\tint lBearing = 0;\n\t\t\t\t\t\tint rBearing = 0;\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width and left/right bearings as the font.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tcharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\tlBearing = fontStruct.min_bounds_lbearing;\n\t\t\t\t\t\t\trBearing = fontStruct.max_bounds_rbearing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint offset = row * charsPerRow + col;\n\t\t\t\t\t\t\tOS.memmove(charStruct, perCharPtr + offset * XCharStruct.sizeof, XCharStruct.sizeof);\n\t\t\t\t\t\t\tcharWidth = charStruct.width;\n\t\t\t\t\t\t\tlBearing = charStruct.lbearing;\n\t\t\t\t\t\t\trBearing = charStruct.rbearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (charWidth != 0) {\n\t\t\t\t\t\t\tOS.XmFontListFreeFontContext(context);\n\t\t\t\t\t\t\treturn rBearing - lBearing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 51,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint[] width = new int[1], height = new int[1], unused = new int[1];\n\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width[0], height[0]);\n\t} else {\n\t\tint rgn = OS.XCreateRegion ();\n\t\tXRectangle rect = new XRectangle();\n\t\trect.width = (short)width[0];\n\t\trect.height = (short)height[0];\n\t\tOS.XUnionRectWithRegion(rect, rgn, rgn);\n\t\tOS.XIntersectRegion(rgn, clipRgn, rgn);\n\t\tOS.XClipBox(rgn, rect);\n\t\tOS.XDestroyRegion(rgn);\n\t\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint[] width = new int[1], height = new int[1], unused = new int[1];\n\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width[0], height[0]);\n\t} else {\n\t\tint rgn = OS.XCreateRegion ();\n\t\tXRectangle rect = new XRectangle();\n\t\trect.width = (short)width[0];\n\t\trect.height = (short)height[0];\n\t\tOS.XUnionRectWithRegion(rect, rgn, rgn);\n\t\tOS.XIntersectRegion(rgn, clipRgn, rgn);\n\t\tOS.XClipBox(rgn, rect);\n\t\tOS.XDestroyRegion(rgn);\n\t\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint[] width = new int[1], height = new int[1], unused = new int[1];\n\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\treturn new Rectangle(0, 0, width[0], height[0]);\n\t} else {\n\t\tint rgn = OS.XCreateRegion ();\n\t\tXRectangle rect = new XRectangle();\n\t\trect.width = (short)width[0];\n\t\trect.height = (short)height[0];\n\t\tOS.XUnionRectWithRegion(rect, rgn, rgn);\n\t\tOS.XIntersectRegion(rgn, clipRgn, rgn);\n\t\tOS.XClipBox(rgn, rect);\n\t\tOS.XDestroyRegion(rgn);\n\t\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint hRegion = region.handle;\n\tOS.XSubtractRegion (hRegion, hRegion, hRegion);\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\tint[] width = new int[1], height = new int[1], unused = new int[1];\n\t\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);\n\t\tXRectangle rect = new XRectangle();\n\t\trect.x = 0;\n\t\trect.y = 0;\n\t\trect.width = (short)width[0];\n\t\trect.height = (short)height[0];\n\t\tOS.XUnionRectWithRegion(rect, hRegion, hRegion);\n\t} else {\n\t\tOS.XUnionRegion (hRegion, clipRgn, hRegion);\n\t\tif (!isIdentity(data.matrix)) return;\n\t}\n\tif (data.damageRgn != 0) {\n\t\tOS.XIntersectRegion(hRegion, data.damageRgn, hRegion);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint hRegion = region.handle;\n\tOS.XSubtractRegion (hRegion, hRegion, hRegion);\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\tint[] width = new int[1], height = new int[1], unused = new int[1];\n\t\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);\n\t\tXRectangle rect = new XRectangle();\n\t\trect.x = 0;\n\t\trect.y = 0;\n\t\trect.width = (short)width[0];\n\t\trect.height = (short)height[0];\n\t\tOS.XUnionRectWithRegion(rect, hRegion, hRegion);\n\t} else {\n\t\tOS.XUnionRegion (hRegion, clipRgn, hRegion);\n\t\tif (!isIdentity(data.matrix)) return;\n\t}\n\tif (data.damageRgn != 0) {\n\t\tOS.XIntersectRegion(hRegion, data.damageRgn, hRegion);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint hRegion = region.handle;\n\tOS.XSubtractRegion (hRegion, hRegion, hRegion);\n\tint clipRgn = data.clipRgn;\n\tif (clipRgn == 0) {\n\t\tint[] width = new int[1], height = new int[1], unused = new int[1];\n\t\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);\n\t\tXRectangle rect = new XRectangle();\n\t\trect.x = 0;\n\t\trect.y = 0;\n\t\trect.width = (short)width[0];\n\t\trect.height = (short)height[0];\n\t\tOS.XUnionRectWithRegion(rect, hRegion, hRegion);\n\t} else {\n\t\tOS.XUnionRegion (hRegion, clipRgn, hRegion);\n\t\tif (!isIdentity(data.matrix)) return;\n\t}\n\tif (data.damageRgn != 0) {\n\t\tOS.XIntersectRegion(hRegion, data.damageRgn, hRegion);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 54,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCFillRule, values);\n\treturn values.fill_rule == OS.WindingRule ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCFillRule, values);\n\treturn values.fill_rule == OS.WindingRule ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCFillRule, values);\n\treturn values.fill_rule == OS.WindingRule ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 55,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn Font.motif_new(data.device, data.font.handle);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn Font.motif_new(data.device, data.font.handle);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn Font.motif_new(data.device, data.font.handle);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 57,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint xDisplay = data.display;\n\tFont font = data.font;\n\tint fontList = font.handle;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\t/* Values discovering during iteration */\n\tint ascent = 0;\n\tint descent = 0;\n\tint averageCharWidth = 0, numAverageCharWidth = 0;\n\tint leading = 0;\n\tint height = 0;\n\t\t\n\tXFontStruct fontStruct = new XFontStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\t/* FontList contains a single font */\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\tascent = Math.max(ascent, fontStruct.ascent);\n\t\t\tdescent = Math.max(descent, fontStruct.descent);\n\t\t\tint fontHeight = fontStruct.ascent + fontStruct.descent;\n\t\t\theight = Math.max(height, fontHeight);\n\t\t\t/* Calculate average character width */\n\t\t\tint propPtr = fontStruct.properties;\n\t\t\tfor (int i = 0; i < fontStruct.n_properties; i++) {\n\t\t\t\t/* Look through properties for XAFONT */\n\t\t\t\tint[] prop = new int[2];\n\t\t\t\tOS.memmove(prop, propPtr, 8);\n\t\t\t\tif (prop[0] == OS.XA_FONT) {\n\t\t\t\t\t/* Found it, prop[1] points to the string */\n\t\t\t\t\tint ptr = OS.XmGetAtomName(xDisplay, prop[1]);\n\t\t\t\t\tint length = OS.strlen(ptr);\n\t\t\t\t\tbyte[] nameBuf = new byte[length];\n\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\tOS.XFree(ptr);\n\t\t\t\t\tString xlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\tint avg = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t// leave avg unchanged so that it will be computed below\n\t\t\t\t\t}\n\t\t\t\t\tif (avg == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Not all fonts have average character width encoded\n\t\t\t\t\t\t * in the xlfd. This one doesn't, so do it the hard\n\t\t\t\t\t\t * way by averaging all the character widths.\n\t\t\t\t\t\t */\t\t\t\t\t\t\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.  So no\n\t\t\t\t\t\t\t * averaging is required.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t averageCharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint sum = 0, count = 0;\n\t\t\t\t\t\t\tint cols = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\t\t\tXCharStruct struct = new XCharStruct();\n\t\t\t\t\t\t\tfor (int index = 0; index < cols; index++) {\n\t\t\t\t\t\t\t\tOS.memmove(struct, perCharPtr + (index * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\t\tint w = struct.width;\n\t\t\t\t\t\t\t\tif (w != 0) {\n\t\t\t\t\t\t\t\t\tsum += w;\n\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taverageCharWidth += sum / count;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Average character width was in the xlfd */\n\t\t\t\t\t\taverageCharWidth += avg;\n\t\t\t\t\t}\n\t\t\t\t\tnumAverageCharWidth++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpropPtr += 8;\n\t\t\t}\n\t\t} else {\n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) {\n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tascent = Math.max(ascent, fontStruct.ascent);\n\t\t\t\tdescent = Math.max(descent, fontStruct.descent);\n\t\t\t\tint fontHeight = fontStruct.ascent + fontStruct.descent;\n\t\t\t\theight = Math.max(height, fontHeight);\n\t\t\t\t/* Calculate average character width */\n\t\t\t\tint propPtr = fontStruct.properties;\n\t\t\t\tfor (int j = 0; j < fontStruct.n_properties; j++) {\n\t\t\t\t\t/* Look through properties for XAFONT */\n\t\t\t\t\tint[] prop = new int[2];\n\t\t\t\t\tOS.memmove(prop, propPtr, 8);\n\t\t\t\t\tif (prop[0] == OS.XA_FONT) {\n\t\t\t\t\t\t/* Found it, prop[1] points to the string */\n\t\t\t\t\t\tint ptr = OS.XmGetAtomName(xDisplay, prop[1]);\n\t\t\t\t\t\tint length = OS.strlen(ptr);\n\t\t\t\t\t\tbyte[] nameBuf = new byte[length];\n\t\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\t\tOS.XFree(ptr);\n\t\t\t\t\t\tString xlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\t\tint avg = 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Some font servers, for example, xfstt, do not pass\n\t\t\t\t\t\t\t * reasonable font properties to the client, so we\n\t\t\t\t\t\t\t * cannot construct a FontData for these. Use the font\n\t\t\t\t\t\t\t * name instead.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tint[] fontName = new int[1];\n\t\t\t\t\t\t\tOS.memmove(fontName, fontNamePtr [0] + (i * 4), 4);\n\t\t\t\t\t\t\tptr = fontName[0];\n\t\t\t\t\t\t\tif (ptr != 0 ) {\n\t\t\t\t\t\t\t\tlength = OS.strlen(ptr);\n\t\t\t\t\t\t\t\tnameBuf = new byte[length];\n\t\t\t\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\t\t\t\txlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\t\t\t\t// leave avg unchanged (0) so that it will be computed below\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (avg == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Not all fonts have average character width encoded\n\t\t\t\t\t\t\t * in the xlfd. This one doesn't, so do it the hard\n\t\t\t\t\t\t\t * way by averaging all the character widths.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\n\t\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t\t * the same width as the font's maximum width.  So no\n\t\t\t\t\t\t\t\t * averaging is required.\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t averageCharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tint sum = 0, count = 0;\n\t\t\t\t\t\t\t\tint cols = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\t\t\t\tXCharStruct struct = new XCharStruct();\n\t\t\t\t\t\t\t\tfor (int index = 0; index < cols; index++) {\n\t\t\t\t\t\t\t\t\tOS.memmove(struct, perCharPtr + (index * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\t\t\tint w = struct.width;\n\t\t\t\t\t\t\t\t\tif (w != 0) {\n\t\t\t\t\t\t\t\t\t\tsum += w;\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taverageCharWidth += sum / count;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* Average character width was in the xlfd */\n\t\t\t\t\t\t\taverageCharWidth += avg;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnumAverageCharWidth++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tpropPtr += 8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn FontMetrics.motif_new(ascent, descent, averageCharWidth / numAverageCharWidth, leading, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint xDisplay = data.display;\n\tFont font = data.font;\n\tint fontList = font.handle;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\t/* Values discovering during iteration */\n\tint ascent = 0;\n\tint descent = 0;\n\tint averageCharWidth = 0, numAverageCharWidth = 0;\n\tint leading = 0;\n\tint height = 0;\n\t\t\n\tXFontStruct fontStruct = new XFontStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\t/* FontList contains a single font */\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\tascent = Math.max(ascent, fontStruct.ascent);\n\t\t\tdescent = Math.max(descent, fontStruct.descent);\n\t\t\tint fontHeight = fontStruct.ascent + fontStruct.descent;\n\t\t\theight = Math.max(height, fontHeight);\n\t\t\t/* Calculate average character width */\n\t\t\tint propPtr = fontStruct.properties;\n\t\t\tfor (int i = 0; i < fontStruct.n_properties; i++) {\n\t\t\t\t/* Look through properties for XAFONT */\n\t\t\t\tint[] prop = new int[2];\n\t\t\t\tOS.memmove(prop, propPtr, 8);\n\t\t\t\tif (prop[0] == OS.XA_FONT) {\n\t\t\t\t\t/* Found it, prop[1] points to the string */\n\t\t\t\t\tint ptr = OS.XmGetAtomName(xDisplay, prop[1]);\n\t\t\t\t\tint length = OS.strlen(ptr);\n\t\t\t\t\tbyte[] nameBuf = new byte[length];\n\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\tOS.XFree(ptr);\n\t\t\t\t\tString xlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\tint avg = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t// leave avg unchanged so that it will be computed below\n\t\t\t\t\t}\n\t\t\t\t\tif (avg == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Not all fonts have average character width encoded\n\t\t\t\t\t\t * in the xlfd. This one doesn't, so do it the hard\n\t\t\t\t\t\t * way by averaging all the character widths.\n\t\t\t\t\t\t */\t\t\t\t\t\t\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.  So no\n\t\t\t\t\t\t\t * averaging is required.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t averageCharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint sum = 0, count = 0;\n\t\t\t\t\t\t\tint cols = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\t\t\tXCharStruct struct = new XCharStruct();\n\t\t\t\t\t\t\tfor (int index = 0; index < cols; index++) {\n\t\t\t\t\t\t\t\tOS.memmove(struct, perCharPtr + (index * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\t\tint w = struct.width;\n\t\t\t\t\t\t\t\tif (w != 0) {\n\t\t\t\t\t\t\t\t\tsum += w;\n\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taverageCharWidth += sum / count;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Average character width was in the xlfd */\n\t\t\t\t\t\taverageCharWidth += avg;\n\t\t\t\t\t}\n\t\t\t\t\tnumAverageCharWidth++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpropPtr += 8;\n\t\t\t}\n\t\t} else {\n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) {\n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tascent = Math.max(ascent, fontStruct.ascent);\n\t\t\t\tdescent = Math.max(descent, fontStruct.descent);\n\t\t\t\tint fontHeight = fontStruct.ascent + fontStruct.descent;\n\t\t\t\theight = Math.max(height, fontHeight);\n\t\t\t\t/* Calculate average character width */\n\t\t\t\tint propPtr = fontStruct.properties;\n\t\t\t\tfor (int j = 0; j < fontStruct.n_properties; j++) {\n\t\t\t\t\t/* Look through properties for XAFONT */\n\t\t\t\t\tint[] prop = new int[2];\n\t\t\t\t\tOS.memmove(prop, propPtr, 8);\n\t\t\t\t\tif (prop[0] == OS.XA_FONT) {\n\t\t\t\t\t\t/* Found it, prop[1] points to the string */\n\t\t\t\t\t\tint ptr = OS.XmGetAtomName(xDisplay, prop[1]);\n\t\t\t\t\t\tint length = OS.strlen(ptr);\n\t\t\t\t\t\tbyte[] nameBuf = new byte[length];\n\t\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\t\tOS.XFree(ptr);\n\t\t\t\t\t\tString xlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\t\tint avg = 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Some font servers, for example, xfstt, do not pass\n\t\t\t\t\t\t\t * reasonable font properties to the client, so we\n\t\t\t\t\t\t\t * cannot construct a FontData for these. Use the font\n\t\t\t\t\t\t\t * name instead.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tint[] fontName = new int[1];\n\t\t\t\t\t\t\tOS.memmove(fontName, fontNamePtr [0] + (i * 4), 4);\n\t\t\t\t\t\t\tptr = fontName[0];\n\t\t\t\t\t\t\tif (ptr != 0 ) {\n\t\t\t\t\t\t\t\tlength = OS.strlen(ptr);\n\t\t\t\t\t\t\t\tnameBuf = new byte[length];\n\t\t\t\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\t\t\t\txlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\t\t\t\t// leave avg unchanged (0) so that it will be computed below\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (avg == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Not all fonts have average character width encoded\n\t\t\t\t\t\t\t * in the xlfd. This one doesn't, so do it the hard\n\t\t\t\t\t\t\t * way by averaging all the character widths.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\n\t\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t\t * the same width as the font's maximum width.  So no\n\t\t\t\t\t\t\t\t * averaging is required.\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t averageCharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tint sum = 0, count = 0;\n\t\t\t\t\t\t\t\tint cols = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\t\t\t\tXCharStruct struct = new XCharStruct();\n\t\t\t\t\t\t\t\tfor (int index = 0; index < cols; index++) {\n\t\t\t\t\t\t\t\t\tOS.memmove(struct, perCharPtr + (index * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\t\t\tint w = struct.width;\n\t\t\t\t\t\t\t\t\tif (w != 0) {\n\t\t\t\t\t\t\t\t\t\tsum += w;\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taverageCharWidth += sum / count;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* Average character width was in the xlfd */\n\t\t\t\t\t\t\taverageCharWidth += avg;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnumAverageCharWidth++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tpropPtr += 8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn FontMetrics.motif_new(ascent, descent, averageCharWidth / numAverageCharWidth, leading, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint xDisplay = data.display;\n\tFont font = data.font;\n\tint fontList = font.handle;\n\t/* Create a font context to iterate over each element in the font list */\n\tint[] buffer = new int[1];\n\tif (!OS.XmFontListInitFontContext(buffer, fontList)) {\n\t\tSWT.error(SWT.ERROR_NO_HANDLES);\n\t}\n\tint context = buffer[0];\n\t/* Values discovering during iteration */\n\tint ascent = 0;\n\tint descent = 0;\n\tint averageCharWidth = 0, numAverageCharWidth = 0;\n\tint leading = 0;\n\tint height = 0;\n\t\t\n\tXFontStruct fontStruct = new XFontStruct();\n\tint fontListEntry;\n\tint[] fontStructPtr = new int[1];\n\tint[] fontNamePtr = new int[1];\n\t/* Go through each entry in the font list. */\n\twhile ((fontListEntry = OS.XmFontListNextEntry(context)) != 0) {\n\t\tint fontPtr = OS.XmFontListEntryGetFont(fontListEntry, buffer);\n\t\tif (buffer[0] == 0) {\n\t\t\t/* FontList contains a single font */\n\t\t\tOS.memmove(fontStruct, fontPtr, XFontStruct.sizeof);\n\t\t\tascent = Math.max(ascent, fontStruct.ascent);\n\t\t\tdescent = Math.max(descent, fontStruct.descent);\n\t\t\tint fontHeight = fontStruct.ascent + fontStruct.descent;\n\t\t\theight = Math.max(height, fontHeight);\n\t\t\t/* Calculate average character width */\n\t\t\tint propPtr = fontStruct.properties;\n\t\t\tfor (int i = 0; i < fontStruct.n_properties; i++) {\n\t\t\t\t/* Look through properties for XAFONT */\n\t\t\t\tint[] prop = new int[2];\n\t\t\t\tOS.memmove(prop, propPtr, 8);\n\t\t\t\tif (prop[0] == OS.XA_FONT) {\n\t\t\t\t\t/* Found it, prop[1] points to the string */\n\t\t\t\t\tint ptr = OS.XmGetAtomName(xDisplay, prop[1]);\n\t\t\t\t\tint length = OS.strlen(ptr);\n\t\t\t\t\tbyte[] nameBuf = new byte[length];\n\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\tOS.XFree(ptr);\n\t\t\t\t\tString xlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\tint avg = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t// leave avg unchanged so that it will be computed below\n\t\t\t\t\t}\n\t\t\t\t\tif (avg == 0) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Not all fonts have average character width encoded\n\t\t\t\t\t\t * in the xlfd. This one doesn't, so do it the hard\n\t\t\t\t\t\t * way by averaging all the character widths.\n\t\t\t\t\t\t */\t\t\t\t\t\t\n\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\t\n\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t * the same width as the font's maximum width.  So no\n\t\t\t\t\t\t\t * averaging is required.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t averageCharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint sum = 0, count = 0;\n\t\t\t\t\t\t\tint cols = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\t\t\tXCharStruct struct = new XCharStruct();\n\t\t\t\t\t\t\tfor (int index = 0; index < cols; index++) {\n\t\t\t\t\t\t\t\tOS.memmove(struct, perCharPtr + (index * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\t\tint w = struct.width;\n\t\t\t\t\t\t\t\tif (w != 0) {\n\t\t\t\t\t\t\t\t\tsum += w;\n\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taverageCharWidth += sum / count;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Average character width was in the xlfd */\n\t\t\t\t\t\taverageCharWidth += avg;\n\t\t\t\t\t}\n\t\t\t\t\tnumAverageCharWidth++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpropPtr += 8;\n\t\t\t}\n\t\t} else {\n\t\t\t/* FontList contains a fontSet */\n\t\t\tint nFonts = OS.XFontsOfFontSet(fontPtr, fontStructPtr, fontNamePtr);\n\t\t\tint [] fontStructs = new int[nFonts];\n\t\t\tOS.memmove(fontStructs, fontStructPtr[0], nFonts * 4);\n\t\t\t/* Go through each fontStruct in the font set */\n\t\t\tfor (int i = 0; i < nFonts; i++) {\n\t\t\t\tOS.memmove(fontStruct, fontStructs[i], XFontStruct.sizeof);\n\t\t\t\tascent = Math.max(ascent, fontStruct.ascent);\n\t\t\t\tdescent = Math.max(descent, fontStruct.descent);\n\t\t\t\tint fontHeight = fontStruct.ascent + fontStruct.descent;\n\t\t\t\theight = Math.max(height, fontHeight);\n\t\t\t\t/* Calculate average character width */\n\t\t\t\tint propPtr = fontStruct.properties;\n\t\t\t\tfor (int j = 0; j < fontStruct.n_properties; j++) {\n\t\t\t\t\t/* Look through properties for XAFONT */\n\t\t\t\t\tint[] prop = new int[2];\n\t\t\t\t\tOS.memmove(prop, propPtr, 8);\n\t\t\t\t\tif (prop[0] == OS.XA_FONT) {\n\t\t\t\t\t\t/* Found it, prop[1] points to the string */\n\t\t\t\t\t\tint ptr = OS.XmGetAtomName(xDisplay, prop[1]);\n\t\t\t\t\t\tint length = OS.strlen(ptr);\n\t\t\t\t\t\tbyte[] nameBuf = new byte[length];\n\t\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\t\tOS.XFree(ptr);\n\t\t\t\t\t\tString xlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\t\tint avg = 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Some font servers, for example, xfstt, do not pass\n\t\t\t\t\t\t\t * reasonable font properties to the client, so we\n\t\t\t\t\t\t\t * cannot construct a FontData for these. Use the font\n\t\t\t\t\t\t\t * name instead.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tint[] fontName = new int[1];\n\t\t\t\t\t\t\tOS.memmove(fontName, fontNamePtr [0] + (i * 4), 4);\n\t\t\t\t\t\t\tptr = fontName[0];\n\t\t\t\t\t\t\tif (ptr != 0 ) {\n\t\t\t\t\t\t\t\tlength = OS.strlen(ptr);\n\t\t\t\t\t\t\t\tnameBuf = new byte[length];\n\t\t\t\t\t\t\t\tOS.memmove(nameBuf, ptr, length);\n\t\t\t\t\t\t\t\txlfd = new String(Converter.mbcsToWcs(null, nameBuf)).toLowerCase();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tavg = FontData.motif_new(xlfd).averageWidth / 10;\n\t\t\t\t\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\t\t\t\t\t// leave avg unchanged (0) so that it will be computed below\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (avg == 0) {\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t * Not all fonts have average character width encoded\n\t\t\t\t\t\t\t * in the xlfd. This one doesn't, so do it the hard\n\t\t\t\t\t\t\t * way by averaging all the character widths.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tint perCharPtr = fontStruct.per_char;\n\t\t\t\t\t\t\tif (perCharPtr == 0) {\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t * If perCharPtr is 0 then all glyphs in the font have\n\t\t\t\t\t\t\t\t * the same width as the font's maximum width.  So no\n\t\t\t\t\t\t\t\t * averaging is required.\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t averageCharWidth = fontStruct.max_bounds_width;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tint sum = 0, count = 0;\n\t\t\t\t\t\t\t\tint cols = fontStruct.max_char_or_byte2 - fontStruct.min_char_or_byte2 + 1;\n\t\t\t\t\t\t\t\tXCharStruct struct = new XCharStruct();\n\t\t\t\t\t\t\t\tfor (int index = 0; index < cols; index++) {\n\t\t\t\t\t\t\t\t\tOS.memmove(struct, perCharPtr + (index * XCharStruct.sizeof), XCharStruct.sizeof);\n\t\t\t\t\t\t\t\t\tint w = struct.width;\n\t\t\t\t\t\t\t\t\tif (w != 0) {\n\t\t\t\t\t\t\t\t\t\tsum += w;\n\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taverageCharWidth += sum / count;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* Average character width was in the xlfd */\n\t\t\t\t\t\t\taverageCharWidth += avg;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnumAverageCharWidth++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tpropPtr += 8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tOS.XmFontListFreeFontContext(context);\n\treturn FontMetrics.motif_new(ascent, descent, averageCharWidth / numAverageCharWidth, leading, height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 58,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground, values);\n\tXColor xColor = new XColor();\n\txColor.pixel = values.foreground;\n\tOS.XQueryColor(xDisplay,data.colormap,xColor);\n\treturn Color.motif_new(data.device, xColor);\n\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground, values);\n\tXColor xColor = new XColor();\n\txColor.pixel = values.foreground;\n\tOS.XQueryColor(xDisplay,data.colormap,xColor);\n\treturn Color.motif_new(data.device, xColor);\n\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCForeground, values);\n\tXColor xColor = new XColor();\n\txColor.pixel = values.foreground;\n\tOS.XQueryColor(xDisplay,data.colormap,xColor);\n\treturn Color.motif_new(data.device, xColor);\n\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 59,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 60,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.interpolation;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.interpolation;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.interpolation;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 61,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCCapStyle, values);\n\tint cap = SWT.CAP_FLAT;\n\tswitch (values.cap_style) {\n\t\tcase OS.CapRound: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.CapButt: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.CapProjecting: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCCapStyle, values);\n\tint cap = SWT.CAP_FLAT;\n\tswitch (values.cap_style) {\n\t\tcase OS.CapRound: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.CapButt: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.CapProjecting: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCCapStyle, values);\n\tint cap = SWT.CAP_FLAT;\n\tswitch (values.cap_style) {\n\t\tcase OS.CapRound: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.CapButt: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.CapProjecting: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 62,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint[] dash_list = data.dashes;\n\tif (dash_list == null) return null;\n\tint[] dashes = new int[dash_list.length];\n\tSystem.arraycopy(dash_list, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint[] dash_list = data.dashes;\n\tif (dash_list == null) return null;\n\tint[] dashes = new int[dash_list.length];\n\tSystem.arraycopy(dash_list, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint[] dash_list = data.dashes;\n\tif (dash_list == null) return null;\n\tint[] dashes = new int[dash_list.length];\n\tSystem.arraycopy(dash_list, 0, dashes, 0, dashes.length);\n\treturn dashes;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 63,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCJoinStyle, values);\n\tint join = SWT.JOIN_MITER;\n\tswitch (values.join_style) {\n\t\tcase OS.JoinMiter: join = SWT.JOIN_MITER; break;\n\t\tcase OS.JoinRound: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.JoinBevel: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCJoinStyle, values);\n\tint join = SWT.JOIN_MITER;\n\tswitch (values.join_style) {\n\t\tcase OS.JoinMiter: join = SWT.JOIN_MITER; break;\n\t\tcase OS.JoinRound: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.JoinBevel: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCJoinStyle, values);\n\tint join = SWT.JOIN_MITER;\n\tswitch (values.join_style) {\n\t\tcase OS.JoinMiter: join = SWT.JOIN_MITER; break;\n\t\tcase OS.JoinRound: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.JoinBevel: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 64,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.lineStyle;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 65,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCLineWidth, values);\n\treturn values.line_width;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCLineWidth, values);\n\treturn values.line_width;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(data.display, handle, OS.GCLineWidth, values);\n\treturn values.line_width;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 66,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 67,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    return data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    return data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    return data.textAntialias;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 68,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_matrix_copy(transform.handle, data.matrix);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_matrix_copy(transform.handle, data.matrix);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_matrix_copy(transform.handle, data.matrix);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 69,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (data.display, handle, OS.GCFunction, values);\n\treturn values.function == OS.GXxor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (data.display, handle, OS.GCFunction, values);\n\treturn values.function == OS.GXxor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tXGCValues values = new XGCValues ();\n\tOS.XGetGCValues (data.display, handle, OS.GCFunction, values);\n\treturn values.function == OS.GXxor;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.clipRgn != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 76,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (advanced && data.cairo != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitCairo();\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tint /*long*/ cairo = data.cairo;\n\t\tif (cairo != 0) Cairo.cairo_destroy(cairo);\n\t\tint /*long*/ matrix = data.matrix;\n\t\tif (matrix != 0) Cairo.cairo_matrix_destroy(matrix);\n\t\tint /*long*/ inverseMatrix = data.inverseMatrix;\n\t\tif (inverseMatrix != 0) Cairo.cairo_matrix_destroy(inverseMatrix);\n\t\tdata.cairo = data.matrix = data.inverseMatrix = 0;\n\t\tdata.antialias = data.textAntialias = data.interpolation = SWT.DEFAULT;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (advanced && data.cairo != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitCairo();\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tint /*long*/ cairo = data.cairo;\n\t\tif (cairo != 0) Cairo.cairo_destroy(cairo);\n\t\tint /*long*/ matrix = data.matrix;\n\t\tif (matrix != 0) Cairo.cairo_matrix_destroy(matrix);\n\t\tint /*long*/ inverseMatrix = data.inverseMatrix;\n\t\tif (inverseMatrix != 0) Cairo.cairo_matrix_destroy(inverseMatrix);\n\t\tdata.cairo = data.matrix = data.inverseMatrix = 0;\n\t\tdata.antialias = data.textAntialias = data.interpolation = SWT.DEFAULT;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (advanced && data.cairo != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitCairo();\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tint /*long*/ cairo = data.cairo;\n\t\tif (cairo != 0) Cairo.cairo_destroy(cairo);\n\t\tint /*long*/ matrix = data.matrix;\n\t\tif (matrix != 0) Cairo.cairo_matrix_destroy(matrix);\n\t\tint /*long*/ inverseMatrix = data.inverseMatrix;\n\t\tif (inverseMatrix != 0) Cairo.cairo_matrix_destroy(inverseMatrix);\n\t\tdata.cairo = data.matrix = data.inverseMatrix = 0;\n\t\tdata.antialias = data.textAntialias = data.interpolation = SWT.DEFAULT;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 77,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitCairo();\n\tCairo.cairo_set_alpha(data.cairo, alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tinitCairo();\n\tCairo.cairo_set_alpha(data.cairo, alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tinitCairo();\n\tCairo.cairo_set_alpha(data.cairo, alpha / 255f);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 78,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON:\n            initCairo();\n            break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.antialias = antialias;\n}",
        "accuracyTokens" : 0.7868852459016393,
        "accuracyCharacters" : 0.8473684210526315
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON:\n            initCairo();\n            break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.antialias = antialias;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON:\n            initCairo();\n            break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.antialias = antialias;\n}",
        "accuracyTokens" : 0.7333333333333333,
        "accuracyCharacters" : 0.7850877192982456
      } ],
      "memberId" : "d8a2ba24403db54b04ecc9f689655250"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 81,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetBackground(data.display, handle, color.handle.pixel);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetBackground(data.display, handle, color.handle.pixel);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetBackground(data.display, handle, color.handle.pixel);\n\tdata.backgroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 82,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.7608695652173914,
        "accuracyCharacters" : 0.7991803278688525
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.5,
        "accuracyCharacters" : 0.5770750988142292
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : 0.7419354838709677,
        "accuracyCharacters" : 0.7416413373860182
      } ],
      "memberId" : "87130bd669e96b2a276ee2680a9a6796"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 87,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tXRectangle rect = new XRectangle ();\n\trect.x = (short) x; \n\trect.y = (short) y;\n\trect.width = (short) Math.max (0, width); \n\trect.height = (short) Math.max (0, height);\n\tint clipRgn = OS.XCreateRegion();\n\tOS.XUnionRectWithRegion(rect, clipRgn, clipRgn);\n\tsetClipping(clipRgn);\n\tOS.XDestroyRegion(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tXRectangle rect = new XRectangle ();\n\trect.x = (short) x; \n\trect.y = (short) y;\n\trect.width = (short) Math.max (0, width); \n\trect.height = (short) Math.max (0, height);\n\tint clipRgn = OS.XCreateRegion();\n\tOS.XUnionRectWithRegion(rect, clipRgn, clipRgn);\n\tsetClipping(clipRgn);\n\tOS.XDestroyRegion(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tXRectangle rect = new XRectangle ();\n\trect.x = (short) x; \n\trect.y = (short) y;\n\trect.width = (short) Math.max (0, width); \n\trect.height = (short) Math.max (0, height);\n\tint clipRgn = OS.XCreateRegion();\n\tOS.XUnionRectWithRegion(rect, clipRgn, clipRgn);\n\tsetClipping(clipRgn);\n\tOS.XDestroyRegion(clipRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tinitCairo();\n\t\tint /*long*/ cairo = data.cairo;\n\t\tCairo.cairo_add_path(cairo, path.handle);\n\t\tCairo.cairo_clip(cairo);\n\t\tCairo.cairo_new_path(cairo);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tinitCairo();\n\t\tint /*long*/ cairo = data.cairo;\n\t\tCairo.cairo_add_path(cairo, path.handle);\n\t\tCairo.cairo_clip(cairo);\n\t\tCairo.cairo_new_path(cairo);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tinitCairo();\n\t\tint /*long*/ cairo = data.cairo;\n\t\tCairo.cairo_add_path(cairo, path.handle);\n\t\tCairo.cairo_clip(cairo);\n\t\tCairo.cairo_new_path(cairo);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 89,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping (rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping (rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping (rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 91,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint mode = OS.EvenOddRule, cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\t\tmode = OS.WindingRule; cairo_mode = Cairo.CAIRO_FILL_RULE_WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tmode = OS.EvenOddRule; cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.XSetFillRule(data.display, handle, mode);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_fill_rule(cairo, cairo_mode);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint mode = OS.EvenOddRule, cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\t\tmode = OS.WindingRule; cairo_mode = Cairo.CAIRO_FILL_RULE_WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tmode = OS.EvenOddRule; cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.XSetFillRule(data.display, handle, mode);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_fill_rule(cairo, cairo_mode);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint mode = OS.EvenOddRule, cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING:\n\t\t\tmode = OS.WindingRule; cairo_mode = Cairo.CAIRO_FILL_RULE_WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD:\n\t\t\tmode = OS.EvenOddRule; cairo_mode = Cairo.CAIRO_FILL_RULE_EVEN_ODD; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.XSetFillRule(data.display, handle, mode);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_fill_rule(cairo, cairo_mode);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 92,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font;\n\tif (data.renderTable != 0) OS.XmRenderTableFree(data.renderTable);\n\tdata.renderTable = 0;\n\tdata.stringWidth = data.stringHeight = data.textWidth = data.textHeight = -1;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tsetCairoFont(cairo, font);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font;\n\tif (data.renderTable != 0) OS.XmRenderTableFree(data.renderTable);\n\tdata.renderTable = 0;\n\tdata.stringWidth = data.stringHeight = data.textWidth = data.textHeight = -1;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tsetCairoFont(cairo, font);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (font == null) font = data.device.systemFont;\n\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdata.font = font;\n\tif (data.renderTable != 0) OS.XmRenderTableFree(data.renderTable);\n\tdata.renderTable = 0;\n\tdata.stringWidth = data.stringHeight = data.textWidth = data.textHeight = -1;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tsetCairoFont(cairo, font);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 93,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetForeground(data.display, handle, color.handle.pixel);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor xColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (xColor.red & 0xFFFF) / (float)0xFFFF, (xColor.green & 0xFFFF) / (float)0xFFFF, (xColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetForeground(data.display, handle, color.handle.pixel);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor xColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (xColor.red & 0xFFFF) / (float)0xFFFF, (xColor.green & 0xFFFF) / (float)0xFFFF, (xColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tOS.XSetForeground(data.display, handle, color.handle.pixel);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tXColor xColor = color.handle;\n\t\tCairo.cairo_set_rgb_color(cairo, (xColor.red & 0xFFFF) / (float)0xFFFF, (xColor.green & 0xFFFF) / (float)0xFFFF, (xColor.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = null;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 94,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (pattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\t} else {\n\t\tint display = data.display;\n\t\tXGCValues values = new XGCValues ();\n\t\tOS.XGetGCValues (display, handle, OS.GCForeground, values);\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.foreground;\n\t\tOS.XQueryColor(display, data.colormap, color);\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.9308176100628931,
        "accuracyCharacters" : 0.9358638743455497
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (pattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\t} else {\n\t\tint display = data.display;\n\t\tXGCValues values = new XGCValues ();\n\t\tOS.XGetGCValues (display, handle, OS.GCForeground, values);\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.foreground;\n\t\tOS.XQueryColor(display, data.colormap, color);\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.8509316770186336,
        "accuracyCharacters" : 0.8615782664941786
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tif (pattern != null) {\n\t\tCairo.cairo_set_pattern(cairo, pattern.handle);\n\t} else {\n\t\tint display = data.display;\n\t\tXGCValues values = new XGCValues ();\n\t\tOS.XGetGCValues (display, handle, OS.GCForeground, values);\n\t\tXColor color = new XColor();\n\t\tcolor.pixel = values.foreground;\n\t\tOS.XQueryColor(display, data.colormap, color);\n\t\tCairo.cairo_set_rgb_color(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF);\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : 0.9085714285714286,
        "accuracyCharacters" : 0.8998822143698468
      } ],
      "memberId" : "250098d8c1699e8fea54ff002bbc8b38"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 95,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitCairo();\n\tdata.interpolation = interpolation;\n}",
        "accuracyTokens" : 0.7868852459016393,
        "accuracyCharacters" : 0.8154761904761905
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitCairo();\n\tdata.interpolation = interpolation;\n}",
        "accuracyTokens" : 0.9836065573770492,
        "accuracyCharacters" : 0.9732142857142857
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT:\n\t\tcase SWT.NONE:\n\t\tcase SWT.LOW:\n\t\tcase SWT.HIGH:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitCairo();\n\tdata.interpolation = interpolation;\n}",
        "accuracyTokens" : 0.7333333333333333,
        "accuracyCharacters" : 0.7598039215686274
      } ],
      "memberId" : "49885cfc0e72d45dedfd9565cdedc55f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 96,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint cap_style = 0, cairo_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.CapRound;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.CapButt;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_BUTT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.CapProjecting;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_cap(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint cap_style = 0, cairo_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.CapRound;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.CapButt;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_BUTT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.CapProjecting;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_cap(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint cap_style = 0, cairo_style = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcap_style = OS.CapRound;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcap_style = OS.CapButt;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_BUTT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcap_style = OS.CapProjecting;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_CAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_cap(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 97,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint xDisplay = data.display;\n\tif (dashes != null && dashes.length != 0) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdash_list[i] = (byte)dash;\n\t\t}\n\t\tOS.XSetDashes(xDisplay, handle, 0, dash_list, dash_list.length);\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, values.cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (data.dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[data.dashes.length];\n\t\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\t\tcairoDashes[i] = data.dashes[i];\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint xDisplay = data.display;\n\tif (dashes != null && dashes.length != 0) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdash_list[i] = (byte)dash;\n\t\t}\n\t\tOS.XSetDashes(xDisplay, handle, 0, dash_list, dash_list.length);\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, values.cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (data.dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[data.dashes.length];\n\t\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\t\tcairoDashes[i] = data.dashes[i];\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint xDisplay = data.display;\n\tif (dashes != null && dashes.length != 0) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdash_list[i] = (byte)dash;\n\t\t}\n\t\tOS.XSetDashes(xDisplay, handle, 0, dash_list, dash_list.length);\n\t\tdata.dashes = new int[dashes.length];\n\t\tSystem.arraycopy(dashes, 0, data.dashes, 0, dashes.length);\n\t\tdata.lineStyle = SWT.LINE_CUSTOM;\n\t} else {\n\t\tdata.dashes = null;\n\t\tdata.lineStyle = SWT.LINE_SOLID;\n\t}\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, values.cap_style, values.join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (data.dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[data.dashes.length];\n\t\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\t\tcairoDashes[i] = data.dashes[i];\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 98,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint join_style = 0, cairo_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.JoinMiter;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.JoinRound;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.JoinBevel;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, values.cap_style, join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_join(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint join_style = 0, cairo_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.JoinMiter;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.JoinRound;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.JoinBevel;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, values.cap_style, join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_join(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint join_style = 0, cairo_style = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoin_style = OS.JoinMiter;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoin_style = OS.JoinRound;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoin_style = OS.JoinBevel;\n\t\t\tcairo_style = Cairo.CAIRO_LINE_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, line_style, values.cap_style, join_style);\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_join(cairo, cairo_style);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 99,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint[] dashes = null;\n\tint width = values.line_width;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, dashes != null ? OS.LineOnOffDash : OS.LineSolid, values.cap_style, values.join_style);\n\tif (dashes != null) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dash_list.length; i++) {\n\t\t\tdash_list[i] = (byte)(width == 0 ? dashes[i] : dashes[i] * width);\n\t\t}\n\t\tOS.XSetDashes(xDisplay, handle, 0, dash_list, dash_list.length);\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[dashes.length];\n\t\t\tfor (int i = 0; i < cairoDashes.length; i++) {\n\t\t\t\tcairoDashes[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint[] dashes = null;\n\tint width = values.line_width;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, dashes != null ? OS.LineOnOffDash : OS.LineSolid, values.cap_style, values.join_style);\n\tif (dashes != null) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dash_list.length; i++) {\n\t\t\tdash_list[i] = (byte)(width == 0 ? dashes[i] : dashes[i] * width);\n\t\t}\n\t\tOS.XSetDashes(xDisplay, handle, 0, dash_list, dash_list.length);\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[dashes.length];\n\t\t\tfor (int i = 0; i < cairoDashes.length; i++) {\n\t\t\t\tcairoDashes[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint[] dashes = null;\n\tint width = values.line_width;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASH:\n\t\t\tdashes = width != 0 ? LINE_DASH : LINE_DASH_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DOT:\n\t\t\tdashes = width != 0 ? LINE_DOT : LINE_DOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOT : LINE_DASHDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tdashes = width != 0 ? LINE_DASHDOTDOT : LINE_DASHDOTDOT_ZERO;\n\t\t\tbreak;\n\t\tcase SWT.LINE_CUSTOM:\n\t\t\tdashes = data.dashes;\n\t\t\tif (dashes == null) lineStyle = SWT.LINE_SOLID;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tdata.lineStyle = lineStyle;\n\tOS.XSetLineAttributes(xDisplay, handle, values.line_width, dashes != null ? OS.LineOnOffDash : OS.LineSolid, values.cap_style, values.join_style);\n\tif (dashes != null) {\n\t\tbyte[] dash_list = new byte[dashes.length];\n\t\tfor (int i = 0; i < dash_list.length; i++) {\n\t\t\tdash_list[i] = (byte)(width == 0 ? dashes[i] : dashes[i] * width);\n\t\t}\n\t\tOS.XSetDashes(xDisplay, handle, 0, dash_list, dash_list.length);\n\t}\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tif (dashes != null) {\n\t\t\tdouble[] cairoDashes = new double[dashes.length];\n\t\t\tfor (int i = 0; i < cairoDashes.length; i++) {\n\t\t\t\tcairoDashes[i] = width == 0 ? dashes[i] : dashes[i] * width;\n\t\t\t}\n\t\t\tCairo.cairo_set_dash(cairo, cairoDashes, cairoDashes.length, 0);\n\t\t} else {\n\t\t\tCairo.cairo_set_dash(cairo, null, 0, 0);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 100,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(data.display, handle, lineWidth, line_style, values.cap_style, values.join_style);\n\tdata.lineWidth = lineWidth;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_width(cairo, Math.max(1, lineWidth));\n\t}\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(data.display, handle, lineWidth, line_style, values.cap_style, values.join_style);\n\tdata.lineWidth = lineWidth;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_width(cairo, Math.max(1, lineWidth));\n\t}\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint xDisplay = data.display;\n\tXGCValues values = new XGCValues();\n\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);\n\tint line_style = data.lineStyle == SWT.LINE_SOLID ? OS.LineSolid : OS.LineOnOffDash;\n\tOS.XSetLineAttributes(data.display, handle, lineWidth, line_style, values.cap_style, values.join_style);\n\tdata.lineWidth = lineWidth;\n\tint /*long*/ cairo = data.cairo;\n\tif (cairo != 0) {\n\t\tCairo.cairo_set_line_width(cairo, Math.max(1, lineWidth));\n\t}\n\tswitch (data.lineStyle) {\n\t\tcase SWT.LINE_DOT:\n\t\tcase SWT.LINE_DASH:\n\t\tcase SWT.LINE_DASHDOT:\n\t\tcase SWT.LINE_DASHDOTDOT:\n\t\t\tsetLineStyle(data.lineStyle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 103,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.textAntialias = antialias;\n}",
        "accuracyTokens" : 0.7796610169491526,
        "accuracyCharacters" : 0.8328530259365994
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.textAntialias = antialias;\n}",
        "accuracyTokens" : 1.0,
        "accuracyCharacters" : 1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n    if (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n    switch (antialias) {\n        case SWT.DEFAULT: break;\n        case SWT.OFF: break;\n        case SWT.ON: break;\n        default:\n            SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n    }\n    data.textAntialias = antialias;\n}",
        "accuracyTokens" : 0.726027397260274,
        "accuracyCharacters" : 0.7683215130023641
      } ],
      "memberId" : "59bfb550d3377219b9363ff6be8faf41"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 104,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_concat_matrix(cairo, data.inverseMatrix);\n\tif (transform != null) {\n\t\tCairo.cairo_concat_matrix(cairo, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.matrix, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);\n\t\tCairo.cairo_matrix_invert(data.inverseMatrix);\n\t} else {\n\t\tCairo.cairo_matrix_set_identity(data.matrix);\n\t\tCairo.cairo_matrix_set_identity(data.inverseMatrix);\n\t}\n\t//TODO - round off problems\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint /*long*/ matrix = data.inverseMatrix;\n\t\tint /*long*/ newRgn = OS.XCreateRegion();\n\t\t//TODO - get rectangles from region instead of clip box\n\t\tXRectangle rect = new XRectangle();\n\t\tOS.XClipBox(clipRgn, rect);\n\t\tshort[] pointArray = new short[8];\n\t\tdouble[] x = new double[1], y = new double[1];\n\t\tx[0] = rect.x;\n\t\ty[0] = rect.y;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[0] = (short)Math.round(x[0]);\n\t\tpointArray[1] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x + rect.width;\n\t\ty[0] = rect.y;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[2] = (short)Math.round(x[0]);\n\t\tpointArray[3] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x + rect.width;\n\t\ty[0] = rect.y + rect.height;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[4] = (short)Math.round(x[0]);\n\t\tpointArray[5] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x;\n\t\ty[0] = rect.y + rect.height;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[6] = (short)Math.round(x[0]);\n\t\tpointArray[7] = (short)Math.round(y[0]);\n\t\tint /*long*/ polyRgn = OS.XPolygonRegion(pointArray, pointArray.length / 2, OS.EvenOddRule);\n\t\tOS.XUnionRegion(handle, polyRgn, handle);\n\t\tOS.XDestroyRegion(polyRgn);\n\t\tOS.XDestroyRegion(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : 0.9747706422018348,
        "accuracyCharacters" : 0.9748644652538196
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_concat_matrix(cairo, data.inverseMatrix);\n\tif (transform != null) {\n\t\tCairo.cairo_concat_matrix(cairo, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.matrix, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);\n\t\tCairo.cairo_matrix_invert(data.inverseMatrix);\n\t} else {\n\t\tCairo.cairo_matrix_set_identity(data.matrix);\n\t\tCairo.cairo_matrix_set_identity(data.inverseMatrix);\n\t}\n\t//TODO - round off problems\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint /*long*/ matrix = data.inverseMatrix;\n\t\tint /*long*/ newRgn = OS.XCreateRegion();\n\t\t//TODO - get rectangles from region instead of clip box\n\t\tXRectangle rect = new XRectangle();\n\t\tOS.XClipBox(clipRgn, rect);\n\t\tshort[] pointArray = new short[8];\n\t\tdouble[] x = new double[1], y = new double[1];\n\t\tx[0] = rect.x;\n\t\ty[0] = rect.y;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[0] = (short)Math.round(x[0]);\n\t\tpointArray[1] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x + rect.width;\n\t\ty[0] = rect.y;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[2] = (short)Math.round(x[0]);\n\t\tpointArray[3] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x + rect.width;\n\t\ty[0] = rect.y + rect.height;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[4] = (short)Math.round(x[0]);\n\t\tpointArray[5] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x;\n\t\ty[0] = rect.y + rect.height;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[6] = (short)Math.round(x[0]);\n\t\tpointArray[7] = (short)Math.round(y[0]);\n\t\tint /*long*/ polyRgn = OS.XPolygonRegion(pointArray, pointArray.length / 2, OS.EvenOddRule);\n\t\tOS.XUnionRegion(handle, polyRgn, handle);\n\t\tOS.XDestroyRegion(polyRgn);\n\t\tOS.XDestroyRegion(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : 0.9452054794520548,
        "accuracyCharacters" : 0.9464636542239686
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitCairo();\n\tint /*long*/ cairo = data.cairo;\n\tCairo.cairo_concat_matrix(cairo, data.inverseMatrix);\n\tif (transform != null) {\n\t\tCairo.cairo_concat_matrix(cairo, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.matrix, transform.handle);\n\t\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);\n\t\tCairo.cairo_matrix_invert(data.inverseMatrix);\n\t} else {\n\t\tCairo.cairo_matrix_set_identity(data.matrix);\n\t\tCairo.cairo_matrix_set_identity(data.inverseMatrix);\n\t}\n\t//TODO - round off problems\n\tint /*long*/ clipRgn = data.clipRgn;\n\tif (clipRgn != 0) {\n\t\tint /*long*/ matrix = data.inverseMatrix;\n\t\tint /*long*/ newRgn = OS.XCreateRegion();\n\t\t//TODO - get rectangles from region instead of clip box\n\t\tXRectangle rect = new XRectangle();\n\t\tOS.XClipBox(clipRgn, rect);\n\t\tshort[] pointArray = new short[8];\n\t\tdouble[] x = new double[1], y = new double[1];\n\t\tx[0] = rect.x;\n\t\ty[0] = rect.y;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[0] = (short)Math.round(x[0]);\n\t\tpointArray[1] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x + rect.width;\n\t\ty[0] = rect.y;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[2] = (short)Math.round(x[0]);\n\t\tpointArray[3] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x + rect.width;\n\t\ty[0] = rect.y + rect.height;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[4] = (short)Math.round(x[0]);\n\t\tpointArray[5] = (short)Math.round(y[0]);\n\t\tx[0] = rect.x;\n\t\ty[0] = rect.y + rect.height;\n\t\tCairo.cairo_matrix_transform_point(matrix, x, y);\n\t\tpointArray[6] = (short)Math.round(x[0]);\n\t\tpointArray[7] = (short)Math.round(y[0]);\n\t\tint /*long*/ polyRgn = OS.XPolygonRegion(pointArray, pointArray.length / 2, OS.EvenOddRule);\n\t\tOS.XUnionRegion(handle, polyRgn, handle);\n\t\tOS.XDestroyRegion(polyRgn);\n\t\tOS.XDestroyRegion(clipRgn);\n\t\tdata.clipRgn = newRgn;\n\t}\n}",
        "accuracyTokens" : 0.9579646017699115,
        "accuracyCharacters" : 0.9498106060606061
      } ],
      "memberId" : "a942be0836709c71c5fad636ffc15bba"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 105,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tOS.XSetFunction(data.display, handle, xor ? OS.GXxor : OS.GXcopy);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tOS.XSetFunction(data.display, handle, xor ? OS.GXxor : OS.GXcopy);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tOS.XSetFunction(data.display, handle, xor ? OS.GXxor : OS.GXcopy);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 106,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetString(string);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint width, height;\n\tif (string.length() == 0) {\n\t\twidth = 0;\n\t\theight = getFontHeight();\n\t} else {\n\t\tint fontList = data.font.handle;\n\t\tint xmString = data.xmString;\n\t\twidth = OS.XmStringWidth(fontList, xmString);\n\t\theight = OS.XmStringHeight(fontList, xmString);\n\t}\n\treturn new Point(data.stringWidth = width, data.stringHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetString(string);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint width, height;\n\tif (string.length() == 0) {\n\t\twidth = 0;\n\t\theight = getFontHeight();\n\t} else {\n\t\tint fontList = data.font.handle;\n\t\tint xmString = data.xmString;\n\t\twidth = OS.XmStringWidth(fontList, xmString);\n\t\theight = OS.XmStringHeight(fontList, xmString);\n\t}\n\treturn new Point(data.stringWidth = width, data.stringHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetString(string);\n\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);\n\tint width, height;\n\tif (string.length() == 0) {\n\t\twidth = 0;\n\t\theight = getFontHeight();\n\t} else {\n\t\tint fontList = data.font.handle;\n\t\tint xmString = data.xmString;\n\t\twidth = OS.XmStringWidth(fontList, xmString);\n\t\theight = OS.XmStringHeight(fontList, xmString);\n\t}\n\treturn new Point(data.stringWidth = width, data.stringHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 108,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetText(string, flags);\n\tif (data.textWidth != -1) return new Point(data.textWidth, data.textHeight);\n\tint width, height;\n\tif (string.length() == 0) {\n\t\twidth = 0;\n\t\theight = getFontHeight();\n\t} else {\n\t\tint fontList = data.font.handle;\n\t\tint xmText = data.xmText;\n\t\twidth = OS.XmStringWidth(fontList, xmText);\n\t\theight = OS.XmStringHeight(fontList, xmText);\n\t}\n\treturn new Point(data.textWidth = width, data.textHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetText(string, flags);\n\tif (data.textWidth != -1) return new Point(data.textWidth, data.textHeight);\n\tint width, height;\n\tif (string.length() == 0) {\n\t\twidth = 0;\n\t\theight = getFontHeight();\n\t} else {\n\t\tint fontList = data.font.handle;\n\t\tint xmText = data.xmText;\n\t\twidth = OS.XmStringWidth(fontList, xmText);\n\t\theight = OS.XmStringHeight(fontList, xmText);\n\t}\n\treturn new Point(data.textWidth = width, data.textHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tsetText(string, flags);\n\tif (data.textWidth != -1) return new Point(data.textWidth, data.textHeight);\n\tint width, height;\n\tif (string.length() == 0) {\n\t\twidth = 0;\n\t\theight = getFontHeight();\n\t} else {\n\t\tint fontList = data.font.handle;\n\t\tint xmText = data.xmText;\n\t\twidth = OS.XmStringWidth(fontList, xmText);\n\t\theight = OS.XmStringHeight(fontList, xmText);\n\t}\n\treturn new Point(data.textWidth = width, data.textHeight = height);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 4,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\n\t/* Get the HDC for the device */\n\tDevice device = data.device;\n \tint hDC = device.internal_new_GC(null);\n \t\n \t/* Copy the bitmap area */\n\tRectangle rect = image.getBounds(); \t\n\tint memHdc = OS.CreateCompatibleDC(hDC);\n\tint hOldBitmap = OS.SelectObject(memHdc, image.handle);\n\tOS.BitBlt(memHdc, 0, 0, rect.width, rect.height, handle, x, y, OS.SRCCOPY);\n\tOS.SelectObject(memHdc, hOldBitmap);\n\tOS.DeleteDC(memHdc);\n\t\n\t/* Release the HDC for the device */\n\tdevice.internal_dispose_GC(hDC, null);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\n\t/* Get the HDC for the device */\n\tDevice device = data.device;\n \tint hDC = device.internal_new_GC(null);\n \t\n \t/* Copy the bitmap area */\n\tRectangle rect = image.getBounds(); \t\n\tint memHdc = OS.CreateCompatibleDC(hDC);\n\tint hOldBitmap = OS.SelectObject(memHdc, image.handle);\n\tOS.BitBlt(memHdc, 0, 0, rect.width, rect.height, handle, x, y, OS.SRCCOPY);\n\tOS.SelectObject(memHdc, hOldBitmap);\n\tOS.DeleteDC(memHdc);\n\t\n\t/* Release the HDC for the device */\n\tdevice.internal_dispose_GC(hDC, null);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (image.type != SWT.BITMAP || image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\n\t/* Get the HDC for the device */\n\tDevice device = data.device;\n \tint hDC = device.internal_new_GC(null);\n \t\n \t/* Copy the bitmap area */\n\tRectangle rect = image.getBounds(); \t\n\tint memHdc = OS.CreateCompatibleDC(hDC);\n\tint hOldBitmap = OS.SelectObject(memHdc, image.handle);\n\tOS.BitBlt(memHdc, 0, 0, rect.width, rect.height, handle, x, y, OS.SRCCOPY);\n\tOS.SelectObject(memHdc, hOldBitmap);\n\tOS.DeleteDC(memHdc);\n\t\n\t/* Release the HDC for the device */\n\tdevice.internal_dispose_GC(hDC, null);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 6,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\n\t/*\n\t* Feature in WinCE.  The function WindowFromDC is not part of the\n\t* WinCE SDK.  The fix is to remember the HWND.\n\t*/\n\tint hwnd = data.hwnd;\n\tif (hwnd == 0) {\n\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\n\t} else {\n\t\tRECT lprcClip = null;\n\t\tint hrgn = OS.CreateRectRgn(0, 0, 0, 0);\n\t\tif (OS.GetClipRgn(handle, hrgn) == 1) {\n\t\t\tlprcClip = new RECT();\n\t\t\tOS.GetRgnBox(hrgn, lprcClip);\n\t\t}\n\t\tOS.DeleteObject(hrgn);\n\t\tRECT lprcScroll = new RECT();\n\t\tOS.SetRect(lprcScroll, srcX, srcY, srcX + width, srcY + height);\n\t\tint flags = paint ? OS.SW_INVALIDATE | OS.SW_ERASE : 0;\n\t\tint res = OS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, flags); \n\n\t\t/*\n\t\t* Feature in WinCE.  ScrollWindowEx does not accept combined\n\t\t* vertical and horizontal scrolling.  The fix is to do a\n\t\t* BitBlt and invalidate the appropriate source area.\n\t\t*/\n\t\tif (res == 0 && OS.IsWinCE) {\n\t\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\n\t\t\tif (paint) {\n\t\t\t\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\t\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\t\t\tif (disjoint) {\n\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t} else {\n\t\t\t\t\tif (deltaX != 0) {\n\t\t\t\t\t\tint newX = destX - deltaX;\n\t\t\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\t\t\tOS.SetRect(lprcScroll, newX, srcY, newX + Math.abs(deltaX), srcY + height);\n\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (deltaY != 0) {\n\t\t\t\t\t\tint newY = destY - deltaY;\n\t\t\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\t\t\tOS.SetRect(lprcScroll, srcX, newY, srcX + width, newY + Math.abs(deltaY));\n\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\n\t/*\n\t* Feature in WinCE.  The function WindowFromDC is not part of the\n\t* WinCE SDK.  The fix is to remember the HWND.\n\t*/\n\tint hwnd = data.hwnd;\n\tif (hwnd == 0) {\n\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\n\t} else {\n\t\tRECT lprcClip = null;\n\t\tint hrgn = OS.CreateRectRgn(0, 0, 0, 0);\n\t\tif (OS.GetClipRgn(handle, hrgn) == 1) {\n\t\t\tlprcClip = new RECT();\n\t\t\tOS.GetRgnBox(hrgn, lprcClip);\n\t\t}\n\t\tOS.DeleteObject(hrgn);\n\t\tRECT lprcScroll = new RECT();\n\t\tOS.SetRect(lprcScroll, srcX, srcY, srcX + width, srcY + height);\n\t\tint flags = paint ? OS.SW_INVALIDATE | OS.SW_ERASE : 0;\n\t\tint res = OS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, flags); \n\n\t\t/*\n\t\t* Feature in WinCE.  ScrollWindowEx does not accept combined\n\t\t* vertical and horizontal scrolling.  The fix is to do a\n\t\t* BitBlt and invalidate the appropriate source area.\n\t\t*/\n\t\tif (res == 0 && OS.IsWinCE) {\n\t\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\n\t\t\tif (paint) {\n\t\t\t\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\t\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\t\t\tif (disjoint) {\n\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t} else {\n\t\t\t\t\tif (deltaX != 0) {\n\t\t\t\t\t\tint newX = destX - deltaX;\n\t\t\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\t\t\tOS.SetRect(lprcScroll, newX, srcY, newX + Math.abs(deltaX), srcY + height);\n\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (deltaY != 0) {\n\t\t\t\t\t\tint newY = destY - deltaY;\n\t\t\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\t\t\tOS.SetRect(lprcScroll, srcX, newY, srcX + width, newY + Math.abs(deltaY));\n\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\n\t/*\n\t* Feature in WinCE.  The function WindowFromDC is not part of the\n\t* WinCE SDK.  The fix is to remember the HWND.\n\t*/\n\tint hwnd = data.hwnd;\n\tif (hwnd == 0) {\n\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\n\t} else {\n\t\tRECT lprcClip = null;\n\t\tint hrgn = OS.CreateRectRgn(0, 0, 0, 0);\n\t\tif (OS.GetClipRgn(handle, hrgn) == 1) {\n\t\t\tlprcClip = new RECT();\n\t\t\tOS.GetRgnBox(hrgn, lprcClip);\n\t\t}\n\t\tOS.DeleteObject(hrgn);\n\t\tRECT lprcScroll = new RECT();\n\t\tOS.SetRect(lprcScroll, srcX, srcY, srcX + width, srcY + height);\n\t\tint flags = paint ? OS.SW_INVALIDATE | OS.SW_ERASE : 0;\n\t\tint res = OS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, flags); \n\n\t\t/*\n\t\t* Feature in WinCE.  ScrollWindowEx does not accept combined\n\t\t* vertical and horizontal scrolling.  The fix is to do a\n\t\t* BitBlt and invalidate the appropriate source area.\n\t\t*/\n\t\tif (res == 0 && OS.IsWinCE) {\n\t\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\n\t\t\tif (paint) {\n\t\t\t\tint deltaX = destX - srcX, deltaY = destY - srcY;\n\t\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\n\t\t\t\tif (disjoint) {\n\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t} else {\n\t\t\t\t\tif (deltaX != 0) {\n\t\t\t\t\t\tint newX = destX - deltaX;\n\t\t\t\t\t\tif (deltaX < 0) newX = destX + width;\n\t\t\t\t\t\tOS.SetRect(lprcScroll, newX, srcY, newX + Math.abs(deltaX), srcY + height);\n\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (deltaY != 0) {\n\t\t\t\t\t\tint newY = destY - deltaY;\n\t\t\t\t\t\tif (deltaY < 0) newY = destY + height;\n\t\t\t\t\t\tOS.SetRect(lprcScroll, srcX, newY, srcX + width, newY + Math.abs(deltaY));\n\t\t\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 13,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawArc(gdipGraphics, data.gdipPen, x, y, width, height, -startAngle, -arcAngle);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\t/*\n\t* Feature in WinCE.  The function Arc is not present in the\n\t* WinCE SDK.  The fix is to emulate arc drawing by using\n\t* Polyline.\n\t*/\n\tif (OS.IsWinCE) {\n\t\t/* compute arc with a simple linear interpolation */\n\t\tif (arcAngle < 0) {\n\t\t\tstartAngle += arcAngle;\n\t\t\tarcAngle = -arcAngle;\n\t\t}\n\t\tif (arcAngle > 360) arcAngle = 360;\n\t\tint[] points = new int[(arcAngle + 1) * 2];\t\t\n\t\tint cteX = 2 * x + width;\n\t\tint cteY = 2 * y + height;\n\t\tint index = 0;\n\t\tfor (int i = 0; i <= arcAngle; i++) {\n\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;\n\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;\n\t\t} \n\t\tOS.Polyline(handle, points, points.length / 2);\n\t} else {\t\n\t\tint x1, y1, x2, y2,tmp;\n\t\tboolean isNegative;\n\t\tif (arcAngle >= 360 || arcAngle <= -360) {\n\t\t\tx1 = x2 = x + width;\n\t\t\ty1 = y2 = y + height / 2;\n\t\t} else {\n\t\t\tisNegative = arcAngle < 0;\n\t\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tif (isNegative) {\n\t\t\t\t// swap angles\n\t\t\t   \ttmp = startAngle;\n\t\t\t\tstartAngle = arcAngle;\n\t\t\t\tarcAngle = tmp;\n\t\t\t}\n\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;\n\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;\n\t\t\t\n\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;\n\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t\n\t\t}\n\t\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\t\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\t\tOS.Arc(handle, x, y, x + width + 1, y + height + 1, x1, y1, x2, y2);\n\t\tOS.SelectObject(handle, oldBrush);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawArc(gdipGraphics, data.gdipPen, x, y, width, height, -startAngle, -arcAngle);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\t/*\n\t* Feature in WinCE.  The function Arc is not present in the\n\t* WinCE SDK.  The fix is to emulate arc drawing by using\n\t* Polyline.\n\t*/\n\tif (OS.IsWinCE) {\n\t\t/* compute arc with a simple linear interpolation */\n\t\tif (arcAngle < 0) {\n\t\t\tstartAngle += arcAngle;\n\t\t\tarcAngle = -arcAngle;\n\t\t}\n\t\tif (arcAngle > 360) arcAngle = 360;\n\t\tint[] points = new int[(arcAngle + 1) * 2];\t\t\n\t\tint cteX = 2 * x + width;\n\t\tint cteY = 2 * y + height;\n\t\tint index = 0;\n\t\tfor (int i = 0; i <= arcAngle; i++) {\n\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;\n\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;\n\t\t} \n\t\tOS.Polyline(handle, points, points.length / 2);\n\t} else {\t\n\t\tint x1, y1, x2, y2,tmp;\n\t\tboolean isNegative;\n\t\tif (arcAngle >= 360 || arcAngle <= -360) {\n\t\t\tx1 = x2 = x + width;\n\t\t\ty1 = y2 = y + height / 2;\n\t\t} else {\n\t\t\tisNegative = arcAngle < 0;\n\t\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tif (isNegative) {\n\t\t\t\t// swap angles\n\t\t\t   \ttmp = startAngle;\n\t\t\t\tstartAngle = arcAngle;\n\t\t\t\tarcAngle = tmp;\n\t\t\t}\n\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;\n\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;\n\t\t\t\n\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;\n\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t\n\t\t}\n\t\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\t\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\t\tOS.Arc(handle, x, y, x + width + 1, y + height + 1, x1, y1, x2, y2);\n\t\tOS.SelectObject(handle, oldBrush);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawArc(gdipGraphics, data.gdipPen, x, y, width, height, -startAngle, -arcAngle);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\t/*\n\t* Feature in WinCE.  The function Arc is not present in the\n\t* WinCE SDK.  The fix is to emulate arc drawing by using\n\t* Polyline.\n\t*/\n\tif (OS.IsWinCE) {\n\t\t/* compute arc with a simple linear interpolation */\n\t\tif (arcAngle < 0) {\n\t\t\tstartAngle += arcAngle;\n\t\t\tarcAngle = -arcAngle;\n\t\t}\n\t\tif (arcAngle > 360) arcAngle = 360;\n\t\tint[] points = new int[(arcAngle + 1) * 2];\t\t\n\t\tint cteX = 2 * x + width;\n\t\tint cteY = 2 * y + height;\n\t\tint index = 0;\n\t\tfor (int i = 0; i <= arcAngle; i++) {\n\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;\n\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;\n\t\t} \n\t\tOS.Polyline(handle, points, points.length / 2);\n\t} else {\t\n\t\tint x1, y1, x2, y2,tmp;\n\t\tboolean isNegative;\n\t\tif (arcAngle >= 360 || arcAngle <= -360) {\n\t\t\tx1 = x2 = x + width;\n\t\t\ty1 = y2 = y + height / 2;\n\t\t} else {\n\t\t\tisNegative = arcAngle < 0;\n\t\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tif (isNegative) {\n\t\t\t\t// swap angles\n\t\t\t   \ttmp = startAngle;\n\t\t\t\tstartAngle = arcAngle;\n\t\t\t\tarcAngle = tmp;\n\t\t\t}\n\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;\n\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;\n\t\t\t\n\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;\n\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t\n\t\t}\n\t\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\t\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\t\tOS.Arc(handle, x, y, x + width + 1, y + height + 1, x1, y1, x2, y2);\n\t\tOS.SelectObject(handle, oldBrush);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 14,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tRECT rect = new RECT();\n\tOS.SetRect(rect, x, y, x + width, y + height);\n\tOS.DrawFocusRect(handle, rect);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tRECT rect = new RECT();\n\tOS.SetRect(rect, x, y, x + width, y + height);\n\tOS.DrawFocusRect(handle, rect);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tRECT rect = new RECT();\n\tOS.SetRect(rect, x, y, x + width, y + height);\n\tOS.DrawFocusRect(handle, rect);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 15,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, 0, 0, -1, -1, x, y, -1, -1, true);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 16,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (srcWidth == 0 || srcHeight == 0 || destWidth == 0 || destHeight == 0) return;\n\tif (srcX < 0 || srcY < 0 || srcWidth < 0 || srcHeight < 0 || destWidth < 0 || destHeight < 0) {\n\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tif (image == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (image.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tdrawImage(image, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, false);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 25,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawLine(gdipGraphics, data.gdipPen, x1, y1, x2, y2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tif (OS.IsWinCE) {\n\t\tint [] points = new int [] {x1, y1, x2, y2};\n\t\tOS.Polyline (handle, points, points.length / 2);\n\t} else {\n\t\tOS.MoveToEx (handle, x1, y1, 0);\n\t\tOS.LineTo (handle, x2, y2);\n\t}\n\tif (data.lineWidth <= 1) {\n\t\tOS.SetPixel (handle, x2, y2, OS.GetTextColor (handle));\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawLine(gdipGraphics, data.gdipPen, x1, y1, x2, y2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tif (OS.IsWinCE) {\n\t\tint [] points = new int [] {x1, y1, x2, y2};\n\t\tOS.Polyline (handle, points, points.length / 2);\n\t} else {\n\t\tOS.MoveToEx (handle, x1, y1, 0);\n\t\tOS.LineTo (handle, x2, y2);\n\t}\n\tif (data.lineWidth <= 1) {\n\t\tOS.SetPixel (handle, x2, y2, OS.GetTextColor (handle));\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawLine(gdipGraphics, data.gdipPen, x1, y1, x2, y2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tif (OS.IsWinCE) {\n\t\tint [] points = new int [] {x1, y1, x2, y2};\n\t\tOS.Polyline (handle, points, points.length / 2);\n\t} else {\n\t\tOS.MoveToEx (handle, x1, y1, 0);\n\t\tOS.LineTo (handle, x2, y2);\n\t}\n\tif (data.lineWidth <= 1) {\n\t\tOS.SetPixel (handle, x2, y2, OS.GetTextColor (handle));\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 26,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawEllipse(gdipGraphics, data.gdipPen, x, y, width, height);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\t// Check performance impact of always setting null brush. If the user has not\n\t// set the background color, we may not have to do this work?\n\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\tOS.Ellipse(handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject(handle,oldBrush);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawEllipse(gdipGraphics, data.gdipPen, x, y, width, height);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\t// Check performance impact of always setting null brush. If the user has not\n\t// set the background color, we may not have to do this work?\n\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\tOS.Ellipse(handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject(handle,oldBrush);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawEllipse(gdipGraphics, data.gdipPen, x, y, width, height);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\t// Check performance impact of always setting null brush. If the user has not\n\t// set the background color, we may not have to do this work?\n\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\tOS.Ellipse(handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject(handle,oldBrush);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 27,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(true, false);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\tGdip.Graphics_DrawPath(gdipGraphics, data.gdipPen, path.handle);\n\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(true, false);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\tGdip.Graphics_DrawPath(gdipGraphics, data.gdipPen, path.handle);\n\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(true, false);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\tGdip.Graphics_DrawPath(gdipGraphics, data.gdipPen, path.handle);\n\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 28,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tOS.SetPixel (handle, x, y, OS.GetTextColor (handle));\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tOS.SetPixel (handle, x, y, OS.GetTextColor (handle));\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tOS.SetPixel (handle, x, y, OS.GetTextColor (handle));\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 29,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawPolygon(gdipGraphics, data.gdipPen, pointArray, pointArray.length / 2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\tOS.Polygon(handle, pointArray, pointArray.length / 2);\n\tOS.SelectObject(handle, oldBrush);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawPolygon(gdipGraphics, data.gdipPen, pointArray, pointArray.length / 2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\tOS.Polygon(handle, pointArray, pointArray.length / 2);\n\tOS.SelectObject(handle, oldBrush);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawPolygon(gdipGraphics, data.gdipPen, pointArray, pointArray.length / 2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\tOS.Polygon(handle, pointArray, pointArray.length / 2);\n\tOS.SelectObject(handle, oldBrush);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 30,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawLines(gdipGraphics, data.gdipPen, pointArray, pointArray.length / 2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tOS.Polyline(handle, pointArray, pointArray.length / 2);\n\tint length = pointArray.length;\n\tif (length >= 2) {\n\t\tif (data.lineWidth <= 1) {\n\t\t\tOS.SetPixel (handle, pointArray[length - 2], pointArray[length - 1], OS.GetTextColor (handle));\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawLines(gdipGraphics, data.gdipPen, pointArray, pointArray.length / 2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tOS.Polyline(handle, pointArray, pointArray.length / 2);\n\tint length = pointArray.length;\n\tif (length >= 2) {\n\t\tif (data.lineWidth <= 1) {\n\t\t\tOS.SetPixel (handle, pointArray[length - 2], pointArray[length - 1], OS.GetTextColor (handle));\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawLines(gdipGraphics, data.gdipPen, pointArray, pointArray.length / 2);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tOS.Polyline(handle, pointArray, pointArray.length / 2);\n\tint length = pointArray.length;\n\tif (length >= 2) {\n\t\tif (data.lineWidth <= 1) {\n\t\t\tOS.SetPixel (handle, pointArray[length - 2], pointArray[length - 1], OS.GetTextColor (handle));\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 31,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawRectangle(gdipGraphics, data.gdipPen, x, y, width, height);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tint hOld = OS.SelectObject (handle, OS.GetStockObject (OS.NULL_BRUSH));\n\tOS.Rectangle (handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject (handle, hOld);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawRectangle(gdipGraphics, data.gdipPen, x, y, width, height);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tint hOld = OS.SelectObject (handle, OS.GetStockObject (OS.NULL_BRUSH));\n\tOS.Rectangle (handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject (handle, hOld);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);\n\t\tGdip.Graphics_DrawRectangle(gdipGraphics, data.gdipPen, x, y, width, height);\n\t\tif (data.lineWidth == 0 || (data.lineWidth % 2) == 1) Gdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);\n\t\treturn;\n\t}\n\tint hOld = OS.SelectObject (handle, OS.GetStockObject (OS.NULL_BRUSH));\n\tOS.Rectangle (handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject (handle, hOld);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 33,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tdrawRoundRectangleGdip(data.gdipGraphics, data.gdipPen, x, y, width, height, arcWidth, arcHeight);\n\t\treturn;\n\t}\n\tif (OS.IsWinCE) {\n\t\t/* \n\t\t* Bug in WinCE PPC.  On certain devices, RoundRect does not draw\n\t\t* all the pixels.  The workaround is to draw a round rectangle\n\t\t* using lines and arcs.\n\t\t*/\n\t\tif (width == 0 || height == 0) return;\t\t\t\t\t\t\t\t\t\n\t\tif (arcWidth == 0 || arcHeight == 0) {\n\t\t\tdrawRectangle(x, y, width, height);\n\t\t\treturn;\n\t\t}\n\t\tif (width < 0) {\n\t\t\tx += width;\n\t\t\twidth = -width;\n\t\t}\n\t\tif (height < 0) {\n\t\t\ty += height;\n\t\t\theight = -height;\n\t\t}\n\t\tif (arcWidth < 0) arcWidth = -arcWidth;\n\t\tif (arcHeight < 0) arcHeight = -arcHeight;\n\t\tif (arcWidth > width) arcWidth = width;\n\t\tif (arcHeight > height) arcHeight = height;\n\t\t\t\t\n\t\tif (arcWidth < width) {\n\t\t\tdrawLine(x+arcWidth/2, y, x+width-arcWidth/2, y);\n\t\t\tdrawLine(x+arcWidth/2, y+height, x+width-arcWidth/2, y+height);\n\t\t}\n\t\tif (arcHeight < height) {\n\t\t\tdrawLine(x, y+arcHeight/2, x, y+height-arcHeight/2);\n\t\t\tdrawLine(x+width, y+arcHeight/2, x+width, y+height-arcHeight/2);\n\t\t}\t\t\t\n\t\tif (arcWidth != 0 && arcHeight != 0) {\n\t\t\tdrawArc(x, y, arcWidth, arcHeight, 90, 90);\t\t\t\t\n\t\t\tdrawArc(x+width-arcWidth, y, arcWidth, arcHeight, 0, 90);\n\t\t\tdrawArc(x+width-arcWidth, y+height-arcHeight, arcWidth, arcHeight, 0, -90);\n\t\t\tdrawArc(x, y+height-arcHeight, arcWidth, arcHeight, 180, 90);\n\t\t} \n\t} else {\n\t\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\t\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\t\tOS.RoundRect(handle, x,y,x+width+1,y+height+1, arcWidth, arcHeight);\n\t\tOS.SelectObject(handle,oldBrush);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tdrawRoundRectangleGdip(data.gdipGraphics, data.gdipPen, x, y, width, height, arcWidth, arcHeight);\n\t\treturn;\n\t}\n\tif (OS.IsWinCE) {\n\t\t/* \n\t\t* Bug in WinCE PPC.  On certain devices, RoundRect does not draw\n\t\t* all the pixels.  The workaround is to draw a round rectangle\n\t\t* using lines and arcs.\n\t\t*/\n\t\tif (width == 0 || height == 0) return;\t\t\t\t\t\t\t\t\t\n\t\tif (arcWidth == 0 || arcHeight == 0) {\n\t\t\tdrawRectangle(x, y, width, height);\n\t\t\treturn;\n\t\t}\n\t\tif (width < 0) {\n\t\t\tx += width;\n\t\t\twidth = -width;\n\t\t}\n\t\tif (height < 0) {\n\t\t\ty += height;\n\t\t\theight = -height;\n\t\t}\n\t\tif (arcWidth < 0) arcWidth = -arcWidth;\n\t\tif (arcHeight < 0) arcHeight = -arcHeight;\n\t\tif (arcWidth > width) arcWidth = width;\n\t\tif (arcHeight > height) arcHeight = height;\n\t\t\t\t\n\t\tif (arcWidth < width) {\n\t\t\tdrawLine(x+arcWidth/2, y, x+width-arcWidth/2, y);\n\t\t\tdrawLine(x+arcWidth/2, y+height, x+width-arcWidth/2, y+height);\n\t\t}\n\t\tif (arcHeight < height) {\n\t\t\tdrawLine(x, y+arcHeight/2, x, y+height-arcHeight/2);\n\t\t\tdrawLine(x+width, y+arcHeight/2, x+width, y+height-arcHeight/2);\n\t\t}\t\t\t\n\t\tif (arcWidth != 0 && arcHeight != 0) {\n\t\t\tdrawArc(x, y, arcWidth, arcHeight, 90, 90);\t\t\t\t\n\t\t\tdrawArc(x+width-arcWidth, y, arcWidth, arcHeight, 0, 90);\n\t\t\tdrawArc(x+width-arcWidth, y+height-arcHeight, arcWidth, arcHeight, 0, -90);\n\t\t\tdrawArc(x, y+height-arcHeight, arcWidth, arcHeight, 180, 90);\n\t\t} \n\t} else {\n\t\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\t\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\t\tOS.RoundRect(handle, x,y,x+width+1,y+height+1, arcWidth, arcHeight);\n\t\tOS.SelectObject(handle,oldBrush);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, false);\n\t\tdrawRoundRectangleGdip(data.gdipGraphics, data.gdipPen, x, y, width, height, arcWidth, arcHeight);\n\t\treturn;\n\t}\n\tif (OS.IsWinCE) {\n\t\t/* \n\t\t* Bug in WinCE PPC.  On certain devices, RoundRect does not draw\n\t\t* all the pixels.  The workaround is to draw a round rectangle\n\t\t* using lines and arcs.\n\t\t*/\n\t\tif (width == 0 || height == 0) return;\t\t\t\t\t\t\t\t\t\n\t\tif (arcWidth == 0 || arcHeight == 0) {\n\t\t\tdrawRectangle(x, y, width, height);\n\t\t\treturn;\n\t\t}\n\t\tif (width < 0) {\n\t\t\tx += width;\n\t\t\twidth = -width;\n\t\t}\n\t\tif (height < 0) {\n\t\t\ty += height;\n\t\t\theight = -height;\n\t\t}\n\t\tif (arcWidth < 0) arcWidth = -arcWidth;\n\t\tif (arcHeight < 0) arcHeight = -arcHeight;\n\t\tif (arcWidth > width) arcWidth = width;\n\t\tif (arcHeight > height) arcHeight = height;\n\t\t\t\t\n\t\tif (arcWidth < width) {\n\t\t\tdrawLine(x+arcWidth/2, y, x+width-arcWidth/2, y);\n\t\t\tdrawLine(x+arcWidth/2, y+height, x+width-arcWidth/2, y+height);\n\t\t}\n\t\tif (arcHeight < height) {\n\t\t\tdrawLine(x, y+arcHeight/2, x, y+height-arcHeight/2);\n\t\t\tdrawLine(x+width, y+arcHeight/2, x+width, y+height-arcHeight/2);\n\t\t}\t\t\t\n\t\tif (arcWidth != 0 && arcHeight != 0) {\n\t\t\tdrawArc(x, y, arcWidth, arcHeight, 90, 90);\t\t\t\t\n\t\t\tdrawArc(x+width-arcWidth, y, arcWidth, arcHeight, 0, 90);\n\t\t\tdrawArc(x+width-arcWidth, y+height-arcHeight, arcWidth, arcHeight, 0, -90);\n\t\t\tdrawArc(x, y+height-arcHeight, arcWidth, arcHeight, 180, 90);\n\t\t} \n\t} else {\n\t\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\n\t\tint oldBrush = OS.SelectObject(handle, nullBrush);\n\t\tOS.RoundRect(handle, x,y,x+width+1,y+height+1, arcWidth, arcHeight);\n\t\tOS.SelectObject(handle,oldBrush);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 36,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n//\tTCHAR buffer = new TCHAR (getCodePage(), string, false);\n\tint length = string.length();\n\tif (length == 0) return;\n\tchar[] buffer = new char [length];\n\tstring.getChars(0, length, buffer, 0);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, !isTransparent);\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tpt.X = x;\n\t\tpt.Y = y;\n\t\tint brush = Gdip.Pen_GetBrush(data.gdipPen);\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tif (!isTransparent) {\n\t\t\tRectF bounds = new RectF();\n\t\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, length, font, pt, format, bounds);\n\t\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, (int)bounds.X, (int)bounds.Y, Math.round(bounds.Width), Math.round(bounds.Height));\n\t\t}\n\t\tGdip.Graphics_DrawString(data.gdipGraphics, buffer, length, font, pt, format, brush);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint oldBkMode = OS.SetBkMode(handle, isTransparent ? OS.TRANSPARENT : OS.OPAQUE);\n\tif (rop2 != OS.R2_XORPEN) {\n\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);\n\t} else {\n\t\tint foreground = OS.GetTextColor(handle);\n\t\tif (isTransparent) {\n\t\t\tSIZE size = new SIZE();\n\t\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);\n\t\t\tint width = size.cx, height = size.cy;\n\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);\n\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tint memDC = OS.CreateCompatibleDC(handle);\n\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);\n\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);\n\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);\n\t\t\tOS.SetTextColor(memDC, foreground);\n\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));\n\t\t\tOS.ExtTextOutW(memDC, 0, 0, 0, null, buffer, length, null);\n\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);\n\t\t\tOS.SelectObject(memDC, hOldBitmap);\n\t\t\tOS.DeleteDC(memDC);\n\t\t\tOS.DeleteObject(hBitmap);\n\t\t} else {\n\t\t\tint background = OS.GetBkColor(handle);\n\t\t\tOS.SetTextColor(handle, foreground ^ background);\n\t\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);\n\t\t\tOS.SetTextColor(handle, foreground);\n\t\t}\n\t}\n\tOS.SetBkMode(handle, oldBkMode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n//\tTCHAR buffer = new TCHAR (getCodePage(), string, false);\n\tint length = string.length();\n\tif (length == 0) return;\n\tchar[] buffer = new char [length];\n\tstring.getChars(0, length, buffer, 0);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, !isTransparent);\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tpt.X = x;\n\t\tpt.Y = y;\n\t\tint brush = Gdip.Pen_GetBrush(data.gdipPen);\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tif (!isTransparent) {\n\t\t\tRectF bounds = new RectF();\n\t\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, length, font, pt, format, bounds);\n\t\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, (int)bounds.X, (int)bounds.Y, Math.round(bounds.Width), Math.round(bounds.Height));\n\t\t}\n\t\tGdip.Graphics_DrawString(data.gdipGraphics, buffer, length, font, pt, format, brush);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint oldBkMode = OS.SetBkMode(handle, isTransparent ? OS.TRANSPARENT : OS.OPAQUE);\n\tif (rop2 != OS.R2_XORPEN) {\n\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);\n\t} else {\n\t\tint foreground = OS.GetTextColor(handle);\n\t\tif (isTransparent) {\n\t\t\tSIZE size = new SIZE();\n\t\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);\n\t\t\tint width = size.cx, height = size.cy;\n\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);\n\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tint memDC = OS.CreateCompatibleDC(handle);\n\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);\n\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);\n\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);\n\t\t\tOS.SetTextColor(memDC, foreground);\n\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));\n\t\t\tOS.ExtTextOutW(memDC, 0, 0, 0, null, buffer, length, null);\n\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);\n\t\t\tOS.SelectObject(memDC, hOldBitmap);\n\t\t\tOS.DeleteDC(memDC);\n\t\t\tOS.DeleteObject(hBitmap);\n\t\t} else {\n\t\t\tint background = OS.GetBkColor(handle);\n\t\t\tOS.SetTextColor(handle, foreground ^ background);\n\t\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);\n\t\t\tOS.SetTextColor(handle, foreground);\n\t\t}\n\t}\n\tOS.SetBkMode(handle, oldBkMode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n//\tTCHAR buffer = new TCHAR (getCodePage(), string, false);\n\tint length = string.length();\n\tif (length == 0) return;\n\tchar[] buffer = new char [length];\n\tstring.getChars(0, length, buffer, 0);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, !isTransparent);\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tpt.X = x;\n\t\tpt.Y = y;\n\t\tint brush = Gdip.Pen_GetBrush(data.gdipPen);\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tif (!isTransparent) {\n\t\t\tRectF bounds = new RectF();\n\t\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, length, font, pt, format, bounds);\n\t\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, (int)bounds.X, (int)bounds.Y, Math.round(bounds.Width), Math.round(bounds.Height));\n\t\t}\n\t\tGdip.Graphics_DrawString(data.gdipGraphics, buffer, length, font, pt, format, brush);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint oldBkMode = OS.SetBkMode(handle, isTransparent ? OS.TRANSPARENT : OS.OPAQUE);\n\tif (rop2 != OS.R2_XORPEN) {\n\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);\n\t} else {\n\t\tint foreground = OS.GetTextColor(handle);\n\t\tif (isTransparent) {\n\t\t\tSIZE size = new SIZE();\n\t\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);\n\t\t\tint width = size.cx, height = size.cy;\n\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);\n\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tint memDC = OS.CreateCompatibleDC(handle);\n\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);\n\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);\n\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);\n\t\t\tOS.SetTextColor(memDC, foreground);\n\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));\n\t\t\tOS.ExtTextOutW(memDC, 0, 0, 0, null, buffer, length, null);\n\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);\n\t\t\tOS.SelectObject(memDC, hOldBitmap);\n\t\t\tOS.DeleteDC(memDC);\n\t\t\tOS.DeleteObject(hBitmap);\n\t\t} else {\n\t\t\tint background = OS.GetBkColor(handle);\n\t\t\tOS.SetTextColor(handle, foreground ^ background);\n\t\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);\n\t\t\tOS.SetTextColor(handle, foreground);\n\t\t}\n\t}\n\tOS.SetBkMode(handle, oldBkMode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 39,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, (flags & SWT.DRAW_TRANSPARENT) == 0);\n\t\tint length = string.length();\n\t\tchar[] buffer = new char [length];\n\t\tstring.getChars(0, length, buffer, 0);\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tpt.X = x;\n\t\tpt.Y = y;\n\t\tint brush = Gdip.Pen_GetBrush(data.gdipPen);\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];\n\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); \n\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {\n\t\t\tRectF bounds = new RectF();\n\t\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, length, font, pt, format, bounds);\n\t\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, (int)bounds.X, (int)bounds.Y, Math.round(bounds.Width), Math.round(bounds.Height));\n\t\t}\n\t\tGdip.Graphics_DrawString(data.gdipGraphics, buffer, length, font, pt, format, brush);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn;\n\t}\n\tTCHAR buffer = new TCHAR(getCodePage(), string, false);\n\tint length = buffer.length();\n\tif (length == 0) return;\n\tRECT rect = new RECT();\n\t/*\n\t* Feature in Windows.  For some reason DrawText(), the maximum\n    * value for the bottom and right coordinates for the RECT that\n    * is used to position the text is different on between Windows\n    * versions.  If this value is larger than the maximum, nothing\n\t* is drawn.  On Windows 98, the limit is 0x7FFF.  On Windows CE,\n\t* NT, and 2000 it is 0x6FFFFFF. And on XP, it is 0x7FFFFFFF.\n\t* The fix is to use the the smaller limit for Windows 98 and the\n\t* larger limit on the other Windows platforms. \n\t*/\n\tint limit = OS.IsWin95 ? 0x7FFF : 0x6FFFFFF;\n\tOS.SetRect(rect, x, y, limit, limit);\n\tint uFormat = OS.DT_LEFT;\n\tif ((flags & SWT.DRAW_DELIMITER) == 0) uFormat |= OS.DT_SINGLELINE;\n\tif ((flags & SWT.DRAW_TAB) != 0) uFormat |= OS.DT_EXPANDTABS;\n\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint oldBkMode = OS.SetBkMode(handle, (flags & SWT.DRAW_TRANSPARENT) != 0 ? OS.TRANSPARENT : OS.OPAQUE);\n\tif (rop2 != OS.R2_XORPEN) {\n\t\tOS.DrawText(handle, buffer, length, rect, uFormat);\n\t} else {\n\t\tint foreground = OS.GetTextColor(handle);\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) != 0) {\n\t\t\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat | OS.DT_CALCRECT);\n\t\t\tint width = rect.right - rect.left;\n\t\t\tint height = rect.bottom - rect.top;\n\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);\n\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tint memDC = OS.CreateCompatibleDC(handle);\n\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);\n\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);\n\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);\n\t\t\tOS.SetTextColor(memDC, foreground);\n\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));\n\t\t\tOS.SetRect(rect, 0, 0, 0x7FFF, 0x7FFF);\n\t\t\tOS.DrawText(memDC, buffer, length, rect, uFormat);\n\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);\n\t\t\tOS.SelectObject(memDC, hOldBitmap);\n\t\t\tOS.DeleteDC(memDC);\n\t\t\tOS.DeleteObject(hBitmap);\n\t\t} else {\n\t\t\tint background = OS.GetBkColor(handle);\n\t\t\tOS.SetTextColor(handle, foreground ^ background);\n\t\t\tOS.DrawText(handle, buffer, length, rect, uFormat);\n\t\t\tOS.SetTextColor(handle, foreground);\n\t\t}\n\t}\n\tOS.SetBkMode(handle, oldBkMode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, (flags & SWT.DRAW_TRANSPARENT) == 0);\n\t\tint length = string.length();\n\t\tchar[] buffer = new char [length];\n\t\tstring.getChars(0, length, buffer, 0);\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tpt.X = x;\n\t\tpt.Y = y;\n\t\tint brush = Gdip.Pen_GetBrush(data.gdipPen);\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];\n\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); \n\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {\n\t\t\tRectF bounds = new RectF();\n\t\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, length, font, pt, format, bounds);\n\t\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, (int)bounds.X, (int)bounds.Y, Math.round(bounds.Width), Math.round(bounds.Height));\n\t\t}\n\t\tGdip.Graphics_DrawString(data.gdipGraphics, buffer, length, font, pt, format, brush);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn;\n\t}\n\tTCHAR buffer = new TCHAR(getCodePage(), string, false);\n\tint length = buffer.length();\n\tif (length == 0) return;\n\tRECT rect = new RECT();\n\t/*\n\t* Feature in Windows.  For some reason DrawText(), the maximum\n    * value for the bottom and right coordinates for the RECT that\n    * is used to position the text is different on between Windows\n    * versions.  If this value is larger than the maximum, nothing\n\t* is drawn.  On Windows 98, the limit is 0x7FFF.  On Windows CE,\n\t* NT, and 2000 it is 0x6FFFFFF. And on XP, it is 0x7FFFFFFF.\n\t* The fix is to use the the smaller limit for Windows 98 and the\n\t* larger limit on the other Windows platforms. \n\t*/\n\tint limit = OS.IsWin95 ? 0x7FFF : 0x6FFFFFF;\n\tOS.SetRect(rect, x, y, limit, limit);\n\tint uFormat = OS.DT_LEFT;\n\tif ((flags & SWT.DRAW_DELIMITER) == 0) uFormat |= OS.DT_SINGLELINE;\n\tif ((flags & SWT.DRAW_TAB) != 0) uFormat |= OS.DT_EXPANDTABS;\n\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint oldBkMode = OS.SetBkMode(handle, (flags & SWT.DRAW_TRANSPARENT) != 0 ? OS.TRANSPARENT : OS.OPAQUE);\n\tif (rop2 != OS.R2_XORPEN) {\n\t\tOS.DrawText(handle, buffer, length, rect, uFormat);\n\t} else {\n\t\tint foreground = OS.GetTextColor(handle);\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) != 0) {\n\t\t\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat | OS.DT_CALCRECT);\n\t\t\tint width = rect.right - rect.left;\n\t\t\tint height = rect.bottom - rect.top;\n\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);\n\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tint memDC = OS.CreateCompatibleDC(handle);\n\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);\n\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);\n\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);\n\t\t\tOS.SetTextColor(memDC, foreground);\n\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));\n\t\t\tOS.SetRect(rect, 0, 0, 0x7FFF, 0x7FFF);\n\t\t\tOS.DrawText(memDC, buffer, length, rect, uFormat);\n\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);\n\t\t\tOS.SelectObject(memDC, hOldBitmap);\n\t\t\tOS.DeleteDC(memDC);\n\t\t\tOS.DeleteObject(hBitmap);\n\t\t} else {\n\t\t\tint background = OS.GetBkColor(handle);\n\t\t\tOS.SetTextColor(handle, foreground ^ background);\n\t\t\tOS.DrawText(handle, buffer, length, rect, uFormat);\n\t\t\tOS.SetTextColor(handle, foreground);\n\t\t}\n\t}\n\tOS.SetBkMode(handle, oldBkMode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (string.length() == 0) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(true, (flags & SWT.DRAW_TRANSPARENT) == 0);\n\t\tint length = string.length();\n\t\tchar[] buffer = new char [length];\n\t\tstring.getChars(0, length, buffer, 0);\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tpt.X = x;\n\t\tpt.Y = y;\n\t\tint brush = Gdip.Pen_GetBrush(data.gdipPen);\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];\n\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); \n\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {\n\t\t\tRectF bounds = new RectF();\n\t\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, length, font, pt, format, bounds);\n\t\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, (int)bounds.X, (int)bounds.Y, Math.round(bounds.Width), Math.round(bounds.Height));\n\t\t}\n\t\tGdip.Graphics_DrawString(data.gdipGraphics, buffer, length, font, pt, format, brush);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn;\n\t}\n\tTCHAR buffer = new TCHAR(getCodePage(), string, false);\n\tint length = buffer.length();\n\tif (length == 0) return;\n\tRECT rect = new RECT();\n\t/*\n\t* Feature in Windows.  For some reason DrawText(), the maximum\n    * value for the bottom and right coordinates for the RECT that\n    * is used to position the text is different on between Windows\n    * versions.  If this value is larger than the maximum, nothing\n\t* is drawn.  On Windows 98, the limit is 0x7FFF.  On Windows CE,\n\t* NT, and 2000 it is 0x6FFFFFF. And on XP, it is 0x7FFFFFFF.\n\t* The fix is to use the the smaller limit for Windows 98 and the\n\t* larger limit on the other Windows platforms. \n\t*/\n\tint limit = OS.IsWin95 ? 0x7FFF : 0x6FFFFFF;\n\tOS.SetRect(rect, x, y, limit, limit);\n\tint uFormat = OS.DT_LEFT;\n\tif ((flags & SWT.DRAW_DELIMITER) == 0) uFormat |= OS.DT_SINGLELINE;\n\tif ((flags & SWT.DRAW_TAB) != 0) uFormat |= OS.DT_EXPANDTABS;\n\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint oldBkMode = OS.SetBkMode(handle, (flags & SWT.DRAW_TRANSPARENT) != 0 ? OS.TRANSPARENT : OS.OPAQUE);\n\tif (rop2 != OS.R2_XORPEN) {\n\t\tOS.DrawText(handle, buffer, length, rect, uFormat);\n\t} else {\n\t\tint foreground = OS.GetTextColor(handle);\n\t\tif ((flags & SWT.DRAW_TRANSPARENT) != 0) {\n\t\t\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat | OS.DT_CALCRECT);\n\t\t\tint width = rect.right - rect.left;\n\t\t\tint height = rect.bottom - rect.top;\n\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);\n\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\t\tint memDC = OS.CreateCompatibleDC(handle);\n\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);\n\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);\n\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);\n\t\t\tOS.SetTextColor(memDC, foreground);\n\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));\n\t\t\tOS.SetRect(rect, 0, 0, 0x7FFF, 0x7FFF);\n\t\t\tOS.DrawText(memDC, buffer, length, rect, uFormat);\n\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);\n\t\t\tOS.SelectObject(memDC, hOldBitmap);\n\t\t\tOS.DeleteDC(memDC);\n\t\t\tOS.DeleteObject(hBitmap);\n\t\t} else {\n\t\t\tint background = OS.GetBkColor(handle);\n\t\t\tOS.SetTextColor(handle, foreground ^ background);\n\t\t\tOS.DrawText(handle, buffer, length, rect, uFormat);\n\t\t\tOS.SetTextColor(handle, foreground);\n\t\t}\n\t}\n\tOS.SetBkMode(handle, oldBkMode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 41,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillPie(data.gdipGraphics, data.gdipBrush, x, y, width, height, -startAngle, -arcAngle);\n\t\treturn;\n\t}\n\t\n\t/*\n\t* Feature in WinCE.  The function Pie is not present in the\n\t* WinCE SDK.  The fix is to emulate it by using Polygon.\n\t*/\n\tif (OS.IsWinCE) {\n\t\t/* compute arc with a simple linear interpolation */\n\t\tif (arcAngle < 0) {\n\t\t\tstartAngle += arcAngle;\n\t\t\tarcAngle = -arcAngle;\n\t\t}\n\t\tboolean drawSegments = true;\n\t\tif (arcAngle >= 360) {\n\t\t\tarcAngle = 360;\n\t\t\tdrawSegments = false;\n\t\t}\n\t\tint[] points = new int[(arcAngle + 1) * 2 + (drawSegments ? 4 : 0)];\t\t\n\t\tint cteX = 2 * x + width;\n\t\tint cteY = 2 * y + height;\n\t\tint index = (drawSegments ? 2 : 0);\n\t\tfor (int i = 0; i <= arcAngle; i++) {\n\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;\n\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;\n\t\t} \n\t\tif (drawSegments) {\n\t\t\tpoints[0] = points[points.length - 2] = cteX >> 1;\n\t\t\tpoints[1] = points[points.length - 1] = cteY >> 1;\n\t\t}\n\t\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\t\tint oldPen = OS.SelectObject(handle, nullPen);\n\t\tOS.Polygon(handle, points, points.length / 2);\n\t\tOS.SelectObject(handle, oldPen);\t\n\t} else {\n\t \tint x1, y1, x2, y2,tmp;\n\t\tboolean isNegative;\n\t\tif (arcAngle >= 360 || arcAngle <= -360) {\n\t\t\tx1 = x2 = x + width;\n\t\t\ty1 = y2 = y + height / 2;\n\t\t} else {\n\t\t\tisNegative = arcAngle < 0;\n\t\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tif (isNegative) {\n\t\t\t\t// swap angles\n\t\t\t   \ttmp = startAngle;\n\t\t\t\tstartAngle = arcAngle;\n\t\t\t\tarcAngle = tmp;\n\t\t\t}\n\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;\n\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;\n\t\t\t\n\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;\n\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t\t\t\n\t\t}\n\t\n\t\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\t\tint oldPen = OS.SelectObject(handle, nullPen);\n\t\tOS.Pie(handle, x, y, x + width + 1, y + height + 1, x1, y1, x2, y2);\n\t\tOS.SelectObject(handle, oldPen);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillPie(data.gdipGraphics, data.gdipBrush, x, y, width, height, -startAngle, -arcAngle);\n\t\treturn;\n\t}\n\t\n\t/*\n\t* Feature in WinCE.  The function Pie is not present in the\n\t* WinCE SDK.  The fix is to emulate it by using Polygon.\n\t*/\n\tif (OS.IsWinCE) {\n\t\t/* compute arc with a simple linear interpolation */\n\t\tif (arcAngle < 0) {\n\t\t\tstartAngle += arcAngle;\n\t\t\tarcAngle = -arcAngle;\n\t\t}\n\t\tboolean drawSegments = true;\n\t\tif (arcAngle >= 360) {\n\t\t\tarcAngle = 360;\n\t\t\tdrawSegments = false;\n\t\t}\n\t\tint[] points = new int[(arcAngle + 1) * 2 + (drawSegments ? 4 : 0)];\t\t\n\t\tint cteX = 2 * x + width;\n\t\tint cteY = 2 * y + height;\n\t\tint index = (drawSegments ? 2 : 0);\n\t\tfor (int i = 0; i <= arcAngle; i++) {\n\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;\n\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;\n\t\t} \n\t\tif (drawSegments) {\n\t\t\tpoints[0] = points[points.length - 2] = cteX >> 1;\n\t\t\tpoints[1] = points[points.length - 1] = cteY >> 1;\n\t\t}\n\t\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\t\tint oldPen = OS.SelectObject(handle, nullPen);\n\t\tOS.Polygon(handle, points, points.length / 2);\n\t\tOS.SelectObject(handle, oldPen);\t\n\t} else {\n\t \tint x1, y1, x2, y2,tmp;\n\t\tboolean isNegative;\n\t\tif (arcAngle >= 360 || arcAngle <= -360) {\n\t\t\tx1 = x2 = x + width;\n\t\t\ty1 = y2 = y + height / 2;\n\t\t} else {\n\t\t\tisNegative = arcAngle < 0;\n\t\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tif (isNegative) {\n\t\t\t\t// swap angles\n\t\t\t   \ttmp = startAngle;\n\t\t\t\tstartAngle = arcAngle;\n\t\t\t\tarcAngle = tmp;\n\t\t\t}\n\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;\n\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;\n\t\t\t\n\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;\n\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t\t\t\n\t\t}\n\t\n\t\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\t\tint oldPen = OS.SelectObject(handle, nullPen);\n\t\tOS.Pie(handle, x, y, x + width + 1, y + height + 1, x1, y1, x2, y2);\n\t\tOS.SelectObject(handle, oldPen);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width < 0) {\n\t\tx = x + width;\n\t\twidth = -width;\n\t}\n\tif (height < 0) {\n\t\ty = y + height;\n\t\theight = -height;\n\t}\n\tif (width == 0 || height == 0 || arcAngle == 0) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillPie(data.gdipGraphics, data.gdipBrush, x, y, width, height, -startAngle, -arcAngle);\n\t\treturn;\n\t}\n\t\n\t/*\n\t* Feature in WinCE.  The function Pie is not present in the\n\t* WinCE SDK.  The fix is to emulate it by using Polygon.\n\t*/\n\tif (OS.IsWinCE) {\n\t\t/* compute arc with a simple linear interpolation */\n\t\tif (arcAngle < 0) {\n\t\t\tstartAngle += arcAngle;\n\t\t\tarcAngle = -arcAngle;\n\t\t}\n\t\tboolean drawSegments = true;\n\t\tif (arcAngle >= 360) {\n\t\t\tarcAngle = 360;\n\t\t\tdrawSegments = false;\n\t\t}\n\t\tint[] points = new int[(arcAngle + 1) * 2 + (drawSegments ? 4 : 0)];\t\t\n\t\tint cteX = 2 * x + width;\n\t\tint cteY = 2 * y + height;\n\t\tint index = (drawSegments ? 2 : 0);\n\t\tfor (int i = 0; i <= arcAngle; i++) {\n\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;\n\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;\n\t\t} \n\t\tif (drawSegments) {\n\t\t\tpoints[0] = points[points.length - 2] = cteX >> 1;\n\t\t\tpoints[1] = points[points.length - 1] = cteY >> 1;\n\t\t}\n\t\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\t\tint oldPen = OS.SelectObject(handle, nullPen);\n\t\tOS.Polygon(handle, points, points.length / 2);\n\t\tOS.SelectObject(handle, oldPen);\t\n\t} else {\n\t \tint x1, y1, x2, y2,tmp;\n\t\tboolean isNegative;\n\t\tif (arcAngle >= 360 || arcAngle <= -360) {\n\t\t\tx1 = x2 = x + width;\n\t\t\ty1 = y2 = y + height / 2;\n\t\t} else {\n\t\t\tisNegative = arcAngle < 0;\n\t\n\t\t\tarcAngle = arcAngle + startAngle;\n\t\t\tif (isNegative) {\n\t\t\t\t// swap angles\n\t\t\t   \ttmp = startAngle;\n\t\t\t\tstartAngle = arcAngle;\n\t\t\t\tarcAngle = tmp;\n\t\t\t}\n\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;\n\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;\n\t\t\t\n\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;\n\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t\t\t\n\t\t}\n\t\n\t\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\t\tint oldPen = OS.SelectObject(handle, nullPen);\n\t\tOS.Pie(handle, x, y, x + width + 1, y + height + 1, x1, y1, x2, y2);\n\t\tOS.SelectObject(handle, oldPen);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 42,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (width == 0 || height == 0) return;\n\tint fromColor = OS.GetTextColor(handle);\n\tif (fromColor == OS.CLR_INVALID) {\n\t\tfromColor = OS.GetSysColor(OS.COLOR_WINDOWTEXT);\n\t}\n\tint toColor = OS.GetBkColor(handle);\n\tif (toColor == OS.CLR_INVALID) {\n\t\ttoColor = OS.GetSysColor(OS.COLOR_WINDOW);\n\t}\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = fromColor;\n\t\tfromColor = toColor;\n\t\ttoColor = t;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tfinal RGB fromRGB = new RGB(fromColor & 0xff, (fromColor >>> 8) & 0xff, (fromColor >>> 16) & 0xff);\n\tfinal RGB toRGB = new RGB(toColor & 0xff, (toColor >>> 8) & 0xff, (toColor >>> 16) & 0xff);\t\n\tif (fromRGB.red == toRGB.red && fromRGB.green == toRGB.green && fromRGB.blue == toRGB.blue) {\n\t\tint dwRop = rop2 == OS.R2_XORPEN ? OS.PATINVERT : OS.PATCOPY;\n\t\tOS.PatBlt(handle, x, y, width, height, dwRop);\n\t\treturn;\n\t}\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tPointF p1= new PointF(), p2 = new PointF();\n\t\tp1.X = x;\n\t\tp1.Y = y;\n\t\tif (vertical) {\n\t\t\tp2.X = p1.X;\n\t\t\tp2.Y = p1.Y + height;\n\t\t} else {\n\t\t\tp2.X = p1.X + width;\n\t\t\tp2.Y = p1.Y;\n\t\t}\n\t\tint rgb = ((fromColor >> 16) & 0xFF) | (fromColor & 0xFF00) | ((fromColor & 0xFF) << 16);\n\t\tint fromGpColor = Gdip.Color_new(data.alpha << 24 | rgb);\n\t\tif (fromGpColor == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\trgb = ((toColor >> 16) & 0xFF) | (toColor & 0xFF00) | ((toColor & 0xFF) << 16);\n\t\tint toGpColor = Gdip.Color_new(data.alpha << 24 | rgb);\n\t\tif (toGpColor == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tint brush = Gdip.LinearGradientBrush_new(p1, p2, fromGpColor, toGpColor);\n\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, brush, x, y, width, height);\n\t\tGdip.LinearGradientBrush_delete(brush);\n\t\tGdip.Color_delete(fromColor);\n\t\tGdip.Color_delete(toColor);\n\t\treturn;\n\t}\n\t/* Use GradientFill if supported, only on Windows 98, 2000 and newer. */\n\t/* \n\t* Bug in Windows: On Windows 2000 when the device is a printer,\n\t* GradientFill swaps red and blue color components, causing the\n\t* gradient to be printed in the wrong color. On Windows 98 when\n\t* the device is a printer, GradientFill does not fill completely\n\t* to the right edge of the rectangle. The fix is not to use\n\t* GradientFill for printer devices.\n\t*/\n\tif (!OS.IsWinCE && rop2 != OS.R2_XORPEN && OS.GetDeviceCaps(handle, OS.TECHNOLOGY) != OS.DT_RASPRINTER) {\n\t\tfinal int hHeap = OS.GetProcessHeap();\n\t\tfinal int pMesh = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, GRADIENT_RECT.sizeof + TRIVERTEX.sizeof * 2);\n\t\tfinal int pVertex = pMesh + GRADIENT_RECT.sizeof;\n\t\n\t\tGRADIENT_RECT gradientRect = new GRADIENT_RECT();\n\t\tgradientRect.UpperLeft = 0;\n\t\tgradientRect.LowerRight = 1;\n\t\tOS.MoveMemory(pMesh, gradientRect, GRADIENT_RECT.sizeof);\n\t\n\t\tTRIVERTEX trivertex = new TRIVERTEX();\n\t\ttrivertex.x = x;\n\t\ttrivertex.y = y;\n\t\ttrivertex.Red = (short)((fromRGB.red << 8) | fromRGB.red);\n\t\ttrivertex.Green = (short)((fromRGB.green << 8) | fromRGB.green);\n\t\ttrivertex.Blue = (short)((fromRGB.blue << 8) | fromRGB.blue);\n\t\ttrivertex.Alpha = -1;\n\t\tOS.MoveMemory(pVertex, trivertex, TRIVERTEX.sizeof);\n\t\t\n\t\ttrivertex.x = x + width;\n\t\ttrivertex.y = y + height;\n\t\ttrivertex.Red = (short)((toRGB.red << 8) | toRGB.red);\n\t\ttrivertex.Green = (short)((toRGB.green << 8) | toRGB.green);\n\t\ttrivertex.Blue = (short)((toRGB.blue << 8) | toRGB.blue);\n\t\ttrivertex.Alpha = -1;\n\t\tOS.MoveMemory(pVertex + TRIVERTEX.sizeof, trivertex, TRIVERTEX.sizeof);\n\t\n\t\tboolean success = OS.GradientFill(handle, pVertex, 2, pMesh, 1, vertical ? OS.GRADIENT_FILL_RECT_V : OS.GRADIENT_FILL_RECT_H);\n\t\tOS.HeapFree(hHeap, 0, pMesh);\n\t\tif (success) return;\n\t}\n\t\n\tfinal int depth = OS.GetDeviceCaps(handle, OS.BITSPIXEL);\n\tfinal int bitResolution = (depth >= 24) ? 8 : (depth >= 15) ? 5 : 0;\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\tbitResolution, bitResolution, bitResolution);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (width == 0 || height == 0) return;\n\tint fromColor = OS.GetTextColor(handle);\n\tif (fromColor == OS.CLR_INVALID) {\n\t\tfromColor = OS.GetSysColor(OS.COLOR_WINDOWTEXT);\n\t}\n\tint toColor = OS.GetBkColor(handle);\n\tif (toColor == OS.CLR_INVALID) {\n\t\ttoColor = OS.GetSysColor(OS.COLOR_WINDOW);\n\t}\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = fromColor;\n\t\tfromColor = toColor;\n\t\ttoColor = t;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tfinal RGB fromRGB = new RGB(fromColor & 0xff, (fromColor >>> 8) & 0xff, (fromColor >>> 16) & 0xff);\n\tfinal RGB toRGB = new RGB(toColor & 0xff, (toColor >>> 8) & 0xff, (toColor >>> 16) & 0xff);\t\n\tif (fromRGB.red == toRGB.red && fromRGB.green == toRGB.green && fromRGB.blue == toRGB.blue) {\n\t\tint dwRop = rop2 == OS.R2_XORPEN ? OS.PATINVERT : OS.PATCOPY;\n\t\tOS.PatBlt(handle, x, y, width, height, dwRop);\n\t\treturn;\n\t}\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tPointF p1= new PointF(), p2 = new PointF();\n\t\tp1.X = x;\n\t\tp1.Y = y;\n\t\tif (vertical) {\n\t\t\tp2.X = p1.X;\n\t\t\tp2.Y = p1.Y + height;\n\t\t} else {\n\t\t\tp2.X = p1.X + width;\n\t\t\tp2.Y = p1.Y;\n\t\t}\n\t\tint rgb = ((fromColor >> 16) & 0xFF) | (fromColor & 0xFF00) | ((fromColor & 0xFF) << 16);\n\t\tint fromGpColor = Gdip.Color_new(data.alpha << 24 | rgb);\n\t\tif (fromGpColor == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\trgb = ((toColor >> 16) & 0xFF) | (toColor & 0xFF00) | ((toColor & 0xFF) << 16);\n\t\tint toGpColor = Gdip.Color_new(data.alpha << 24 | rgb);\n\t\tif (toGpColor == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tint brush = Gdip.LinearGradientBrush_new(p1, p2, fromGpColor, toGpColor);\n\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, brush, x, y, width, height);\n\t\tGdip.LinearGradientBrush_delete(brush);\n\t\tGdip.Color_delete(fromColor);\n\t\tGdip.Color_delete(toColor);\n\t\treturn;\n\t}\n\t/* Use GradientFill if supported, only on Windows 98, 2000 and newer. */\n\t/* \n\t* Bug in Windows: On Windows 2000 when the device is a printer,\n\t* GradientFill swaps red and blue color components, causing the\n\t* gradient to be printed in the wrong color. On Windows 98 when\n\t* the device is a printer, GradientFill does not fill completely\n\t* to the right edge of the rectangle. The fix is not to use\n\t* GradientFill for printer devices.\n\t*/\n\tif (!OS.IsWinCE && rop2 != OS.R2_XORPEN && OS.GetDeviceCaps(handle, OS.TECHNOLOGY) != OS.DT_RASPRINTER) {\n\t\tfinal int hHeap = OS.GetProcessHeap();\n\t\tfinal int pMesh = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, GRADIENT_RECT.sizeof + TRIVERTEX.sizeof * 2);\n\t\tfinal int pVertex = pMesh + GRADIENT_RECT.sizeof;\n\t\n\t\tGRADIENT_RECT gradientRect = new GRADIENT_RECT();\n\t\tgradientRect.UpperLeft = 0;\n\t\tgradientRect.LowerRight = 1;\n\t\tOS.MoveMemory(pMesh, gradientRect, GRADIENT_RECT.sizeof);\n\t\n\t\tTRIVERTEX trivertex = new TRIVERTEX();\n\t\ttrivertex.x = x;\n\t\ttrivertex.y = y;\n\t\ttrivertex.Red = (short)((fromRGB.red << 8) | fromRGB.red);\n\t\ttrivertex.Green = (short)((fromRGB.green << 8) | fromRGB.green);\n\t\ttrivertex.Blue = (short)((fromRGB.blue << 8) | fromRGB.blue);\n\t\ttrivertex.Alpha = -1;\n\t\tOS.MoveMemory(pVertex, trivertex, TRIVERTEX.sizeof);\n\t\t\n\t\ttrivertex.x = x + width;\n\t\ttrivertex.y = y + height;\n\t\ttrivertex.Red = (short)((toRGB.red << 8) | toRGB.red);\n\t\ttrivertex.Green = (short)((toRGB.green << 8) | toRGB.green);\n\t\ttrivertex.Blue = (short)((toRGB.blue << 8) | toRGB.blue);\n\t\ttrivertex.Alpha = -1;\n\t\tOS.MoveMemory(pVertex + TRIVERTEX.sizeof, trivertex, TRIVERTEX.sizeof);\n\t\n\t\tboolean success = OS.GradientFill(handle, pVertex, 2, pMesh, 1, vertical ? OS.GRADIENT_FILL_RECT_V : OS.GRADIENT_FILL_RECT_H);\n\t\tOS.HeapFree(hHeap, 0, pMesh);\n\t\tif (success) return;\n\t}\n\t\n\tfinal int depth = OS.GetDeviceCaps(handle, OS.BITSPIXEL);\n\tfinal int bitResolution = (depth >= 24) ? 8 : (depth >= 15) ? 5 : 0;\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\tbitResolution, bitResolution, bitResolution);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (width == 0 || height == 0) return;\n\tint fromColor = OS.GetTextColor(handle);\n\tif (fromColor == OS.CLR_INVALID) {\n\t\tfromColor = OS.GetSysColor(OS.COLOR_WINDOWTEXT);\n\t}\n\tint toColor = OS.GetBkColor(handle);\n\tif (toColor == OS.CLR_INVALID) {\n\t\ttoColor = OS.GetSysColor(OS.COLOR_WINDOW);\n\t}\n\tboolean swapColors = false;\n\tif (width < 0) {\n\t\tx += width; width = -width;\n\t\tif (! vertical) swapColors = true;\n\t}\n\tif (height < 0) {\n\t\ty += height; height = -height;\n\t\tif (vertical) swapColors = true;\n\t}\n\tif (swapColors) {\n\t\tfinal int t = fromColor;\n\t\tfromColor = toColor;\n\t\ttoColor = t;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tfinal RGB fromRGB = new RGB(fromColor & 0xff, (fromColor >>> 8) & 0xff, (fromColor >>> 16) & 0xff);\n\tfinal RGB toRGB = new RGB(toColor & 0xff, (toColor >>> 8) & 0xff, (toColor >>> 16) & 0xff);\t\n\tif (fromRGB.red == toRGB.red && fromRGB.green == toRGB.green && fromRGB.blue == toRGB.blue) {\n\t\tint dwRop = rop2 == OS.R2_XORPEN ? OS.PATINVERT : OS.PATCOPY;\n\t\tOS.PatBlt(handle, x, y, width, height, dwRop);\n\t\treturn;\n\t}\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tPointF p1= new PointF(), p2 = new PointF();\n\t\tp1.X = x;\n\t\tp1.Y = y;\n\t\tif (vertical) {\n\t\t\tp2.X = p1.X;\n\t\t\tp2.Y = p1.Y + height;\n\t\t} else {\n\t\t\tp2.X = p1.X + width;\n\t\t\tp2.Y = p1.Y;\n\t\t}\n\t\tint rgb = ((fromColor >> 16) & 0xFF) | (fromColor & 0xFF00) | ((fromColor & 0xFF) << 16);\n\t\tint fromGpColor = Gdip.Color_new(data.alpha << 24 | rgb);\n\t\tif (fromGpColor == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\trgb = ((toColor >> 16) & 0xFF) | (toColor & 0xFF00) | ((toColor & 0xFF) << 16);\n\t\tint toGpColor = Gdip.Color_new(data.alpha << 24 | rgb);\n\t\tif (toGpColor == 0) SWT.error(SWT.ERROR_NO_HANDLES);\n\t\tint brush = Gdip.LinearGradientBrush_new(p1, p2, fromGpColor, toGpColor);\n\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, brush, x, y, width, height);\n\t\tGdip.LinearGradientBrush_delete(brush);\n\t\tGdip.Color_delete(fromColor);\n\t\tGdip.Color_delete(toColor);\n\t\treturn;\n\t}\n\t/* Use GradientFill if supported, only on Windows 98, 2000 and newer. */\n\t/* \n\t* Bug in Windows: On Windows 2000 when the device is a printer,\n\t* GradientFill swaps red and blue color components, causing the\n\t* gradient to be printed in the wrong color. On Windows 98 when\n\t* the device is a printer, GradientFill does not fill completely\n\t* to the right edge of the rectangle. The fix is not to use\n\t* GradientFill for printer devices.\n\t*/\n\tif (!OS.IsWinCE && rop2 != OS.R2_XORPEN && OS.GetDeviceCaps(handle, OS.TECHNOLOGY) != OS.DT_RASPRINTER) {\n\t\tfinal int hHeap = OS.GetProcessHeap();\n\t\tfinal int pMesh = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, GRADIENT_RECT.sizeof + TRIVERTEX.sizeof * 2);\n\t\tfinal int pVertex = pMesh + GRADIENT_RECT.sizeof;\n\t\n\t\tGRADIENT_RECT gradientRect = new GRADIENT_RECT();\n\t\tgradientRect.UpperLeft = 0;\n\t\tgradientRect.LowerRight = 1;\n\t\tOS.MoveMemory(pMesh, gradientRect, GRADIENT_RECT.sizeof);\n\t\n\t\tTRIVERTEX trivertex = new TRIVERTEX();\n\t\ttrivertex.x = x;\n\t\ttrivertex.y = y;\n\t\ttrivertex.Red = (short)((fromRGB.red << 8) | fromRGB.red);\n\t\ttrivertex.Green = (short)((fromRGB.green << 8) | fromRGB.green);\n\t\ttrivertex.Blue = (short)((fromRGB.blue << 8) | fromRGB.blue);\n\t\ttrivertex.Alpha = -1;\n\t\tOS.MoveMemory(pVertex, trivertex, TRIVERTEX.sizeof);\n\t\t\n\t\ttrivertex.x = x + width;\n\t\ttrivertex.y = y + height;\n\t\ttrivertex.Red = (short)((toRGB.red << 8) | toRGB.red);\n\t\ttrivertex.Green = (short)((toRGB.green << 8) | toRGB.green);\n\t\ttrivertex.Blue = (short)((toRGB.blue << 8) | toRGB.blue);\n\t\ttrivertex.Alpha = -1;\n\t\tOS.MoveMemory(pVertex + TRIVERTEX.sizeof, trivertex, TRIVERTEX.sizeof);\n\t\n\t\tboolean success = OS.GradientFill(handle, pVertex, 2, pMesh, 1, vertical ? OS.GRADIENT_FILL_RECT_V : OS.GRADIENT_FILL_RECT_H);\n\t\tOS.HeapFree(hHeap, 0, pMesh);\n\t\tif (success) return;\n\t}\n\t\n\tfinal int depth = OS.GetDeviceCaps(handle, OS.BITSPIXEL);\n\tfinal int bitResolution = (depth >= 24) ? 8 : (depth >= 15) ? 5 : 0;\n\tImageData.fillGradientRectangle(this, data.device,\n\t\tx, y, width, height, vertical, fromRGB, toRGB,\n\t\tbitResolution, bitResolution, bitResolution);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 43,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillEllipse(data.gdipGraphics, data.gdipBrush, x, y, width, height);\n\t\treturn;\n\t}\n\t/* Assumes that user sets the background color. */\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.Ellipse(handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject(handle,oldPen);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillEllipse(data.gdipGraphics, data.gdipBrush, x, y, width, height);\n\t\treturn;\n\t}\n\t/* Assumes that user sets the background color. */\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.Ellipse(handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject(handle,oldPen);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillEllipse(data.gdipGraphics, data.gdipBrush, x, y, width, height);\n\t\treturn;\n\t}\n\t/* Assumes that user sets the background color. */\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.Ellipse(handle, x, y, x + width + 1, y + height + 1);\n\tOS.SelectObject(handle,oldPen);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 44,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, true);\n\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\tGdip.GraphicsPath_SetFillMode(path.handle, mode);\n\tGdip.Graphics_FillPath(data.gdipGraphics, data.gdipBrush, path.handle);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, true);\n\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\tGdip.GraphicsPath_SetFillMode(path.handle, mode);\n\tGdip.Graphics_FillPath(data.gdipGraphics, data.gdipBrush, path.handle);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (path.handle == 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, true);\n\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\tGdip.GraphicsPath_SetFillMode(path.handle, mode);\n\tGdip.Graphics_FillPath(data.gdipGraphics, data.gdipBrush, path.handle);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 45,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\t\tGdip.Graphics_FillPolygon(data.gdipGraphics, data.gdipBrush, pointArray, pointArray.length / 2, mode);\n\t\treturn;\n\t}\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.Polygon(handle, pointArray, pointArray.length / 2);\n\tOS.SelectObject(handle,oldPen);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\t\tGdip.Graphics_FillPolygon(data.gdipGraphics, data.gdipBrush, pointArray, pointArray.length / 2, mode);\n\t\treturn;\n\t}\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.Polygon(handle, pointArray, pointArray.length / 2);\n\tOS.SelectObject(handle,oldPen);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\t\tGdip.Graphics_FillPolygon(data.gdipGraphics, data.gdipBrush, pointArray, pointArray.length / 2, mode);\n\t\treturn;\n\t}\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.Polygon(handle, pointArray, pointArray.length / 2);\n\tOS.SelectObject(handle,oldPen);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 46,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, x, y, width, height);\n\t\treturn;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint dwRop = rop2 == OS.R2_XORPEN ? OS.PATINVERT : OS.PATCOPY;\n\tOS.PatBlt(handle, x, y, width, height, dwRop);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, x, y, width, height);\n\t\treturn;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint dwRop = rop2 == OS.R2_XORPEN ? OS.PATINVERT : OS.PATCOPY;\n\tOS.PatBlt(handle, x, y, width, height, dwRop);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tGdip.Graphics_FillRectangle(data.gdipGraphics, data.gdipBrush, x, y, width, height);\n\t\treturn;\n\t}\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2(handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\tint dwRop = rop2 == OS.R2_XORPEN ? OS.PATINVERT : OS.PATCOPY;\n\tOS.PatBlt(handle, x, y, width, height, dwRop);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 48,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tfillRoundRectangleGdip(data.gdipGraphics, data.gdipBrush, x, y, width, height, arcWidth, arcHeight);\n\t\treturn;\n\t}\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.RoundRect(handle, x,y,x+width+1,y+height+1,arcWidth, arcHeight);\n\tOS.SelectObject(handle,oldPen);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tfillRoundRectangleGdip(data.gdipGraphics, data.gdipBrush, x, y, width, height, arcWidth, arcHeight);\n\t\treturn;\n\t}\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.RoundRect(handle, x,y,x+width+1,y+height+1,arcWidth, arcHeight);\n\tOS.SelectObject(handle,oldPen);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics != 0) {\n\t\tinitGdip(false, true);\n\t\tfillRoundRectangleGdip(data.gdipGraphics, data.gdipBrush, x, y, width, height, arcWidth, arcHeight);\n\t\treturn;\n\t}\n\tint nullPen = OS.GetStockObject(OS.NULL_PEN);\n\tint oldPen = OS.SelectObject(handle, nullPen);\n\tOS.RoundRect(handle, x,y,x+width+1,y+height+1,arcWidth, arcHeight);\n\tOS.SelectObject(handle,oldPen);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 51,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (OS.IsWinCE) {\n\t\tSIZE size = new SIZE();\n\t\tOS.GetTextExtentPoint32W(handle, new char[]{ch}, 1, size);\n\t\treturn size.cx;\n\t}\n\tint tch = ch;\n\tif (ch > 0x7F) {\n\t\tTCHAR buffer = new TCHAR(getCodePage(), ch, false);\n\t\ttch = buffer.tcharAt(0);\n\t}\n\tint[] width = new int[1];\n\tOS.GetCharWidth(handle, tch, tch, width);\n\treturn width[0];\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (OS.IsWinCE) {\n\t\tSIZE size = new SIZE();\n\t\tOS.GetTextExtentPoint32W(handle, new char[]{ch}, 1, size);\n\t\treturn size.cx;\n\t}\n\tint tch = ch;\n\tif (ch > 0x7F) {\n\t\tTCHAR buffer = new TCHAR(getCodePage(), ch, false);\n\t\ttch = buffer.tcharAt(0);\n\t}\n\tint[] width = new int[1];\n\tOS.GetCharWidth(handle, tch, tch, width);\n\treturn width[0];\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (OS.IsWinCE) {\n\t\tSIZE size = new SIZE();\n\t\tOS.GetTextExtentPoint32W(handle, new char[]{ch}, 1, size);\n\t\treturn size.cx;\n\t}\n\tint tch = ch;\n\tif (ch > 0x7F) {\n\t\tTCHAR buffer = new TCHAR(getCodePage(), ch, false);\n\t\ttch = buffer.tcharAt(0);\n\t}\n\tint[] width = new int[1];\n\tOS.GetCharWidth(handle, tch, tch, width);\n\treturn width[0];\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 52,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.gdipGraphics != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.gdipGraphics != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.gdipGraphics != 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 53,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.alpha;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.alpha;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.alpha;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 54,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetSmoothingMode(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.SmoothingModeDefault: return SWT.DEFAULT;\n\t\tcase Gdip.SmoothingModeHighSpeed:\n\t\tcase Gdip.SmoothingModeNone: return SWT.OFF;\n\t\tcase Gdip.SmoothingModeAntiAlias:\n\t\tcase Gdip.SmoothingModeAntiAlias8x8:\n\t\tcase Gdip.SmoothingModeHighQuality: return SWT.ON;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetSmoothingMode(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.SmoothingModeDefault: return SWT.DEFAULT;\n\t\tcase Gdip.SmoothingModeHighSpeed:\n\t\tcase Gdip.SmoothingModeNone: return SWT.OFF;\n\t\tcase Gdip.SmoothingModeAntiAlias:\n\t\tcase Gdip.SmoothingModeAntiAlias8x8:\n\t\tcase Gdip.SmoothingModeHighQuality: return SWT.ON;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetSmoothingMode(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.SmoothingModeDefault: return SWT.DEFAULT;\n\t\tcase Gdip.SmoothingModeHighSpeed:\n\t\tcase Gdip.SmoothingModeNone: return SWT.OFF;\n\t\tcase Gdip.SmoothingModeAntiAlias:\n\t\tcase Gdip.SmoothingModeAntiAlias8x8:\n\t\tcase Gdip.SmoothingModeHighQuality: return SWT.ON;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 55,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint color = OS.GetBkColor(handle);\n\tif (color == OS.CLR_INVALID) {\n\t\tcolor = OS.GetSysColor(OS.COLOR_WINDOW);\n\t}\n\treturn Color.win32_new(data.device, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint color = OS.GetBkColor(handle);\n\tif (color == OS.CLR_INVALID) {\n\t\tcolor = OS.GetSysColor(OS.COLOR_WINDOW);\n\t}\n\treturn Color.win32_new(data.device, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint color = OS.GetBkColor(handle);\n\tif (color == OS.CLR_INVALID) {\n\t\tcolor = OS.GetSysColor(OS.COLOR_WINDOW);\n\t}\n\treturn Color.win32_new(data.device, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 56,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.backgroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 57,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t\n\t/* GetCharABCWidths only succeeds on truetype fonts */\n\tif (!OS.IsWinCE) {\n\t\tint tch = ch;\n\t\tif (ch > 0x7F) {\n\t\t\tTCHAR buffer = new TCHAR(getCodePage(), ch, false);\n\t\t\ttch = buffer.tcharAt (0);\n\t\t}\n\t\tint[] width = new int[3];\n\t\tif (OS.GetCharABCWidths(handle, tch, tch, width)) {\n\t\t\treturn width[1];\n\t\t}\n\t}\n\t\n\t/* It wasn't a truetype font */\n\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();\n\tOS.GetTextMetrics(handle, lptm);\n\tSIZE size = new SIZE();\n\tOS.GetTextExtentPoint32W(handle, new char[]{ch}, 1, size);\n\treturn size.cx - lptm.tmOverhang;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t\n\t/* GetCharABCWidths only succeeds on truetype fonts */\n\tif (!OS.IsWinCE) {\n\t\tint tch = ch;\n\t\tif (ch > 0x7F) {\n\t\t\tTCHAR buffer = new TCHAR(getCodePage(), ch, false);\n\t\t\ttch = buffer.tcharAt (0);\n\t\t}\n\t\tint[] width = new int[3];\n\t\tif (OS.GetCharABCWidths(handle, tch, tch, width)) {\n\t\t\treturn width[1];\n\t\t}\n\t}\n\t\n\t/* It wasn't a truetype font */\n\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();\n\tOS.GetTextMetrics(handle, lptm);\n\tSIZE size = new SIZE();\n\tOS.GetTextExtentPoint32W(handle, new char[]{ch}, 1, size);\n\treturn size.cx - lptm.tmOverhang;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t\n\t/* GetCharABCWidths only succeeds on truetype fonts */\n\tif (!OS.IsWinCE) {\n\t\tint tch = ch;\n\t\tif (ch > 0x7F) {\n\t\t\tTCHAR buffer = new TCHAR(getCodePage(), ch, false);\n\t\t\ttch = buffer.tcharAt (0);\n\t\t}\n\t\tint[] width = new int[3];\n\t\tif (OS.GetCharABCWidths(handle, tch, tch, width)) {\n\t\t\treturn width[1];\n\t\t}\n\t}\n\t\n\t/* It wasn't a truetype font */\n\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();\n\tOS.GetTextMetrics(handle, lptm);\n\tSIZE size = new SIZE();\n\tOS.GetTextExtentPoint32W(handle, new char[]{ch}, 1, size);\n\treturn size.cx - lptm.tmOverhang;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 58,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics != 0) {\n\t\tRect rect = new Rect();\n\t\tGdip.Graphics_GetClipBounds(data.gdipGraphics, rect);\n\t\treturn new Rectangle(rect.X, rect.Y, rect.Width, rect.Height);\n\t}\n\tRECT rect = new RECT();\n\tOS.GetClipBox(handle, rect);\n\treturn new Rectangle(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics != 0) {\n\t\tRect rect = new Rect();\n\t\tGdip.Graphics_GetClipBounds(data.gdipGraphics, rect);\n\t\treturn new Rectangle(rect.X, rect.Y, rect.Width, rect.Height);\n\t}\n\tRECT rect = new RECT();\n\tOS.GetClipBox(handle, rect);\n\treturn new Rectangle(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics != 0) {\n\t\tRect rect = new Rect();\n\t\tGdip.Graphics_GetClipBounds(data.gdipGraphics, rect);\n\t\treturn new Rectangle(rect.X, rect.Y, rect.Width, rect.Height);\n\t}\n\tRECT rect = new RECT();\n\tOS.GetClipBox(handle, rect);\n\treturn new Rectangle(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 59,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tint rgn = Gdip.Region_new();\n\t\tGdip.Graphics_GetClip(data.gdipGraphics, rgn);\n\t\tint matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tGdip.Graphics_GetTransform(data.gdipGraphics, matrix);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);\n\t\tint hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, matrix);\n\t\tGdip.Matrix_delete(identity);\n\t\tGdip.Matrix_delete(matrix);\n\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);\n\t\tGdip.Region_delete(rgn);\n\t\treturn;\n\t}\n\tint result = OS.GetClipRgn (handle, region.handle);\n\tif (result != 1) {\n\t\tRECT rect = new RECT();\n\t\tOS.GetClipBox(handle, rect);\n\t\tOS.SetRectRgn(region.handle, rect.left, rect.top, rect.right, rect.bottom);\n\t}\n\tif (!OS.IsWinCE) {\n\t\tint metaRgn = OS.CreateRectRgn (0, 0, 0, 0);\n\t\tif (OS.GetMetaRgn (handle, metaRgn) != 0) {\n\t\t\tPOINT pt = new POINT ();\n\t\t\tOS.GetWindowOrgEx (handle, pt);\n\t\t\tOS.OffsetRgn (metaRgn, pt.x, pt.y);\n\t\t\tOS.CombineRgn (region.handle, metaRgn, region.handle, OS.RGN_AND);\n\t\t}\n\t\tOS.DeleteObject(metaRgn);\n\t\tint flags = 0;\n\t\tif (OS.WIN32_VERSION >= OS.VERSION(4, 10)) {\n\t\t\tflags =  OS.GetLayout(handle);\n\t\t}\n\t\tint hwnd = data.hwnd;\n\t\tif (hwnd != 0 && data.ps != null && (flags & OS.LAYOUT_RTL) == 0) {\n\t\t\tint sysRgn = OS.CreateRectRgn (0, 0, 0, 0);\n\t\t\tif (OS.GetRandomRgn (handle, sysRgn, OS.SYSRGN) == 1) {\n\t\t\t\tif (OS.IsWinNT) {\n\t\t\t\t\tPOINT pt = new POINT();\n\t\t\t\t\tOS.MapWindowPoints(0, hwnd, pt, 1);\n\t\t\t\t\tOS.OffsetRgn(sysRgn, pt.x, pt.y);\n\t\t\t\t}\n\t\t\t\tOS.CombineRgn (region.handle, sysRgn, region.handle, OS.RGN_AND);\n\t\t\t}\n\t\t\tOS.DeleteObject(sysRgn);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tint rgn = Gdip.Region_new();\n\t\tGdip.Graphics_GetClip(data.gdipGraphics, rgn);\n\t\tint matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tGdip.Graphics_GetTransform(data.gdipGraphics, matrix);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);\n\t\tint hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, matrix);\n\t\tGdip.Matrix_delete(identity);\n\t\tGdip.Matrix_delete(matrix);\n\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);\n\t\tGdip.Region_delete(rgn);\n\t\treturn;\n\t}\n\tint result = OS.GetClipRgn (handle, region.handle);\n\tif (result != 1) {\n\t\tRECT rect = new RECT();\n\t\tOS.GetClipBox(handle, rect);\n\t\tOS.SetRectRgn(region.handle, rect.left, rect.top, rect.right, rect.bottom);\n\t}\n\tif (!OS.IsWinCE) {\n\t\tint metaRgn = OS.CreateRectRgn (0, 0, 0, 0);\n\t\tif (OS.GetMetaRgn (handle, metaRgn) != 0) {\n\t\t\tPOINT pt = new POINT ();\n\t\t\tOS.GetWindowOrgEx (handle, pt);\n\t\t\tOS.OffsetRgn (metaRgn, pt.x, pt.y);\n\t\t\tOS.CombineRgn (region.handle, metaRgn, region.handle, OS.RGN_AND);\n\t\t}\n\t\tOS.DeleteObject(metaRgn);\n\t\tint flags = 0;\n\t\tif (OS.WIN32_VERSION >= OS.VERSION(4, 10)) {\n\t\t\tflags =  OS.GetLayout(handle);\n\t\t}\n\t\tint hwnd = data.hwnd;\n\t\tif (hwnd != 0 && data.ps != null && (flags & OS.LAYOUT_RTL) == 0) {\n\t\t\tint sysRgn = OS.CreateRectRgn (0, 0, 0, 0);\n\t\t\tif (OS.GetRandomRgn (handle, sysRgn, OS.SYSRGN) == 1) {\n\t\t\t\tif (OS.IsWinNT) {\n\t\t\t\t\tPOINT pt = new POINT();\n\t\t\t\t\tOS.MapWindowPoints(0, hwnd, pt, 1);\n\t\t\t\t\tOS.OffsetRgn(sysRgn, pt.x, pt.y);\n\t\t\t\t}\n\t\t\t\tOS.CombineRgn (region.handle, sysRgn, region.handle, OS.RGN_AND);\n\t\t\t}\n\t\t\tOS.DeleteObject(sysRgn);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (region.isDisposed()) SWT.error (SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tint rgn = Gdip.Region_new();\n\t\tGdip.Graphics_GetClip(data.gdipGraphics, rgn);\n\t\tint matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tGdip.Graphics_GetTransform(data.gdipGraphics, matrix);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);\n\t\tint hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, matrix);\n\t\tGdip.Matrix_delete(identity);\n\t\tGdip.Matrix_delete(matrix);\n\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);\n\t\tGdip.Region_delete(rgn);\n\t\treturn;\n\t}\n\tint result = OS.GetClipRgn (handle, region.handle);\n\tif (result != 1) {\n\t\tRECT rect = new RECT();\n\t\tOS.GetClipBox(handle, rect);\n\t\tOS.SetRectRgn(region.handle, rect.left, rect.top, rect.right, rect.bottom);\n\t}\n\tif (!OS.IsWinCE) {\n\t\tint metaRgn = OS.CreateRectRgn (0, 0, 0, 0);\n\t\tif (OS.GetMetaRgn (handle, metaRgn) != 0) {\n\t\t\tPOINT pt = new POINT ();\n\t\t\tOS.GetWindowOrgEx (handle, pt);\n\t\t\tOS.OffsetRgn (metaRgn, pt.x, pt.y);\n\t\t\tOS.CombineRgn (region.handle, metaRgn, region.handle, OS.RGN_AND);\n\t\t}\n\t\tOS.DeleteObject(metaRgn);\n\t\tint flags = 0;\n\t\tif (OS.WIN32_VERSION >= OS.VERSION(4, 10)) {\n\t\t\tflags =  OS.GetLayout(handle);\n\t\t}\n\t\tint hwnd = data.hwnd;\n\t\tif (hwnd != 0 && data.ps != null && (flags & OS.LAYOUT_RTL) == 0) {\n\t\t\tint sysRgn = OS.CreateRectRgn (0, 0, 0, 0);\n\t\t\tif (OS.GetRandomRgn (handle, sysRgn, OS.SYSRGN) == 1) {\n\t\t\t\tif (OS.IsWinNT) {\n\t\t\t\t\tPOINT pt = new POINT();\n\t\t\t\t\tOS.MapWindowPoints(0, hwnd, pt, 1);\n\t\t\t\t\tOS.OffsetRgn(sysRgn, pt.x, pt.y);\n\t\t\t\t}\n\t\t\t\tOS.CombineRgn (region.handle, sysRgn, region.handle, OS.RGN_AND);\n\t\t\t}\n\t\t\tOS.DeleteObject(sysRgn);\n\t\t}\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 61,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (OS.IsWinCE) return SWT.FILL_EVEN_ODD;\n\treturn OS.GetPolyFillMode(handle) == OS.WINDING ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (OS.IsWinCE) return SWT.FILL_EVEN_ODD;\n\treturn OS.GetPolyFillMode(handle) == OS.WINDING ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (OS.IsWinCE) return SWT.FILL_EVEN_ODD;\n\treturn OS.GetPolyFillMode(handle) == OS.WINDING ? SWT.FILL_WINDING : SWT.FILL_EVEN_ODD;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 62,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint hFont = OS.GetCurrentObject(handle, OS.OBJ_FONT);\n\treturn Font.win32_new(data.device, hFont);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint hFont = OS.GetCurrentObject(handle, OS.OBJ_FONT);\n\treturn Font.win32_new(data.device, hFont);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint hFont = OS.GetCurrentObject(handle, OS.OBJ_FONT);\n\treturn Font.win32_new(data.device, hFont);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 63,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();\n\tOS.GetTextMetrics(handle, lptm);\n\treturn FontMetrics.win32_new(lptm);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();\n\tOS.GetTextMetrics(handle, lptm);\n\treturn FontMetrics.win32_new(lptm);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();\n\tOS.GetTextMetrics(handle, lptm);\n\treturn FontMetrics.win32_new(lptm);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 64,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint color = OS.GetTextColor(handle);\n\tif (color == OS.CLR_INVALID) {\n\t\tcolor = OS.GetSysColor(OS.COLOR_WINDOWTEXT);\n\t}\n\treturn Color.win32_new(data.device, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint color = OS.GetTextColor(handle);\n\tif (color == OS.CLR_INVALID) {\n\t\tcolor = OS.GetSysColor(OS.COLOR_WINDOWTEXT);\n\t}\n\treturn Color.win32_new(data.device, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint color = OS.GetTextColor(handle);\n\tif (color == OS.CLR_INVALID) {\n\t\tcolor = OS.GetSysColor(OS.COLOR_WINDOWTEXT);\n\t}\n\treturn Color.win32_new(data.device, color);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 65,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.foregroundPattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 66,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetInterpolationMode(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.InterpolationModeDefault: return SWT.DEFAULT;\n\t\tcase Gdip.InterpolationModeNearestNeighbor: return SWT.NONE;\n\t\tcase Gdip.InterpolationModeBilinear:\n\t\tcase Gdip.InterpolationModeLowQuality: return SWT.LOW;\n\t\tcase Gdip.InterpolationModeBicubic:\n\t\tcase Gdip.InterpolationModeHighQualityBilinear:\n\t\tcase Gdip.InterpolationModeHighQualityBicubic:\n\t\tcase Gdip.InterpolationModeHighQuality: return SWT.HIGH;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetInterpolationMode(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.InterpolationModeDefault: return SWT.DEFAULT;\n\t\tcase Gdip.InterpolationModeNearestNeighbor: return SWT.NONE;\n\t\tcase Gdip.InterpolationModeBilinear:\n\t\tcase Gdip.InterpolationModeLowQuality: return SWT.LOW;\n\t\tcase Gdip.InterpolationModeBicubic:\n\t\tcase Gdip.InterpolationModeHighQualityBilinear:\n\t\tcase Gdip.InterpolationModeHighQualityBicubic:\n\t\tcase Gdip.InterpolationModeHighQuality: return SWT.HIGH;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetInterpolationMode(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.InterpolationModeDefault: return SWT.DEFAULT;\n\t\tcase Gdip.InterpolationModeNearestNeighbor: return SWT.NONE;\n\t\tcase Gdip.InterpolationModeBilinear:\n\t\tcase Gdip.InterpolationModeLowQuality: return SWT.LOW;\n\t\tcase Gdip.InterpolationModeBicubic:\n\t\tcase Gdip.InterpolationModeHighQualityBilinear:\n\t\tcase Gdip.InterpolationModeHighQualityBicubic:\n\t\tcase Gdip.InterpolationModeHighQuality: return SWT.HIGH;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 67,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle | OS.PS_ENDCAP_FLAT;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_ENDCAP_MASK;\n\t}\n\tint cap = SWT.CAP_ROUND;\n\tswitch (style) {\n\t\tcase OS.PS_ENDCAP_ROUND: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.PS_ENDCAP_FLAT: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.PS_ENDCAP_SQUARE: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle | OS.PS_ENDCAP_FLAT;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_ENDCAP_MASK;\n\t}\n\tint cap = SWT.CAP_ROUND;\n\tswitch (style) {\n\t\tcase OS.PS_ENDCAP_ROUND: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.PS_ENDCAP_FLAT: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.PS_ENDCAP_SQUARE: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle | OS.PS_ENDCAP_FLAT;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_ENDCAP_MASK;\n\t}\n\tint cap = SWT.CAP_ROUND;\n\tswitch (style) {\n\t\tcase OS.PS_ENDCAP_ROUND: cap = SWT.CAP_ROUND; break;\n\t\tcase OS.PS_ENDCAP_FLAT: cap = SWT.CAP_FLAT; break;\n\t\tcase OS.PS_ENDCAP_SQUARE: cap = SWT.CAP_SQUARE; break;\n\t}\n\treturn cap;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 68,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.dashes == null) return null;\n\tint[] dashes = new int[data.dashes.length];\n\tSystem.arraycopy(data.dashes, 0, dashes, 0, dashes.length);\n\treturn dashes;\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.dashes == null) return null;\n\tint[] dashes = new int[data.dashes.length];\n\tSystem.arraycopy(data.dashes, 0, dashes, 0, dashes.length);\n\treturn dashes;\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.dashes == null) return null;\n\tint[] dashes = new int[data.dashes.length];\n\tSystem.arraycopy(data.dashes, 0, dashes, 0, dashes.length);\n\treturn dashes;\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 69,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle | OS.PS_JOIN_MITER;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_JOIN_MASK;\n\t}\n\tint join = SWT.JOIN_ROUND;\n\tswitch (style) {\n\t\tcase OS.PS_JOIN_MITER: join = SWT.JOIN_MITER; break;\n\t\tcase OS.PS_JOIN_ROUND: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.PS_JOIN_BEVEL: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle | OS.PS_JOIN_MITER;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_JOIN_MASK;\n\t}\n\tint join = SWT.JOIN_ROUND;\n\tswitch (style) {\n\t\tcase OS.PS_JOIN_MITER: join = SWT.JOIN_MITER; break;\n\t\tcase OS.PS_JOIN_ROUND: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.PS_JOIN_BEVEL: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle | OS.PS_JOIN_MITER;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_JOIN_MASK;\n\t}\n\tint join = SWT.JOIN_ROUND;\n\tswitch (style) {\n\t\tcase OS.PS_JOIN_MITER: join = SWT.JOIN_MITER; break;\n\t\tcase OS.PS_JOIN_ROUND: join = SWT.JOIN_ROUND; break;\n\t\tcase OS.PS_JOIN_BEVEL: join = SWT.JOIN_BEVEL; break;\n\t}\n\treturn join;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 70,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_STYLE_MASK;\n\t}\n\tswitch (style) {\n\t\tcase OS.PS_SOLID:\t\treturn SWT.LINE_SOLID;\n\t\tcase OS.PS_DASH:\t\treturn SWT.LINE_DASH;\n\t\tcase OS.PS_DOT:\t\t\treturn SWT.LINE_DOT;\n\t\tcase OS.PS_DASHDOT:\t\treturn SWT.LINE_DASHDOT;\n\t\tcase OS.PS_DASHDOTDOT:\treturn SWT.LINE_DASHDOTDOT;\n\t\tcase OS.PS_USERSTYLE:\treturn SWT.LINE_CUSTOM;\n\t\tdefault:\t\t\t\treturn SWT.LINE_SOLID;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_STYLE_MASK;\n\t}\n\tswitch (style) {\n\t\tcase OS.PS_SOLID:\t\treturn SWT.LINE_SOLID;\n\t\tcase OS.PS_DASH:\t\treturn SWT.LINE_DASH;\n\t\tcase OS.PS_DOT:\t\t\treturn SWT.LINE_DOT;\n\t\tcase OS.PS_DASHDOT:\t\treturn SWT.LINE_DASHDOT;\n\t\tcase OS.PS_DASHDOTDOT:\treturn SWT.LINE_DASHDOTDOT;\n\t\tcase OS.PS_USERSTYLE:\treturn SWT.LINE_CUSTOM;\n\t\tdefault:\t\t\t\treturn SWT.LINE_SOLID;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint style, size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\tstyle = logPen.lopnStyle;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\tstyle = logPen.elpPenStyle & OS.PS_STYLE_MASK;\n\t}\n\tswitch (style) {\n\t\tcase OS.PS_SOLID:\t\treturn SWT.LINE_SOLID;\n\t\tcase OS.PS_DASH:\t\treturn SWT.LINE_DASH;\n\t\tcase OS.PS_DOT:\t\t\treturn SWT.LINE_DOT;\n\t\tcase OS.PS_DASHDOT:\t\treturn SWT.LINE_DASHDOT;\n\t\tcase OS.PS_DASHDOTDOT:\treturn SWT.LINE_DASHDOTDOT;\n\t\tcase OS.PS_USERSTYLE:\treturn SWT.LINE_CUSTOM;\n\t\tdefault:\t\t\t\treturn SWT.LINE_SOLID;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 71,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\treturn logPen.x;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\treturn logPen.elpWidth;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\treturn logPen.x;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\treturn logPen.elpWidth;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint size;\n\tint hPen = OS.GetCurrentObject(handle, OS.OBJ_PEN);\n\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {\n\t\tLOGPEN logPen = new LOGPEN();\n\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);\n\t\treturn logPen.x;\n\t} else {\n\t\tEXTLOGPEN logPen = new EXTLOGPEN();\n\t\tif (size <= EXTLOGPEN.sizeof) {\n\t\t\tOS.GetObject(hPen, size, logPen);\n\t\t} else {\n\t\t\tint hHeap = OS.GetProcessHeap();\n\t\t\tint ptr = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);\n\t\t\tOS.GetObject(hPen, size, ptr);\n\t\t\tOS.MoveMemory(logPen, ptr, EXTLOGPEN.sizeof);\n\t\t\tOS.HeapFree(hHeap, 0, ptr);\n\t\t}\n\t\treturn logPen.elpWidth;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 72,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\treturn data.style;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 73,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetTextRenderingHint(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.TextRenderingHintSystemDefault: return SWT.DEFAULT;\n\t\tcase Gdip.TextRenderingHintSingleBitPerPixel:\n\t\tcase Gdip.TextRenderingHintSingleBitPerPixelGridFit: return SWT.OFF;\n\t\tcase Gdip.TextRenderingHintAntiAlias:\n\t\tcase Gdip.TextRenderingHintAntiAliasGridFit:\n\t\tcase Gdip.TextRenderingHintClearTypeGridFit: return SWT.ON;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetTextRenderingHint(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.TextRenderingHintSystemDefault: return SWT.DEFAULT;\n\t\tcase Gdip.TextRenderingHintSingleBitPerPixel:\n\t\tcase Gdip.TextRenderingHintSingleBitPerPixelGridFit: return SWT.OFF;\n\t\tcase Gdip.TextRenderingHintAntiAlias:\n\t\tcase Gdip.TextRenderingHintAntiAliasGridFit:\n\t\tcase Gdip.TextRenderingHintClearTypeGridFit: return SWT.ON;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (data.gdipGraphics == 0) return SWT.DEFAULT;\n\tint mode = Gdip.Graphics_GetTextRenderingHint(data.gdipGraphics);\n\tswitch (mode) {\n\t\tcase Gdip.TextRenderingHintSystemDefault: return SWT.DEFAULT;\n\t\tcase Gdip.TextRenderingHintSingleBitPerPixel:\n\t\tcase Gdip.TextRenderingHintSingleBitPerPixelGridFit: return SWT.OFF;\n\t\tcase Gdip.TextRenderingHintAntiAlias:\n\t\tcase Gdip.TextRenderingHintAntiAliasGridFit:\n\t\tcase Gdip.TextRenderingHintClearTypeGridFit: return SWT.ON;\n\t}\n\treturn SWT.DEFAULT;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 74,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tGdip.Graphics_GetTransform(gdipGraphics, transform.handle);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tGdip.Graphics_GetTransform(gdipGraphics, transform.handle);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tint gdipGraphics = data.gdipGraphics;\n\tif (gdipGraphics != 0) {\n\t\tGdip.Graphics_GetTransform(gdipGraphics, transform.handle);\n\t} else {\n\t\ttransform.setElements(1, 0, 0, 1, 0, 0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 75,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2 (handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2 (handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\treturn rop2 == OS.R2_XORPEN;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2 (handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2 (handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\treturn rop2 == OS.R2_XORPEN;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint rop2 = 0;\n\tif (OS.IsWinCE) {\n\t\trop2 = OS.SetROP2 (handle, OS.R2_COPYPEN);\n\t\tOS.SetROP2 (handle, rop2);\n\t} else {\n\t\trop2 = OS.GetROP2(handle);\n\t}\n\treturn rop2 == OS.R2_XORPEN;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 79,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint region = OS.CreateRectRgn(0, 0, 0, 0);\n\tint result = OS.GetClipRgn(handle, region);\n\tOS.DeleteObject(region);\n\treturn result > 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint region = OS.CreateRectRgn(0, 0, 0, 0);\n\tint result = OS.GetClipRgn(handle, region);\n\tOS.DeleteObject(region);\n\treturn result > 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint region = OS.CreateRectRgn(0, 0, 0, 0);\n\tint result = OS.GetClipRgn(handle, region);\n\tOS.DeleteObject(region);\n\treturn result > 0;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 82,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (advanced && data.gdipGraphics != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitGdip(false, false);\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tif (data.gdipGraphics != 0) Gdip.Graphics_delete(data.gdipGraphics);\n\t\tif (data.gdipPen != 0) Gdip.Pen_delete(data.gdipPen);\n\t\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipGraphics = data.gdipBrush = data.gdipPen = 0;\n\t\tdata.alpha = 0xFF;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (advanced && data.gdipGraphics != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitGdip(false, false);\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tif (data.gdipGraphics != 0) Gdip.Graphics_delete(data.gdipGraphics);\n\t\tif (data.gdipPen != 0) Gdip.Pen_delete(data.gdipPen);\n\t\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipGraphics = data.gdipBrush = data.gdipPen = 0;\n\t\tdata.alpha = 0xFF;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (advanced && data.gdipGraphics != 0) return;\n\tif (advanced) {\n\t\ttry {\n\t\t\tinitGdip(false, false);\n\t\t} catch (SWTException e) {}\n\t} else {\n\t\tif (data.gdipGraphics != 0) Gdip.Graphics_delete(data.gdipGraphics);\n\t\tif (data.gdipPen != 0) Gdip.Pen_delete(data.gdipPen);\n\t\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipGraphics = data.gdipBrush = data.gdipPen = 0;\n\t\tdata.alpha = 0xFF;\n\t\tdata.backgroundPattern = data.foregroundPattern = null;\n\t\tsetClipping(0);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 83,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint mode = 0;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\tmode = Gdip.SmoothingModeDefault;\n\t\t\tbreak;\n\t\tcase SWT.OFF:\n\t\t\tmode = Gdip.SmoothingModeNone;\n\t\t\tbreak;\n\t\tcase SWT.ON:\n\t\t\tmode = Gdip.SmoothingModeAntiAlias;\n\t\t\tbreak;\t\t\t\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetSmoothingMode(data.gdipGraphics, mode);\n}",
        "accuracyTokens" : 0.8522727272727273,
        "accuracyCharacters" : 0.8689516129032258
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint mode = 0;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\tmode = Gdip.SmoothingModeDefault;\n\t\t\tbreak;\n\t\tcase SWT.OFF:\n\t\t\tmode = Gdip.SmoothingModeNone;\n\t\t\tbreak;\n\t\tcase SWT.ON:\n\t\t\tmode = Gdip.SmoothingModeAntiAlias;\n\t\t\tbreak;\t\t\t\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetSmoothingMode(data.gdipGraphics, mode);\n}",
        "accuracyTokens" : 0.9886363636363636,
        "accuracyCharacters" : 0.9798387096774194
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint mode = 0;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\tmode = Gdip.SmoothingModeDefault;\n\t\t\tbreak;\n\t\tcase SWT.OFF:\n\t\t\tmode = Gdip.SmoothingModeNone;\n\t\t\tbreak;\n\t\tcase SWT.ON:\n\t\t\tmode = Gdip.SmoothingModeAntiAlias;\n\t\t\tbreak;\t\t\t\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetSmoothingMode(data.gdipGraphics, mode);\n}",
        "accuracyTokens" : 0.7941176470588235,
        "accuracyCharacters" : 0.815929203539823
      } ],
      "memberId" : "1594c47d340c9ce46b1f3707cdf3d9b7"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 84,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tinitGdip(false, false);\n\tdata.alpha = alpha & 0xFF;\n\tif (data.gdipPen != 0) {\n\t\tGdip.Pen_delete(data.gdipPen);\n\t\tdata.gdipPen = 0;\n\t}\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tinitGdip(false, false);\n\tdata.alpha = alpha & 0xFF;\n\tif (data.gdipPen != 0) {\n\t\tGdip.Pen_delete(data.gdipPen);\n\t\tdata.gdipPen = 0;\n\t}\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tinitGdip(false, false);\n\tdata.alpha = alpha & 0xFF;\n\tif (data.gdipPen != 0) {\n\t\tGdip.Pen_delete(data.gdipPen);\n\t\tdata.gdipPen = 0;\n\t}\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 85,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backgroundPattern != null) {\n\t\tif (data.gdipBrush != 0) {\n\t\t\tdestroyGdipBrush(data.gdipBrush);\n\t\t\tdata.gdipBrush = 0;\n\t\t}\n\t\tdata.backgroundPattern = null;\n\t}\n\tif (OS.GetBkColor(handle) == color.handle) return;\n\tdata.background = color.handle;\n\tOS.SetBkColor (handle, color.handle);\n\tint newBrush = OS.CreateSolidBrush (color.handle);\n\tOS.SelectObject (handle, newBrush);\n\tif (data.hBrush != 0) OS.DeleteObject (data.hBrush);\n\tdata.hBrush = newBrush;\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backgroundPattern != null) {\n\t\tif (data.gdipBrush != 0) {\n\t\t\tdestroyGdipBrush(data.gdipBrush);\n\t\t\tdata.gdipBrush = 0;\n\t\t}\n\t\tdata.backgroundPattern = null;\n\t}\n\tif (OS.GetBkColor(handle) == color.handle) return;\n\tdata.background = color.handle;\n\tOS.SetBkColor (handle, color.handle);\n\tint newBrush = OS.CreateSolidBrush (color.handle);\n\tOS.SelectObject (handle, newBrush);\n\tif (data.hBrush != 0) OS.DeleteObject (data.hBrush);\n\tdata.hBrush = newBrush;\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.backgroundPattern != null) {\n\t\tif (data.gdipBrush != 0) {\n\t\t\tdestroyGdipBrush(data.gdipBrush);\n\t\t\tdata.gdipBrush = 0;\n\t\t}\n\t\tdata.backgroundPattern = null;\n\t}\n\tif (OS.GetBkColor(handle) == color.handle) return;\n\tdata.background = color.handle;\n\tOS.SetBkColor (handle, color.handle);\n\tint newBrush = OS.CreateSolidBrush (color.handle);\n\tOS.SelectObject (handle, newBrush);\n\tif (data.hBrush != 0) OS.DeleteObject (data.hBrush);\n\tdata.hBrush = newBrush;\n\tif (data.gdipBrush != 0) {\n\t\tdestroyGdipBrush(data.gdipBrush);\n\t\tdata.gdipBrush = 0;\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 86,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\tif (pattern != null) {\n\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);\n\t} else {\n\t\tdata.gdipBrush = 0;\n\t}\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\tif (pattern != null) {\n\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);\n\t} else {\n\t\tdata.gdipBrush = 0;\n\t}\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);\n\tif (pattern != null) {\n\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);\n\t} else {\n\t\tdata.gdipBrush = 0;\n\t}\n\tdata.backgroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 88,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint hRgn = OS.CreateRectRgn(x, y, x + width, y + height);\n\tsetClipping(hRgn);\n\tOS.DeleteObject(hRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint hRgn = OS.CreateRectRgn(x, y, x + width, y + height);\n\tsetClipping(hRgn);\n\tOS.DeleteObject(hRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint hRgn = OS.CreateRectRgn(x, y, x + width, y + height);\n\tsetClipping(hRgn);\n\tOS.DeleteObject(hRgn);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 89,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\t\tGdip.GraphicsPath_SetFillMode(path.handle, mode);\n\t\tGdip.Graphics_SetClip(data.gdipGraphics, path.handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\t\tGdip.GraphicsPath_SetFillMode(path.handle, mode);\n\t\tGdip.Graphics_SetClip(data.gdipGraphics, path.handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (path != null && path.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tsetClipping(0);\n\tif (path != null) {\n\t\tint mode = OS.GetPolyFillMode(handle) == OS.WINDING ? Gdip.FillModeWinding : Gdip.FillModeAlternate;\n\t\tGdip.GraphicsPath_SetFillMode(path.handle, mode);\n\t\tGdip.Graphics_SetClip(data.gdipGraphics, path.handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 90,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (rect == null) {\n\t\tsetClipping(0);\n\t} else {\n\t\tsetClipping(rect.x, rect.y, rect.width, rect.height);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 91,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (region != null && region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tsetClipping(region != null ? region.handle : 0);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 92,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (OS.IsWinCE) return;\n\tint mode = OS.ALTERNATE;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING: mode = OS.WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD: mode = OS.ALTERNATE; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.SetPolyFillMode(handle, mode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (OS.IsWinCE) return;\n\tint mode = OS.ALTERNATE;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING: mode = OS.WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD: mode = OS.ALTERNATE; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.SetPolyFillMode(handle, mode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (OS.IsWinCE) return;\n\tint mode = OS.ALTERNATE;\n\tswitch (rule) {\n\t\tcase SWT.FILL_WINDING: mode = OS.WINDING; break;\n\t\tcase SWT.FILL_EVEN_ODD: mode = OS.ALTERNATE; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.SetPolyFillMode(handle, mode);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 93,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (font == null) {\n\t\tOS.SelectObject(handle, data.device.systemFont);\n\t} else {\n\t\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\tOS.SelectObject(handle, font.handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (font == null) {\n\t\tOS.SelectObject(handle, data.device.systemFont);\n\t} else {\n\t\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\tOS.SelectObject(handle, font.handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (font == null) {\n\t\tOS.SelectObject(handle, data.device.systemFont);\n\t} else {\n\t\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\tOS.SelectObject(handle, font.handle);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 94,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.foregroundPattern != null) {\n\t\tif (data.gdipPen != 0) {\n\t\t\tGdip.Pen_delete(data.gdipPen);\n\t\t\tdata.gdipPen = 0;\n\t\t}\n\t\tdata.foregroundPattern = null;\t\t\n\t}\n\tif (OS.GetTextColor(handle) == color.handle) return;\n\tdata.foreground = color.handle;\n\tOS.SetTextColor(handle, color.handle);\n\tsetPen(color.handle, -1, -1, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.foregroundPattern != null) {\n\t\tif (data.gdipPen != 0) {\n\t\t\tGdip.Pen_delete(data.gdipPen);\n\t\t\tdata.gdipPen = 0;\n\t\t}\n\t\tdata.foregroundPattern = null;\t\t\n\t}\n\tif (OS.GetTextColor(handle) == color.handle) return;\n\tdata.foreground = color.handle;\n\tOS.SetTextColor(handle, color.handle);\n\tsetPen(color.handle, -1, -1, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (color == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\n\tif (color.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.foregroundPattern != null) {\n\t\tif (data.gdipPen != 0) {\n\t\t\tGdip.Pen_delete(data.gdipPen);\n\t\t\tdata.gdipPen = 0;\n\t\t}\n\t\tdata.foregroundPattern = null;\t\t\n\t}\n\tif (OS.GetTextColor(handle) == color.handle) return;\n\tdata.foreground = color.handle;\n\tOS.SetTextColor(handle, color.handle);\n\tsetPen(color.handle, -1, -1, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 95,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (pattern != null) {\n\t\tif (data.gdipPen != 0) Gdip.Pen_SetBrush(data.gdipPen, pattern.handle);\n\t} else {\n\t\tif (data.gdipPen != 0) {\n\t\t\tGdip.Pen_delete(data.gdipPen);\n\t\t\tdata.gdipPen = 0;\n\t\t}\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (pattern != null) {\n\t\tif (data.gdipPen != 0) Gdip.Pen_SetBrush(data.gdipPen, pattern.handle);\n\t} else {\n\t\tif (data.gdipPen != 0) {\n\t\t\tGdip.Pen_delete(data.gdipPen);\n\t\t\tdata.gdipPen = 0;\n\t\t}\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (pattern != null) {\n\t\tif (data.gdipPen != 0) Gdip.Pen_SetBrush(data.gdipPen, pattern.handle);\n\t} else {\n\t\tif (data.gdipPen != 0) {\n\t\t\tGdip.Pen_delete(data.gdipPen);\n\t\t\tdata.gdipPen = 0;\n\t\t}\n\t}\n\tdata.foregroundPattern = pattern;\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 96,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint mode = 0;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT: mode = Gdip.InterpolationModeDefault; break;\n\t\tcase SWT.NONE: mode = Gdip.InterpolationModeNearestNeighbor; break;\n\t\tcase SWT.LOW: mode = Gdip.InterpolationModeLowQuality; break;\n\t\tcase SWT.HIGH: mode = Gdip.InterpolationModeHighQuality; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetInterpolationMode(data.gdipGraphics, mode);\n}",
        "accuracyTokens" : 0.8686868686868687,
        "accuracyCharacters" : 0.8808290155440415
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint mode = 0;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT: mode = Gdip.InterpolationModeDefault; break;\n\t\tcase SWT.NONE: mode = Gdip.InterpolationModeNearestNeighbor; break;\n\t\tcase SWT.LOW: mode = Gdip.InterpolationModeLowQuality; break;\n\t\tcase SWT.HIGH: mode = Gdip.InterpolationModeHighQuality; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetInterpolationMode(data.gdipGraphics, mode);\n}",
        "accuracyTokens" : 0.9797979797979798,
        "accuracyCharacters" : 0.9671848013816926
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint mode = 0;\n\tswitch (interpolation) {\n\t\tcase SWT.DEFAULT: mode = Gdip.InterpolationModeDefault; break;\n\t\tcase SWT.NONE: mode = Gdip.InterpolationModeNearestNeighbor; break;\n\t\tcase SWT.LOW: mode = Gdip.InterpolationModeLowQuality; break;\n\t\tcase SWT.HIGH: mode = Gdip.InterpolationModeHighQuality; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetInterpolationMode(data.gdipGraphics, mode);\n}",
        "accuracyTokens" : 0.8141592920353983,
        "accuracyCharacters" : 0.8400621118012422
      } ],
      "memberId" : "d575c0201ab41f98613eb841117799bd"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 97,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint capStyle = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcapStyle = OS.PS_ENDCAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcapStyle = OS.PS_ENDCAP_FLAT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcapStyle = OS.PS_ENDCAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tsetPen(-1, -1, -1, capStyle, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint capStyle = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcapStyle = OS.PS_ENDCAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcapStyle = OS.PS_ENDCAP_FLAT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcapStyle = OS.PS_ENDCAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tsetPen(-1, -1, -1, capStyle, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint capStyle = 0;\n\tswitch (cap) {\n\t\tcase SWT.CAP_ROUND:\n\t\t\tcapStyle = OS.PS_ENDCAP_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.CAP_FLAT:\n\t\t\tcapStyle = OS.PS_ENDCAP_FLAT;\n\t\t\tbreak;\n\t\tcase SWT.CAP_SQUARE:\n\t\t\tcapStyle = OS.PS_ENDCAP_SQUARE;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tsetPen(-1, -1, -1, capStyle, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 98,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (dashes != null && dashes.length > 0) {\n\t\tdata.dashes = new int[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdata.dashes[i] = dash;\n\t\t}\n\t} else {\n\t\tdata.dashes = null;\n\t}\n\tsetPen(-1, -1, data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE, -1, -1, data.dashes);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (dashes != null && dashes.length > 0) {\n\t\tdata.dashes = new int[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdata.dashes[i] = dash;\n\t\t}\n\t} else {\n\t\tdata.dashes = null;\n\t}\n\tsetPen(-1, -1, data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE, -1, -1, data.dashes);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (dashes != null && dashes.length > 0) {\n\t\tdata.dashes = new int[dashes.length];\n\t\tfor (int i = 0; i < dashes.length; i++) {\n\t\t\tint dash = dashes[i];\n\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t\t\tdata.dashes[i] = dash;\n\t\t}\n\t} else {\n\t\tdata.dashes = null;\n\t}\n\tsetPen(-1, -1, data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE, -1, -1, data.dashes);\t\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 99,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint joinStyle = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoinStyle = OS.PS_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoinStyle = OS.PS_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoinStyle = OS.PS_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tsetPen(-1, -1, -1, -1, joinStyle, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint joinStyle = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoinStyle = OS.PS_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoinStyle = OS.PS_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoinStyle = OS.PS_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tsetPen(-1, -1, -1, -1, joinStyle, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint joinStyle = 0;\n\tswitch (join) {\n\t\tcase SWT.JOIN_MITER:\n\t\t\tjoinStyle = OS.PS_JOIN_MITER;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_ROUND:\n\t\t\tjoinStyle = OS.PS_JOIN_ROUND;\n\t\t\tbreak;\n\t\tcase SWT.JOIN_BEVEL:\n\t\t\tjoinStyle = OS.PS_JOIN_BEVEL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tsetPen(-1, -1, -1, -1, joinStyle, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 100,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint style = -1;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:      style = OS.PS_SOLID; break;\n\t\tcase SWT.LINE_DASH:       style = OS.PS_DASH; break;\n\t\tcase SWT.LINE_DOT:        style = OS.PS_DOT; break;\n\t\tcase SWT.LINE_DASHDOT:    style = OS.PS_DASHDOT; break;\n\t\tcase SWT.LINE_DASHDOTDOT: style = OS.PS_DASHDOTDOT; break;\n\t\tcase SWT.LINE_CUSTOM:     style = data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.SetBkMode (handle, style == OS.PS_SOLID ? OS.OPAQUE : OS.TRANSPARENT);\n\tsetPen(-1, -1, style, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint style = -1;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:      style = OS.PS_SOLID; break;\n\t\tcase SWT.LINE_DASH:       style = OS.PS_DASH; break;\n\t\tcase SWT.LINE_DOT:        style = OS.PS_DOT; break;\n\t\tcase SWT.LINE_DASHDOT:    style = OS.PS_DASHDOT; break;\n\t\tcase SWT.LINE_DASHDOTDOT: style = OS.PS_DASHDOTDOT; break;\n\t\tcase SWT.LINE_CUSTOM:     style = data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.SetBkMode (handle, style == OS.PS_SOLID ? OS.OPAQUE : OS.TRANSPARENT);\n\tsetPen(-1, -1, style, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint style = -1;\n\tswitch (lineStyle) {\n\t\tcase SWT.LINE_SOLID:      style = OS.PS_SOLID; break;\n\t\tcase SWT.LINE_DASH:       style = OS.PS_DASH; break;\n\t\tcase SWT.LINE_DOT:        style = OS.PS_DOT; break;\n\t\tcase SWT.LINE_DASHDOT:    style = OS.PS_DASHDOT; break;\n\t\tcase SWT.LINE_DASHDOTDOT: style = OS.PS_DASHDOTDOT; break;\n\t\tcase SWT.LINE_CUSTOM:     style = data.dashes == null ? OS.PS_SOLID : OS.PS_USERSTYLE; break;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tOS.SetBkMode (handle, style == OS.PS_SOLID ? OS.OPAQUE : OS.TRANSPARENT);\n\tsetPen(-1, -1, style, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 101,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tsetPen(-1, lineWidth, -1, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tsetPen(-1, lineWidth, -1, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tsetPen(-1, lineWidth, -1, -1, -1, data.dashes);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 103,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tOS.SetROP2(handle, xor ? OS.R2_XORPEN : OS.R2_COPYPEN);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tOS.SetROP2(handle, xor ? OS.R2_XORPEN : OS.R2_COPYPEN);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tOS.SetROP2(handle, xor ? OS.R2_XORPEN : OS.R2_COPYPEN);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 104,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tint textMode = 0;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\ttextMode = Gdip.TextRenderingHintSystemDefault;\n\t\t\tbreak;\n\t\tcase SWT.OFF:\n\t\t\ttextMode = Gdip.TextRenderingHintSingleBitPerPixelGridFit;\n\t\t\tbreak;\n\t\tcase SWT.ON:\n\t\t\tint[] type = new int[1];\n\t\t\tOS.SystemParametersInfo(OS.SPI_GETFONTSMOOTHINGTYPE, 0, type, 0);\n\t\t\tif (type[0] == OS.FE_FONTSMOOTHINGCLEARTYPE) {\n\t\t\t\ttextMode = Gdip.TextRenderingHintClearTypeGridFit;\n\t\t\t} else {\n\t\t\t\ttextMode = Gdip.TextRenderingHintAntiAliasGridFit;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetTextRenderingHint(data.gdipGraphics, textMode);\n}",
        "accuracyTokens" : 0.8951612903225806,
        "accuracyCharacters" : 0.9168797953964194
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tint textMode = 0;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\ttextMode = Gdip.TextRenderingHintSystemDefault;\n\t\t\tbreak;\n\t\tcase SWT.OFF:\n\t\t\ttextMode = Gdip.TextRenderingHintSingleBitPerPixelGridFit;\n\t\t\tbreak;\n\t\tcase SWT.ON:\n\t\t\tint[] type = new int[1];\n\t\t\tOS.SystemParametersInfo(OS.SPI_GETFONTSMOOTHINGTYPE, 0, type, 0);\n\t\t\tif (type[0] == OS.FE_FONTSMOOTHINGCLEARTYPE) {\n\t\t\t\ttextMode = Gdip.TextRenderingHintClearTypeGridFit;\n\t\t\t} else {\n\t\t\t\ttextMode = Gdip.TextRenderingHintAntiAliasGridFit;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetTextRenderingHint(data.gdipGraphics, textMode);\n}",
        "accuracyTokens" : 0.9919354838709677,
        "accuracyCharacters" : 0.9872122762148338
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tint textMode = 0;\n\tswitch (antialias) {\n\t\tcase SWT.DEFAULT:\n\t\t\ttextMode = Gdip.TextRenderingHintSystemDefault;\n\t\t\tbreak;\n\t\tcase SWT.OFF:\n\t\t\ttextMode = Gdip.TextRenderingHintSingleBitPerPixelGridFit;\n\t\t\tbreak;\n\t\tcase SWT.ON:\n\t\t\tint[] type = new int[1];\n\t\t\tOS.SystemParametersInfo(OS.SPI_GETFONTSMOOTHINGTYPE, 0, type, 0);\n\t\t\tif (type[0] == OS.FE_FONTSMOOTHINGCLEARTYPE) {\n\t\t\t\ttextMode = Gdip.TextRenderingHintClearTypeGridFit;\n\t\t\t} else {\n\t\t\t\ttextMode = Gdip.TextRenderingHintAntiAliasGridFit;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\t}\n\tinitGdip(false, false);\n\tGdip.Graphics_SetTextRenderingHint(data.gdipGraphics, textMode);\n}",
        "accuracyTokens" : 0.8478260869565217,
        "accuracyCharacters" : 0.8777908343125734
      } ],
      "memberId" : "8a7d1655e9cb5f1b42f5ca371de1769f"
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 105,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (transform != null) {\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, transform.handle);\n\t} else {\n\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);\n\t\tGdip.Matrix_delete(identity);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (transform != null) {\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, transform.handle);\n\t} else {\n\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);\n\t\tGdip.Matrix_delete(identity);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tinitGdip(false, false);\n\tif (transform != null) {\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, transform.handle);\n\t} else {\n\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);\n\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);\n\t\tGdip.Matrix_delete(identity);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 106,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tint length = string.length();\n\tif (data.gdipGraphics != 0) {\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tRectF bounds = new RectF();\n\t\tchar[] buffer;\n\t\tif (length != 0) {\n\t\t\tbuffer = new char [length];\n\t\t\tstring.getChars(0, length, buffer, 0);\n\t\t} else {\n\t\t\tbuffer = new char[]{' '};\n\t\t}\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, font, pt, format, bounds);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));\n\t}\n\tSIZE size = new SIZE();\n\tif (length == 0) {\n//\t\tOS.GetTextExtentPoint32(handle, SPACE, SPACE.length(), size);\n\t\tOS.GetTextExtentPoint32W(handle, new char[]{' '}, 1, size);\n\t\treturn new Point(0, size.cy);\n\t} else {\n//\t\tTCHAR buffer = new TCHAR (getCodePage(), string, false);\n\t\tchar[] buffer = new char [length];\n\t\tstring.getChars(0, length, buffer, 0);\n\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);\n\t\treturn new Point(size.cx, size.cy);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tint length = string.length();\n\tif (data.gdipGraphics != 0) {\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tRectF bounds = new RectF();\n\t\tchar[] buffer;\n\t\tif (length != 0) {\n\t\t\tbuffer = new char [length];\n\t\t\tstring.getChars(0, length, buffer, 0);\n\t\t} else {\n\t\t\tbuffer = new char[]{' '};\n\t\t}\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, font, pt, format, bounds);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));\n\t}\n\tSIZE size = new SIZE();\n\tif (length == 0) {\n//\t\tOS.GetTextExtentPoint32(handle, SPACE, SPACE.length(), size);\n\t\tOS.GetTextExtentPoint32W(handle, new char[]{' '}, 1, size);\n\t\treturn new Point(0, size.cy);\n\t} else {\n//\t\tTCHAR buffer = new TCHAR (getCodePage(), string, false);\n\t\tchar[] buffer = new char [length];\n\t\tstring.getChars(0, length, buffer, 0);\n\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);\n\t\treturn new Point(size.cx, size.cy);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tint length = string.length();\n\tif (data.gdipGraphics != 0) {\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tRectF bounds = new RectF();\n\t\tchar[] buffer;\n\t\tif (length != 0) {\n\t\t\tbuffer = new char [length];\n\t\t\tstring.getChars(0, length, buffer, 0);\n\t\t} else {\n\t\t\tbuffer = new char[]{' '};\n\t\t}\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, font, pt, format, bounds);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));\n\t}\n\tSIZE size = new SIZE();\n\tif (length == 0) {\n//\t\tOS.GetTextExtentPoint32(handle, SPACE, SPACE.length(), size);\n\t\tOS.GetTextExtentPoint32W(handle, new char[]{' '}, 1, size);\n\t\treturn new Point(0, size.cy);\n\t} else {\n//\t\tTCHAR buffer = new TCHAR (getCodePage(), string, false);\n\t\tchar[] buffer = new char [length];\n\t\tstring.getChars(0, length, buffer, 0);\n\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);\n\t\treturn new Point(size.cx, size.cy);\n\t}\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    }, {
      "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendationSet",
      "repository" : "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git",
      "commitId" : "5cbbc879318e05f5113c60527173d0db03d6a035",
      "fileName" : "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java",
      "methodNumber" : 108,
      "recommendations" : [ {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (string == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tRectF bounds = new RectF();\n\t\tchar[] buffer;\n\t\tint length = string.length();\n\t\tif (length != 0) {\n\t\t\tbuffer = new char [length];\n\t\t\tstring.getChars(0, length, buffer, 0);\n\t\t} else {\n\t\t\tbuffer = new char[]{' '};\n\t\t}\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];\n\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); \n\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);\n\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, font, pt, format, bounds);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));\n\t}\n\tif (string.length () == 0) {\n\t\tSIZE size = new SIZE();\n//\t\tOS.GetTextExtentPoint32(handle, SPACE, SPACE.length(), size);\n\t\tOS.GetTextExtentPoint32W(handle, new char [] {' '}, 1, size);\n\t\treturn new Point(0, size.cy);\n\t}\n\tRECT rect = new RECT();\n\tTCHAR buffer = new TCHAR(getCodePage(), string, false);\n\tint uFormat = OS.DT_LEFT | OS.DT_CALCRECT;\n\tif ((flags & SWT.DRAW_DELIMITER) == 0) uFormat |= OS.DT_SINGLELINE;\n\tif ((flags & SWT.DRAW_TAB) != 0) uFormat |= OS.DT_EXPANDTABS;\n\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;\n\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat);\n\treturn new Point(rect.right, rect.bottom);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\tif (string == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tRectF bounds = new RectF();\n\t\tchar[] buffer;\n\t\tint length = string.length();\n\t\tif (length != 0) {\n\t\t\tbuffer = new char [length];\n\t\t\tstring.getChars(0, length, buffer, 0);\n\t\t} else {\n\t\t\tbuffer = new char[]{' '};\n\t\t}\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];\n\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); \n\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);\n\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, font, pt, format, bounds);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));\n\t}\n\tif (string.length () == 0) {\n\t\tSIZE size = new SIZE();\n//\t\tOS.GetTextExtentPoint32(handle, SPACE, SPACE.length(), size);\n\t\tOS.GetTextExtentPoint32W(handle, new char [] {' '}, 1, size);\n\t\treturn new Point(0, size.cy);\n\t}\n\tRECT rect = new RECT();\n\tTCHAR buffer = new TCHAR(getCodePage(), string, false);\n\tint uFormat = OS.DT_LEFT | OS.DT_CALCRECT;\n\tif ((flags & SWT.DRAW_DELIMITER) == 0) uFormat |= OS.DT_SINGLELINE;\n\tif ((flags & SWT.DRAW_TAB) != 0) uFormat |= OS.DT_EXPANDTABS;\n\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;\n\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat);\n\treturn new Point(rect.right, rect.bottom);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      }, {
        "@class" : "de.fau.cs.inf2.cas.ares.io.AresRecommendation",
        "methodBlock" : " {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\tif (string == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\n\tif (data.gdipGraphics != 0) {\n\t\tint font = createGdipFont();\n\t\tPointF pt = new PointF();\n\t\tRectF bounds = new RectF();\n\t\tchar[] buffer;\n\t\tint length = string.length();\n\t\tif (length != 0) {\n\t\t\tbuffer = new char [length];\n\t\t\tstring.getChars(0, length, buffer, 0);\n\t\t} else {\n\t\t\tbuffer = new char[]{' '};\n\t\t}\n\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());\n\t\tGdip.StringFormat_SetFormatFlags(format, Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces);\n\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];\n\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); \n\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);\n\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, font, pt, format, bounds);\n\t\tGdip.StringFormat_delete(format);\n\t\tGdip.Font_delete(font);\n\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));\n\t}\n\tif (string.length () == 0) {\n\t\tSIZE size = new SIZE();\n//\t\tOS.GetTextExtentPoint32(handle, SPACE, SPACE.length(), size);\n\t\tOS.GetTextExtentPoint32W(handle, new char [] {' '}, 1, size);\n\t\treturn new Point(0, size.cy);\n\t}\n\tRECT rect = new RECT();\n\tTCHAR buffer = new TCHAR(getCodePage(), string, false);\n\tint uFormat = OS.DT_LEFT | OS.DT_CALCRECT;\n\tif ((flags & SWT.DRAW_DELIMITER) == 0) uFormat |= OS.DT_SINGLELINE;\n\tif ((flags & SWT.DRAW_TAB) != 0) uFormat |= OS.DT_EXPANDTABS;\n\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;\n\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat);\n\treturn new Point(rect.right, rect.bottom);\n}",
        "accuracyTokens" : -1.0,
        "accuracyCharacters" : -1.0
      } ]
    } ],
    "foundMembers" : 15,
    "numberOfRecommendationSets" : 356,
    "precision" : 0.042134831460674156,
    "recall" : 1.0,
    "accuracyTokensMin" : 0.7624764386831121,
    "accuracyCharactersMin" : 0.7944251055238258,
    "patternOriginal" : "\n\t//# match (original) {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//# }",
    "patternModified" : "\n\t//# match (modified) {\n\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\n\t//# choice {\n\t//# case {\n\tif (data.cairo == 0 && antialias == SWT.DEFAULT) return;\n\t//# }\n\t//# case {\n\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\n\tif (data.cairo == 0 && pattern == null) return;\n\t//# }\n\t//# }\n\t//# }",
    "patternCreationTimeInNanoSec" : 8836551448,
    "patternUseTimeInNanoSec" : 51202748419,
    "accuracyTokensMax" : 0.9508026520445908,
    "accuracyCharactersMax" : 0.9536618303559496
  } ]
}